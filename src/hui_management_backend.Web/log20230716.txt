2023-07-16 17:53:09.915 +07:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-16 17:53:09.996 +07:00 [INF] Executed DbCommand (41ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-07-16 17:53:10.179 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Funds] AS [f]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-16 17:53:10.205 +07:00 [INF] User profile is available. Using 'C:\Users\khang\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-07-16 17:53:10.321 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2023-07-16 17:53:10.322 +07:00 [INF] Hosting environment: Development
2023-07-16 17:53:10.322 +07:00 [INF] Content root path: C:\Users\khang\Desktop\Hui_Management\hui_management_backend\src\hui_management_backend.Web
2023-07-16 17:53:10.354 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:57678/ - -
2023-07-16 17:53:10.525 +07:00 [WRN] Failed to determine the https port for redirect.
2023-07-16 17:53:10.581 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:57678/ - - - 404 - - 229.6667ms
2023-07-16 17:53:10.679 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:57678/favicon.ico - -
2023-07-16 17:53:10.719 +07:00 [INF] Sending file. Request path: '/favicon.ico'. Physical path: 'C:\Users\khang\Desktop\Hui_Management\hui_management_backend\src\hui_management_backend.Web\wwwroot\favicon.ico'
2023-07-16 17:53:10.720 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:57678/favicon.ico - - - 0 5430 image/x-icon 40.4186ms
2023-07-16 17:54:51.986 +07:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:57678/funds/1/sessions/add - -
2023-07-16 17:54:52.028 +07:00 [INF] CORS policy execution successful.
2023-07-16 17:54:52.031 +07:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:57678/funds/1/sessions/add - - - 204 - - 44.3232ms
2023-07-16 17:54:52.032 +07:00 [INF] Request starting HTTP/1.1 POST http://localhost:57678/funds/1/sessions/add application/json 36
2023-07-16 17:54:52.137 +07:00 [INF] CORS policy execution successful.
2023-07-16 17:54:52.139 +07:00 [INF] Executing endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSession.HandleAsync (hui_management_backend.Web)'
2023-07-16 17:54:52.156 +07:00 [INF] Route matched with {action = "Handle", controller = "FundAddSession"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] HandleAsync(hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSessionRequest, System.Threading.CancellationToken) on controller hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSession (hui_management_backend.Web).
2023-07-16 17:54:52.369 +07:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2023-07-16 17:54:52.420 +07:00 [INF] Executed DbCommand (28ms) [Parameters=[@__ownerId_0='?' (DbType = Int32), @__fundId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[FundPrice], [t].[IsArchived], [t].[Name], [t].[OpenDate], [t].[OpenDateText], [t].[OwnerId], [t].[ServiceCost], [t].[Id0], [t].[AdditionalInfo], [t].[Address], [t].[BankName], [t].[BankNumber], [t].[Email], [t].[Name0], [t].[Password], [t].[PhoneNumber], [t].[Role], [t0].[Id], [t0].[FundId], [t0].[NickName], [t0].[UserId], [t0].[Id0], [t0].[AdditionalInfo], [t0].[Address], [t0].[BankName], [t0].[BankNumber], [t0].[Email], [t0].[Name], [t0].[Password], [t0].[PhoneNumber], [t0].[Role], [t1].[Id], [t1].[FundId], [t1].[sessionNumber], [t1].[takenDate], [t1].[Id0], [t1].[fundAmount], [t1].[fundMemberId], [t1].[predictedPrice], [t1].[remainPrice], [t1].[serviceCost], [t1].[sessionId], [t1].[Id1], [t1].[FundId0], [t1].[NickName], [t1].[UserId], [t1].[Id2], [t1].[FundSessionId], [t1].[fundMemberId0], [t1].[payCost]
FROM (
    SELECT TOP(1) [f].[Id], [f].[FundPrice], [f].[IsArchived], [f].[Name], [f].[OpenDate], [f].[OpenDateText], [f].[OwnerId], [f].[ServiceCost], [u].[Id] AS [Id0], [u].[AdditionalInfo], [u].[Address], [u].[BankName], [u].[BankNumber], [u].[Email], [u].[Name] AS [Name0], [u].[Password], [u].[PhoneNumber], [u].[Role]
    FROM [Funds] AS [f]
    INNER JOIN [User] AS [u] ON [f].[OwnerId] = [u].[Id]
    WHERE [u].[Id] = @__ownerId_0 AND [f].[Id] = @__fundId_1
) AS [t]
LEFT JOIN (
    SELECT [f0].[Id], [f0].[FundId], [f0].[NickName], [f0].[UserId], [u0].[Id] AS [Id0], [u0].[AdditionalInfo], [u0].[Address], [u0].[BankName], [u0].[BankNumber], [u0].[Email], [u0].[Name], [u0].[Password], [u0].[PhoneNumber], [u0].[Role]
    FROM [FundMember] AS [f0]
    INNER JOIN [User] AS [u0] ON [f0].[UserId] = [u0].[Id]
) AS [t0] ON [t].[Id] = [t0].[FundId]
LEFT JOIN (
    SELECT [f1].[Id], [f1].[FundId], [f1].[sessionNumber], [f1].[takenDate], [t2].[Id] AS [Id0], [t2].[fundAmount], [t2].[fundMemberId], [t2].[predictedPrice], [t2].[remainPrice], [t2].[serviceCost], [t2].[sessionId], [f2].[Id] AS [Id1], [f2].[FundId] AS [FundId0], [f2].[NickName], [f2].[UserId], [n].[Id] AS [Id2], [n].[FundSessionId], [n].[fundMemberId] AS [fundMemberId0], [n].[payCost]
    FROM [FundSession] AS [f1]
    LEFT JOIN [TakenSessionDetail] AS [t2] ON [f1].[Id] = [t2].[sessionId]
    LEFT JOIN [FundMember] AS [f2] ON [t2].[fundMemberId] = [f2].[Id]
    LEFT JOIN [NormalSessionDetail] AS [n] ON [f1].[Id] = [n].[FundSessionId]
) AS [t1] ON [t].[Id] = [t1].[FundId]
ORDER BY [t].[Id], [t].[Id0], [t0].[Id], [t0].[Id0], [t1].[Id], [t1].[Id0], [t1].[Id1]
2023-07-16 17:54:52.634 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = DateTimeOffset), @p10='?' (DbType = Int32), @p3='?' (DbType = Double), @p4='?' (DbType = Boolean), @p5='?' (Size = 4000), @p6='?' (DbType = DateTimeOffset), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [FundSession] ([FundId], [sessionNumber], [takenDate])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2);
UPDATE [Funds] SET [FundPrice] = @p3, [IsArchived] = @p4, [Name] = @p5, [OpenDate] = @p6, [OpenDateText] = @p7, [OwnerId] = @p8, [ServiceCost] = @p9
OUTPUT 1
WHERE [Id] = @p10;
2023-07-16 17:54:52.655 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@p11='?' (DbType = Int32), @p12='?' (DbType = Int32), @p13='?' (DbType = Double), @p14='?' (DbType = Double), @p15='?' (DbType = Int32), @p16='?' (DbType = Double), @p17='?' (DbType = Double), @p18='?' (DbType = Double), @p19='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [NormalSessionDetail] ([FundSessionId], [fundMemberId], [payCost])
OUTPUT INSERTED.[Id]
VALUES (@p11, @p12, @p13);
INSERT INTO [TakenSessionDetail] ([fundAmount], [fundMemberId], [predictedPrice], [remainPrice], [serviceCost], [sessionId])
OUTPUT INSERTED.[Id]
VALUES (@p14, @p15, @p16, @p17, @p18, @p19);
2023-07-16 17:54:52.696 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__dateTimeOffset_Date_0='?' (DbType = DateTime2), @__ownerId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[CreateAt], [p].[OwnerId], [p].[Status]
FROM [Payment] AS [p]
WHERE CONVERT(date, [p].[CreateAt]) = @__dateTimeOffset_Date_0 AND [p].[OwnerId] = @__ownerId_1
2023-07-16 17:56:45.263 +07:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-16 17:56:45.320 +07:00 [INF] Executed DbCommand (20ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-07-16 17:56:45.456 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Funds] AS [f]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-16 17:56:45.469 +07:00 [INF] User profile is available. Using 'C:\Users\khang\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-07-16 17:56:45.530 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2023-07-16 17:56:45.530 +07:00 [INF] Hosting environment: Development
2023-07-16 17:56:45.530 +07:00 [INF] Content root path: C:\Users\khang\Desktop\Hui_Management\hui_management_backend\src\hui_management_backend.Web
2023-07-16 17:56:45.539 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:57678/ - -
2023-07-16 17:56:45.603 +07:00 [WRN] Failed to determine the https port for redirect.
2023-07-16 17:56:45.625 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:57678/ - - - 404 - - 87.1530ms
2023-07-16 17:56:50.549 +07:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:57678/funds/1/sessions/add - -
2023-07-16 17:56:50.554 +07:00 [INF] CORS policy execution successful.
2023-07-16 17:56:50.556 +07:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:57678/funds/1/sessions/add - - - 204 - - 7.5970ms
2023-07-16 17:56:50.560 +07:00 [INF] Request starting HTTP/1.1 POST http://localhost:57678/funds/1/sessions/add application/json 36
2023-07-16 17:56:50.666 +07:00 [INF] CORS policy execution successful.
2023-07-16 17:56:50.668 +07:00 [INF] Executing endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSession.HandleAsync (hui_management_backend.Web)'
2023-07-16 17:56:50.684 +07:00 [INF] Route matched with {action = "Handle", controller = "FundAddSession"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] HandleAsync(hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSessionRequest, System.Threading.CancellationToken) on controller hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSession (hui_management_backend.Web).
2023-07-16 17:56:50.884 +07:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2023-07-16 17:56:50.949 +07:00 [INF] Executed DbCommand (37ms) [Parameters=[@__ownerId_0='?' (DbType = Int32), @__fundId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[FundPrice], [t].[IsArchived], [t].[Name], [t].[OpenDate], [t].[OpenDateText], [t].[OwnerId], [t].[ServiceCost], [t].[Id0], [t].[AdditionalInfo], [t].[Address], [t].[BankName], [t].[BankNumber], [t].[Email], [t].[Name0], [t].[Password], [t].[PhoneNumber], [t].[Role], [t0].[Id], [t0].[FundId], [t0].[NickName], [t0].[UserId], [t0].[Id0], [t0].[AdditionalInfo], [t0].[Address], [t0].[BankName], [t0].[BankNumber], [t0].[Email], [t0].[Name], [t0].[Password], [t0].[PhoneNumber], [t0].[Role], [t1].[Id], [t1].[FundId], [t1].[sessionNumber], [t1].[takenDate], [t1].[Id0], [t1].[fundAmount], [t1].[fundMemberId], [t1].[predictedPrice], [t1].[remainPrice], [t1].[serviceCost], [t1].[sessionId], [t1].[Id1], [t1].[FundId0], [t1].[NickName], [t1].[UserId], [t1].[Id2], [t1].[FundSessionId], [t1].[fundMemberId0], [t1].[payCost]
FROM (
    SELECT TOP(1) [f].[Id], [f].[FundPrice], [f].[IsArchived], [f].[Name], [f].[OpenDate], [f].[OpenDateText], [f].[OwnerId], [f].[ServiceCost], [u].[Id] AS [Id0], [u].[AdditionalInfo], [u].[Address], [u].[BankName], [u].[BankNumber], [u].[Email], [u].[Name] AS [Name0], [u].[Password], [u].[PhoneNumber], [u].[Role]
    FROM [Funds] AS [f]
    INNER JOIN [User] AS [u] ON [f].[OwnerId] = [u].[Id]
    WHERE [u].[Id] = @__ownerId_0 AND [f].[Id] = @__fundId_1
) AS [t]
LEFT JOIN (
    SELECT [f0].[Id], [f0].[FundId], [f0].[NickName], [f0].[UserId], [u0].[Id] AS [Id0], [u0].[AdditionalInfo], [u0].[Address], [u0].[BankName], [u0].[BankNumber], [u0].[Email], [u0].[Name], [u0].[Password], [u0].[PhoneNumber], [u0].[Role]
    FROM [FundMember] AS [f0]
    INNER JOIN [User] AS [u0] ON [f0].[UserId] = [u0].[Id]
) AS [t0] ON [t].[Id] = [t0].[FundId]
LEFT JOIN (
    SELECT [f1].[Id], [f1].[FundId], [f1].[sessionNumber], [f1].[takenDate], [t2].[Id] AS [Id0], [t2].[fundAmount], [t2].[fundMemberId], [t2].[predictedPrice], [t2].[remainPrice], [t2].[serviceCost], [t2].[sessionId], [f2].[Id] AS [Id1], [f2].[FundId] AS [FundId0], [f2].[NickName], [f2].[UserId], [n].[Id] AS [Id2], [n].[FundSessionId], [n].[fundMemberId] AS [fundMemberId0], [n].[payCost]
    FROM [FundSession] AS [f1]
    LEFT JOIN [TakenSessionDetail] AS [t2] ON [f1].[Id] = [t2].[sessionId]
    LEFT JOIN [FundMember] AS [f2] ON [t2].[fundMemberId] = [f2].[Id]
    LEFT JOIN [NormalSessionDetail] AS [n] ON [f1].[Id] = [n].[FundSessionId]
) AS [t1] ON [t].[Id] = [t1].[FundId]
ORDER BY [t].[Id], [t].[Id0], [t0].[Id], [t0].[Id0], [t1].[Id], [t1].[Id0], [t1].[Id1]
2023-07-16 17:56:51.169 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = DateTimeOffset), @p10='?' (DbType = Int32), @p3='?' (DbType = Double), @p4='?' (DbType = Boolean), @p5='?' (Size = 4000), @p6='?' (DbType = DateTimeOffset), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [FundSession] ([FundId], [sessionNumber], [takenDate])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2);
UPDATE [Funds] SET [FundPrice] = @p3, [IsArchived] = @p4, [Name] = @p5, [OpenDate] = @p6, [OpenDateText] = @p7, [OwnerId] = @p8, [ServiceCost] = @p9
OUTPUT 1
WHERE [Id] = @p10;
2023-07-16 17:56:51.191 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@p11='?' (DbType = Int32), @p12='?' (DbType = Int32), @p13='?' (DbType = Double), @p14='?' (DbType = Double), @p15='?' (DbType = Int32), @p16='?' (DbType = Double), @p17='?' (DbType = Double), @p18='?' (DbType = Double), @p19='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [NormalSessionDetail] ([FundSessionId], [fundMemberId], [payCost])
OUTPUT INSERTED.[Id]
VALUES (@p11, @p12, @p13);
INSERT INTO [TakenSessionDetail] ([fundAmount], [fundMemberId], [predictedPrice], [remainPrice], [serviceCost], [sessionId])
OUTPUT INSERTED.[Id]
VALUES (@p14, @p15, @p16, @p17, @p18, @p19);
2023-07-16 17:56:53.401 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__dateTimeOffset_Date_0='?' (DbType = DateTime2), @__ownerId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[CreateAt], [p].[OwnerId], [p].[Status]
FROM [Payment] AS [p]
WHERE CONVERT(date, [p].[CreateAt]) = @__dateTimeOffset_Date_0 AND [p].[OwnerId] = @__ownerId_1
2023-07-16 17:58:06.324 +07:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-16 17:58:06.369 +07:00 [INF] Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-07-16 17:58:06.505 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Funds] AS [f]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-16 17:58:06.519 +07:00 [INF] User profile is available. Using 'C:\Users\khang\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-07-16 17:58:06.600 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2023-07-16 17:58:06.600 +07:00 [INF] Hosting environment: Development
2023-07-16 17:58:06.600 +07:00 [INF] Content root path: C:\Users\khang\Desktop\Hui_Management\hui_management_backend\src\hui_management_backend.Web
2023-07-16 17:58:06.611 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:57678/ - -
2023-07-16 17:58:06.686 +07:00 [WRN] Failed to determine the https port for redirect.
2023-07-16 17:58:06.718 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:57678/ - - - 404 - - 107.4124ms
2023-07-16 17:58:08.116 +07:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:57678/funds - -
2023-07-16 17:58:08.120 +07:00 [INF] CORS policy execution successful.
2023-07-16 17:58:08.122 +07:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:57678/funds - - - 204 - - 5.8267ms
2023-07-16 17:58:08.123 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:57678/funds application/json -
2023-07-16 17:58:08.224 +07:00 [INF] CORS policy execution successful.
2023-07-16 17:58:08.226 +07:00 [INF] Executing endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAll.HandleAsync (hui_management_backend.Web)'
2023-07-16 17:58:08.239 +07:00 [INF] Route matched with {action = "Handle", controller = "FundGetAll"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAllResponse]] HandleAsync(System.Threading.CancellationToken) on controller hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAll (hui_management_backend.Web).
2023-07-16 17:58:08.461 +07:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2023-07-16 17:58:08.509 +07:00 [INF] Executed DbCommand (27ms) [Parameters=[@__ownerId_0='?' (DbType = Int32), @__isArchived_1='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [f].[Id], [f].[FundPrice], [f].[IsArchived], [f].[Name], [f].[OpenDate], [f].[OpenDateText], [f].[OwnerId], [f].[ServiceCost], [u].[Id], [u].[AdditionalInfo], [u].[Address], [u].[BankName], [u].[BankNumber], [u].[Email], [u].[Name], [u].[Password], [u].[PhoneNumber], [u].[Role], [f0].[Id], [f0].[FundId], [f0].[NickName], [f0].[UserId], [f1].[Id], [f1].[FundId], [f1].[sessionNumber], [f1].[takenDate]
FROM [Funds] AS [f]
INNER JOIN [User] AS [u] ON [f].[OwnerId] = [u].[Id]
LEFT JOIN [FundMember] AS [f0] ON [f].[Id] = [f0].[FundId]
LEFT JOIN [FundSession] AS [f1] ON [f].[Id] = [f1].[FundId]
WHERE [u].[Id] = @__ownerId_0 AND [f].[IsArchived] = @__isArchived_1
ORDER BY [f].[Id], [u].[Id], [f0].[Id]
2023-07-16 17:58:08.600 +07:00 [INF] Executing OkObjectResult, writing value of type 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAllResponse'.
2023-07-16 17:58:08.629 +07:00 [INF] Executed action hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAll.HandleAsync (hui_management_backend.Web) in 388.2169ms
2023-07-16 17:58:08.629 +07:00 [INF] Executed endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAll.HandleAsync (hui_management_backend.Web)'
2023-07-16 17:58:08.633 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:57678/funds application/json - - 200 - application/json;+charset=utf-8 510.0505ms
2023-07-16 17:58:10.978 +07:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:57678/funds/1 - -
2023-07-16 17:58:10.979 +07:00 [INF] CORS policy execution successful.
2023-07-16 17:58:10.979 +07:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:57678/funds/1 - - - 204 - - 1.8189ms
2023-07-16 17:58:10.983 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:57678/funds/1 application/json -
2023-07-16 17:58:10.985 +07:00 [INF] CORS policy execution successful.
2023-07-16 17:58:10.986 +07:00 [INF] Executing endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web)'
2023-07-16 17:58:10.991 +07:00 [INF] Route matched with {action = "Handle", controller = "FundGet"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[hui_management_backend.Web.Endpoints.FundEndpoints.FundGetResponse]] HandleAsync(hui_management_backend.Web.Endpoints.FundEndpoints.FundGetRequest, System.Threading.CancellationToken) on controller hui_management_backend.Web.Endpoints.FundEndpoints.FundGet (hui_management_backend.Web).
2023-07-16 17:58:11.032 +07:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2023-07-16 17:58:11.049 +07:00 [INF] Executed DbCommand (11ms) [Parameters=[@__ownerId_0='?' (DbType = Int32), @__fundId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[FundPrice], [t].[IsArchived], [t].[Name], [t].[OpenDate], [t].[OpenDateText], [t].[OwnerId], [t].[ServiceCost], [t].[Id0], [t].[AdditionalInfo], [t].[Address], [t].[BankName], [t].[BankNumber], [t].[Email], [t].[Name0], [t].[Password], [t].[PhoneNumber], [t].[Role], [t0].[Id], [t0].[FundId], [t0].[NickName], [t0].[UserId], [t0].[Id0], [t0].[AdditionalInfo], [t0].[Address], [t0].[BankName], [t0].[BankNumber], [t0].[Email], [t0].[Name], [t0].[Password], [t0].[PhoneNumber], [t0].[Role], [t1].[Id], [t1].[FundId], [t1].[sessionNumber], [t1].[takenDate], [t1].[Id0], [t1].[fundAmount], [t1].[fundMemberId], [t1].[predictedPrice], [t1].[remainPrice], [t1].[serviceCost], [t1].[sessionId], [t1].[Id1], [t1].[FundId0], [t1].[NickName], [t1].[UserId], [t1].[Id2], [t1].[FundSessionId], [t1].[fundMemberId0], [t1].[payCost]
FROM (
    SELECT TOP(1) [f].[Id], [f].[FundPrice], [f].[IsArchived], [f].[Name], [f].[OpenDate], [f].[OpenDateText], [f].[OwnerId], [f].[ServiceCost], [u].[Id] AS [Id0], [u].[AdditionalInfo], [u].[Address], [u].[BankName], [u].[BankNumber], [u].[Email], [u].[Name] AS [Name0], [u].[Password], [u].[PhoneNumber], [u].[Role]
    FROM [Funds] AS [f]
    INNER JOIN [User] AS [u] ON [f].[OwnerId] = [u].[Id]
    WHERE [u].[Id] = @__ownerId_0 AND [f].[Id] = @__fundId_1
) AS [t]
LEFT JOIN (
    SELECT [f0].[Id], [f0].[FundId], [f0].[NickName], [f0].[UserId], [u0].[Id] AS [Id0], [u0].[AdditionalInfo], [u0].[Address], [u0].[BankName], [u0].[BankNumber], [u0].[Email], [u0].[Name], [u0].[Password], [u0].[PhoneNumber], [u0].[Role]
    FROM [FundMember] AS [f0]
    INNER JOIN [User] AS [u0] ON [f0].[UserId] = [u0].[Id]
) AS [t0] ON [t].[Id] = [t0].[FundId]
LEFT JOIN (
    SELECT [f1].[Id], [f1].[FundId], [f1].[sessionNumber], [f1].[takenDate], [t2].[Id] AS [Id0], [t2].[fundAmount], [t2].[fundMemberId], [t2].[predictedPrice], [t2].[remainPrice], [t2].[serviceCost], [t2].[sessionId], [f2].[Id] AS [Id1], [f2].[FundId] AS [FundId0], [f2].[NickName], [f2].[UserId], [n].[Id] AS [Id2], [n].[FundSessionId], [n].[fundMemberId] AS [fundMemberId0], [n].[payCost]
    FROM [FundSession] AS [f1]
    LEFT JOIN [TakenSessionDetail] AS [t2] ON [f1].[Id] = [t2].[sessionId]
    LEFT JOIN [FundMember] AS [f2] ON [t2].[fundMemberId] = [f2].[Id]
    LEFT JOIN [NormalSessionDetail] AS [n] ON [f1].[Id] = [n].[FundSessionId]
) AS [t1] ON [t].[Id] = [t1].[FundId]
ORDER BY [t].[Id], [t].[Id0], [t0].[Id], [t0].[Id0], [t1].[Id], [t1].[Id0], [t1].[Id1]
2023-07-16 17:58:11.069 +07:00 [INF] Executing OkObjectResult, writing value of type 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetResponse'.
2023-07-16 17:58:11.079 +07:00 [INF] Executed action hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web) in 87.6979ms
2023-07-16 17:58:11.079 +07:00 [INF] Executed endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web)'
2023-07-16 17:58:11.079 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:57678/funds/1 application/json - - 200 - application/json;+charset=utf-8 96.0394ms
2023-07-16 17:58:17.368 +07:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:57678/funds/1/sessions/add - -
2023-07-16 17:58:17.369 +07:00 [INF] CORS policy execution successful.
2023-07-16 17:58:17.369 +07:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:57678/funds/1/sessions/add - - - 204 - - 1.1248ms
2023-07-16 17:58:17.371 +07:00 [INF] Request starting HTTP/1.1 POST http://localhost:57678/funds/1/sessions/add application/json 36
2023-07-16 17:58:17.372 +07:00 [INF] CORS policy execution successful.
2023-07-16 17:58:17.372 +07:00 [INF] Executing endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSession.HandleAsync (hui_management_backend.Web)'
2023-07-16 17:58:17.375 +07:00 [INF] Route matched with {action = "Handle", controller = "FundAddSession"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] HandleAsync(hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSessionRequest, System.Threading.CancellationToken) on controller hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSession (hui_management_backend.Web).
2023-07-16 17:58:17.390 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__ownerId_0='?' (DbType = Int32), @__fundId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[FundPrice], [t].[IsArchived], [t].[Name], [t].[OpenDate], [t].[OpenDateText], [t].[OwnerId], [t].[ServiceCost], [t].[Id0], [t].[AdditionalInfo], [t].[Address], [t].[BankName], [t].[BankNumber], [t].[Email], [t].[Name0], [t].[Password], [t].[PhoneNumber], [t].[Role], [t0].[Id], [t0].[FundId], [t0].[NickName], [t0].[UserId], [t0].[Id0], [t0].[AdditionalInfo], [t0].[Address], [t0].[BankName], [t0].[BankNumber], [t0].[Email], [t0].[Name], [t0].[Password], [t0].[PhoneNumber], [t0].[Role], [t1].[Id], [t1].[FundId], [t1].[sessionNumber], [t1].[takenDate], [t1].[Id0], [t1].[fundAmount], [t1].[fundMemberId], [t1].[predictedPrice], [t1].[remainPrice], [t1].[serviceCost], [t1].[sessionId], [t1].[Id1], [t1].[FundId0], [t1].[NickName], [t1].[UserId], [t1].[Id2], [t1].[FundSessionId], [t1].[fundMemberId0], [t1].[payCost]
FROM (
    SELECT TOP(1) [f].[Id], [f].[FundPrice], [f].[IsArchived], [f].[Name], [f].[OpenDate], [f].[OpenDateText], [f].[OwnerId], [f].[ServiceCost], [u].[Id] AS [Id0], [u].[AdditionalInfo], [u].[Address], [u].[BankName], [u].[BankNumber], [u].[Email], [u].[Name] AS [Name0], [u].[Password], [u].[PhoneNumber], [u].[Role]
    FROM [Funds] AS [f]
    INNER JOIN [User] AS [u] ON [f].[OwnerId] = [u].[Id]
    WHERE [u].[Id] = @__ownerId_0 AND [f].[Id] = @__fundId_1
) AS [t]
LEFT JOIN (
    SELECT [f0].[Id], [f0].[FundId], [f0].[NickName], [f0].[UserId], [u0].[Id] AS [Id0], [u0].[AdditionalInfo], [u0].[Address], [u0].[BankName], [u0].[BankNumber], [u0].[Email], [u0].[Name], [u0].[Password], [u0].[PhoneNumber], [u0].[Role]
    FROM [FundMember] AS [f0]
    INNER JOIN [User] AS [u0] ON [f0].[UserId] = [u0].[Id]
) AS [t0] ON [t].[Id] = [t0].[FundId]
LEFT JOIN (
    SELECT [f1].[Id], [f1].[FundId], [f1].[sessionNumber], [f1].[takenDate], [t2].[Id] AS [Id0], [t2].[fundAmount], [t2].[fundMemberId], [t2].[predictedPrice], [t2].[remainPrice], [t2].[serviceCost], [t2].[sessionId], [f2].[Id] AS [Id1], [f2].[FundId] AS [FundId0], [f2].[NickName], [f2].[UserId], [n].[Id] AS [Id2], [n].[FundSessionId], [n].[fundMemberId] AS [fundMemberId0], [n].[payCost]
    FROM [FundSession] AS [f1]
    LEFT JOIN [TakenSessionDetail] AS [t2] ON [f1].[Id] = [t2].[sessionId]
    LEFT JOIN [FundMember] AS [f2] ON [t2].[fundMemberId] = [f2].[Id]
    LEFT JOIN [NormalSessionDetail] AS [n] ON [f1].[Id] = [n].[FundSessionId]
) AS [t1] ON [t].[Id] = [t1].[FundId]
ORDER BY [t].[Id], [t].[Id0], [t0].[Id], [t0].[Id0], [t1].[Id], [t1].[Id0], [t1].[Id1]
2023-07-16 17:58:17.517 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = DateTimeOffset), @p10='?' (DbType = Int32), @p3='?' (DbType = Double), @p4='?' (DbType = Boolean), @p5='?' (Size = 4000), @p6='?' (DbType = DateTimeOffset), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [FundSession] ([FundId], [sessionNumber], [takenDate])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2);
UPDATE [Funds] SET [FundPrice] = @p3, [IsArchived] = @p4, [Name] = @p5, [OpenDate] = @p6, [OpenDateText] = @p7, [OwnerId] = @p8, [ServiceCost] = @p9
OUTPUT 1
WHERE [Id] = @p10;
2023-07-16 17:58:17.536 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@p11='?' (DbType = Int32), @p12='?' (DbType = Int32), @p13='?' (DbType = Double), @p14='?' (DbType = Double), @p15='?' (DbType = Int32), @p16='?' (DbType = Double), @p17='?' (DbType = Double), @p18='?' (DbType = Double), @p19='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [NormalSessionDetail] ([FundSessionId], [fundMemberId], [payCost])
OUTPUT INSERTED.[Id]
VALUES (@p11, @p12, @p13);
INSERT INTO [TakenSessionDetail] ([fundAmount], [fundMemberId], [predictedPrice], [remainPrice], [serviceCost], [sessionId])
OUTPUT INSERTED.[Id]
VALUES (@p14, @p15, @p16, @p17, @p18, @p19);
2023-07-16 17:58:17.573 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__dateTimeOffset_Date_0='?' (DbType = DateTime2), @__ownerId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[CreateAt], [p].[OwnerId], [p].[Status]
FROM [Payment] AS [p]
WHERE CONVERT(date, [p].[CreateAt]) = @__dateTimeOffset_Date_0 AND [p].[OwnerId] = @__ownerId_1
2023-07-16 18:03:53.155 +07:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-16 18:03:53.195 +07:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-07-16 18:03:53.348 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Funds] AS [f]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-16 18:03:53.362 +07:00 [INF] User profile is available. Using 'C:\Users\khang\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-07-16 18:03:53.443 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2023-07-16 18:03:53.444 +07:00 [INF] Hosting environment: Development
2023-07-16 18:03:53.444 +07:00 [INF] Content root path: C:\Users\khang\Desktop\Hui_Management\hui_management_backend\src\hui_management_backend.Web
2023-07-16 18:03:53.454 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:57678/ - -
2023-07-16 18:03:53.542 +07:00 [WRN] Failed to determine the https port for redirect.
2023-07-16 18:03:53.570 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:57678/ - - - 404 - - 117.4765ms
2023-07-16 18:05:18.563 +07:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:57678/login - -
2023-07-16 18:05:18.613 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:05:18.625 +07:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:57678/login - - - 204 - - 61.3161ms
2023-07-16 18:05:18.630 +07:00 [INF] Request starting HTTP/1.1 POST http://localhost:57678/login application/json;+charset=utf-8 51
2023-07-16 18:05:18.633 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:05:18.637 +07:00 [INF] Executing endpoint 'hui_management_backend.Web.Endpoints.AuthenticationEndpoints.Login.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:05:18.699 +07:00 [INF] Route matched with {action = "Handle", controller = "Login"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[hui_management_backend.Web.Endpoints.AuthenticationEndpoints.LoginResponse]] HandleAsync(hui_management_backend.Web.Endpoints.AuthenticationEndpoints.LoginRequest, System.Threading.CancellationToken) on controller hui_management_backend.Web.Endpoints.AuthenticationEndpoints.Login (hui_management_backend.Web).
2023-07-16 18:05:19.068 +07:00 [INF] Executed DbCommand (63ms) [Parameters=[@__phonenumber_0='?' (Size = 450), @__password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[AdditionalInfo], [u].[Address], [u].[BankName], [u].[BankNumber], [u].[Email], [u].[Name], [u].[Password], [u].[PhoneNumber], [u].[Role]
FROM [User] AS [u]
WHERE [u].[PhoneNumber] = @__phonenumber_0 AND [u].[Password] = @__password_1
2023-07-16 18:05:19.421 +07:00 [INF] Executing OkObjectResult, writing value of type 'hui_management_backend.Web.Endpoints.AuthenticationEndpoints.LoginResponse'.
2023-07-16 18:05:19.447 +07:00 [INF] Executed action hui_management_backend.Web.Endpoints.AuthenticationEndpoints.Login.HandleAsync (hui_management_backend.Web) in 744.2969ms
2023-07-16 18:05:19.448 +07:00 [INF] Executed endpoint 'hui_management_backend.Web.Endpoints.AuthenticationEndpoints.Login.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:05:19.456 +07:00 [INF] Request finished HTTP/1.1 POST http://localhost:57678/login application/json;+charset=utf-8 51 - 200 - application/json;+charset=utf-8 826.3093ms
2023-07-16 18:05:20.599 +07:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:57678/funds - -
2023-07-16 18:05:20.599 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:05:20.600 +07:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:57678/funds - - - 204 - - 1.3283ms
2023-07-16 18:05:20.601 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:57678/funds application/json -
2023-07-16 18:05:20.644 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:05:20.645 +07:00 [INF] Executing endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAll.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:05:20.648 +07:00 [INF] Route matched with {action = "Handle", controller = "FundGetAll"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAllResponse]] HandleAsync(System.Threading.CancellationToken) on controller hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAll (hui_management_backend.Web).
2023-07-16 18:05:20.833 +07:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2023-07-16 18:05:20.847 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__ownerId_0='?' (DbType = Int32), @__isArchived_1='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [f].[Id], [f].[FundPrice], [f].[IsArchived], [f].[Name], [f].[OpenDate], [f].[OpenDateText], [f].[OwnerId], [f].[ServiceCost], [u].[Id], [u].[AdditionalInfo], [u].[Address], [u].[BankName], [u].[BankNumber], [u].[Email], [u].[Name], [u].[Password], [u].[PhoneNumber], [u].[Role], [f0].[Id], [f0].[FundId], [f0].[NickName], [f0].[UserId], [f1].[Id], [f1].[FundId], [f1].[sessionNumber], [f1].[takenDate]
FROM [Funds] AS [f]
INNER JOIN [User] AS [u] ON [f].[OwnerId] = [u].[Id]
LEFT JOIN [FundMember] AS [f0] ON [f].[Id] = [f0].[FundId]
LEFT JOIN [FundSession] AS [f1] ON [f].[Id] = [f1].[FundId]
WHERE [u].[Id] = @__ownerId_0 AND [f].[IsArchived] = @__isArchived_1
ORDER BY [f].[Id], [u].[Id], [f0].[Id]
2023-07-16 18:05:20.898 +07:00 [INF] Executing OkObjectResult, writing value of type 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAllResponse'.
2023-07-16 18:05:20.919 +07:00 [INF] Executed action hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAll.HandleAsync (hui_management_backend.Web) in 270.8611ms
2023-07-16 18:05:20.919 +07:00 [INF] Executed endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAll.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:05:20.919 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:57678/funds application/json - - 200 - application/json;+charset=utf-8 318.1329ms
2023-07-16 18:05:22.048 +07:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:57678/funds/1 - -
2023-07-16 18:05:22.049 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:05:22.049 +07:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:57678/funds/1 - - - 204 - - 0.9061ms
2023-07-16 18:05:22.053 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:57678/funds/1 application/json -
2023-07-16 18:05:22.055 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:05:22.056 +07:00 [INF] Executing endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:05:22.060 +07:00 [INF] Route matched with {action = "Handle", controller = "FundGet"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[hui_management_backend.Web.Endpoints.FundEndpoints.FundGetResponse]] HandleAsync(hui_management_backend.Web.Endpoints.FundEndpoints.FundGetRequest, System.Threading.CancellationToken) on controller hui_management_backend.Web.Endpoints.FundEndpoints.FundGet (hui_management_backend.Web).
2023-07-16 18:05:22.107 +07:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2023-07-16 18:05:22.121 +07:00 [INF] Executed DbCommand (10ms) [Parameters=[@__ownerId_0='?' (DbType = Int32), @__fundId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[FundPrice], [t].[IsArchived], [t].[Name], [t].[OpenDate], [t].[OpenDateText], [t].[OwnerId], [t].[ServiceCost], [t].[Id0], [t].[AdditionalInfo], [t].[Address], [t].[BankName], [t].[BankNumber], [t].[Email], [t].[Name0], [t].[Password], [t].[PhoneNumber], [t].[Role], [t0].[Id], [t0].[FundId], [t0].[NickName], [t0].[UserId], [t0].[Id0], [t0].[AdditionalInfo], [t0].[Address], [t0].[BankName], [t0].[BankNumber], [t0].[Email], [t0].[Name], [t0].[Password], [t0].[PhoneNumber], [t0].[Role], [t1].[Id], [t1].[FundId], [t1].[sessionNumber], [t1].[takenDate], [t1].[Id0], [t1].[fundAmount], [t1].[fundMemberId], [t1].[predictedPrice], [t1].[remainPrice], [t1].[serviceCost], [t1].[sessionId], [t1].[Id1], [t1].[FundId0], [t1].[NickName], [t1].[UserId], [t1].[Id2], [t1].[FundSessionId], [t1].[fundMemberId0], [t1].[payCost]
FROM (
    SELECT TOP(1) [f].[Id], [f].[FundPrice], [f].[IsArchived], [f].[Name], [f].[OpenDate], [f].[OpenDateText], [f].[OwnerId], [f].[ServiceCost], [u].[Id] AS [Id0], [u].[AdditionalInfo], [u].[Address], [u].[BankName], [u].[BankNumber], [u].[Email], [u].[Name] AS [Name0], [u].[Password], [u].[PhoneNumber], [u].[Role]
    FROM [Funds] AS [f]
    INNER JOIN [User] AS [u] ON [f].[OwnerId] = [u].[Id]
    WHERE [u].[Id] = @__ownerId_0 AND [f].[Id] = @__fundId_1
) AS [t]
LEFT JOIN (
    SELECT [f0].[Id], [f0].[FundId], [f0].[NickName], [f0].[UserId], [u0].[Id] AS [Id0], [u0].[AdditionalInfo], [u0].[Address], [u0].[BankName], [u0].[BankNumber], [u0].[Email], [u0].[Name], [u0].[Password], [u0].[PhoneNumber], [u0].[Role]
    FROM [FundMember] AS [f0]
    INNER JOIN [User] AS [u0] ON [f0].[UserId] = [u0].[Id]
) AS [t0] ON [t].[Id] = [t0].[FundId]
LEFT JOIN (
    SELECT [f1].[Id], [f1].[FundId], [f1].[sessionNumber], [f1].[takenDate], [t2].[Id] AS [Id0], [t2].[fundAmount], [t2].[fundMemberId], [t2].[predictedPrice], [t2].[remainPrice], [t2].[serviceCost], [t2].[sessionId], [f2].[Id] AS [Id1], [f2].[FundId] AS [FundId0], [f2].[NickName], [f2].[UserId], [n].[Id] AS [Id2], [n].[FundSessionId], [n].[fundMemberId] AS [fundMemberId0], [n].[payCost]
    FROM [FundSession] AS [f1]
    LEFT JOIN [TakenSessionDetail] AS [t2] ON [f1].[Id] = [t2].[sessionId]
    LEFT JOIN [FundMember] AS [f2] ON [t2].[fundMemberId] = [f2].[Id]
    LEFT JOIN [NormalSessionDetail] AS [n] ON [f1].[Id] = [n].[FundSessionId]
) AS [t1] ON [t].[Id] = [t1].[FundId]
ORDER BY [t].[Id], [t].[Id0], [t0].[Id], [t0].[Id0], [t1].[Id], [t1].[Id0], [t1].[Id1]
2023-07-16 18:05:22.141 +07:00 [INF] Executing OkObjectResult, writing value of type 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetResponse'.
2023-07-16 18:05:22.149 +07:00 [INF] Executed action hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web) in 88.3515ms
2023-07-16 18:05:22.149 +07:00 [INF] Executed endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:05:22.149 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:57678/funds/1 application/json - - 200 - application/json;+charset=utf-8 95.8890ms
2023-07-16 18:06:03.023 +07:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-16 18:06:03.072 +07:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-07-16 18:06:03.199 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Funds] AS [f]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-16 18:06:03.215 +07:00 [INF] User profile is available. Using 'C:\Users\khang\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-07-16 18:06:03.286 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2023-07-16 18:06:03.286 +07:00 [INF] Hosting environment: Development
2023-07-16 18:06:03.286 +07:00 [INF] Content root path: C:\Users\khang\Desktop\Hui_Management\hui_management_backend\src\hui_management_backend.Web
2023-07-16 18:06:03.296 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:57678/ - -
2023-07-16 18:06:03.373 +07:00 [WRN] Failed to determine the https port for redirect.
2023-07-16 18:06:03.398 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:57678/ - - - 404 - - 103.4617ms
2023-07-16 18:06:17.519 +07:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:57678/funds/1/sessions/add - -
2023-07-16 18:06:17.524 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:06:17.528 +07:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:57678/funds/1/sessions/add - - - 204 - - 9.5202ms
2023-07-16 18:06:17.532 +07:00 [INF] Request starting HTTP/1.1 POST http://localhost:57678/funds/1/sessions/add application/json 36
2023-07-16 18:06:17.639 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:06:17.640 +07:00 [INF] Executing endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSession.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:06:17.666 +07:00 [INF] Route matched with {action = "Handle", controller = "FundAddSession"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] HandleAsync(hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSessionRequest, System.Threading.CancellationToken) on controller hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSession (hui_management_backend.Web).
2023-07-16 18:06:17.872 +07:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2023-07-16 18:06:17.925 +07:00 [INF] Executed DbCommand (27ms) [Parameters=[@__ownerId_0='?' (DbType = Int32), @__fundId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[FundPrice], [t].[IsArchived], [t].[Name], [t].[OpenDate], [t].[OpenDateText], [t].[OwnerId], [t].[ServiceCost], [t].[Id0], [t].[AdditionalInfo], [t].[Address], [t].[BankName], [t].[BankNumber], [t].[Email], [t].[Name0], [t].[Password], [t].[PhoneNumber], [t].[Role], [t0].[Id], [t0].[FundId], [t0].[NickName], [t0].[UserId], [t0].[Id0], [t0].[AdditionalInfo], [t0].[Address], [t0].[BankName], [t0].[BankNumber], [t0].[Email], [t0].[Name], [t0].[Password], [t0].[PhoneNumber], [t0].[Role], [t1].[Id], [t1].[FundId], [t1].[sessionNumber], [t1].[takenDate], [t1].[Id0], [t1].[fundAmount], [t1].[fundMemberId], [t1].[predictedPrice], [t1].[remainPrice], [t1].[serviceCost], [t1].[sessionId], [t1].[Id1], [t1].[FundId0], [t1].[NickName], [t1].[UserId], [t1].[Id2], [t1].[FundSessionId], [t1].[fundMemberId0], [t1].[payCost]
FROM (
    SELECT TOP(1) [f].[Id], [f].[FundPrice], [f].[IsArchived], [f].[Name], [f].[OpenDate], [f].[OpenDateText], [f].[OwnerId], [f].[ServiceCost], [u].[Id] AS [Id0], [u].[AdditionalInfo], [u].[Address], [u].[BankName], [u].[BankNumber], [u].[Email], [u].[Name] AS [Name0], [u].[Password], [u].[PhoneNumber], [u].[Role]
    FROM [Funds] AS [f]
    INNER JOIN [User] AS [u] ON [f].[OwnerId] = [u].[Id]
    WHERE [u].[Id] = @__ownerId_0 AND [f].[Id] = @__fundId_1
) AS [t]
LEFT JOIN (
    SELECT [f0].[Id], [f0].[FundId], [f0].[NickName], [f0].[UserId], [u0].[Id] AS [Id0], [u0].[AdditionalInfo], [u0].[Address], [u0].[BankName], [u0].[BankNumber], [u0].[Email], [u0].[Name], [u0].[Password], [u0].[PhoneNumber], [u0].[Role]
    FROM [FundMember] AS [f0]
    INNER JOIN [User] AS [u0] ON [f0].[UserId] = [u0].[Id]
) AS [t0] ON [t].[Id] = [t0].[FundId]
LEFT JOIN (
    SELECT [f1].[Id], [f1].[FundId], [f1].[sessionNumber], [f1].[takenDate], [t2].[Id] AS [Id0], [t2].[fundAmount], [t2].[fundMemberId], [t2].[predictedPrice], [t2].[remainPrice], [t2].[serviceCost], [t2].[sessionId], [f2].[Id] AS [Id1], [f2].[FundId] AS [FundId0], [f2].[NickName], [f2].[UserId], [n].[Id] AS [Id2], [n].[FundSessionId], [n].[fundMemberId] AS [fundMemberId0], [n].[payCost]
    FROM [FundSession] AS [f1]
    LEFT JOIN [TakenSessionDetail] AS [t2] ON [f1].[Id] = [t2].[sessionId]
    LEFT JOIN [FundMember] AS [f2] ON [t2].[fundMemberId] = [f2].[Id]
    LEFT JOIN [NormalSessionDetail] AS [n] ON [f1].[Id] = [n].[FundSessionId]
) AS [t1] ON [t].[Id] = [t1].[FundId]
ORDER BY [t].[Id], [t].[Id0], [t0].[Id], [t0].[Id0], [t1].[Id], [t1].[Id0], [t1].[Id1]
2023-07-16 18:06:18.182 +07:00 [INF] Executed DbCommand (13ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = DateTimeOffset), @p10='?' (DbType = Int32), @p3='?' (DbType = Double), @p4='?' (DbType = Boolean), @p5='?' (Size = 4000), @p6='?' (DbType = DateTimeOffset), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [FundSession] ([FundId], [sessionNumber], [takenDate])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2);
UPDATE [Funds] SET [FundPrice] = @p3, [IsArchived] = @p4, [Name] = @p5, [OpenDate] = @p6, [OpenDateText] = @p7, [OwnerId] = @p8, [ServiceCost] = @p9
OUTPUT 1
WHERE [Id] = @p10;
2023-07-16 18:06:18.203 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@p11='?' (DbType = Int32), @p12='?' (DbType = Int32), @p13='?' (DbType = Double), @p14='?' (DbType = Double), @p15='?' (DbType = Int32), @p16='?' (DbType = Double), @p17='?' (DbType = Double), @p18='?' (DbType = Double), @p19='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [NormalSessionDetail] ([FundSessionId], [fundMemberId], [payCost])
OUTPUT INSERTED.[Id]
VALUES (@p11, @p12, @p13);
INSERT INTO [TakenSessionDetail] ([fundAmount], [fundMemberId], [predictedPrice], [remainPrice], [serviceCost], [sessionId])
OUTPUT INSERTED.[Id]
VALUES (@p14, @p15, @p16, @p17, @p18, @p19);
2023-07-16 18:06:18.244 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__dateTimeOffset_Date_0='?' (DbType = DateTime2), @__ownerId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[CreateAt], [p].[OwnerId], [p].[Status]
FROM [Payment] AS [p]
WHERE CONVERT(date, [p].[CreateAt]) = @__dateTimeOffset_Date_0 AND [p].[OwnerId] = @__ownerId_1
2023-07-16 18:06:28.987 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@p0='?' (DbType = DateTimeOffset), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Payment] ([CreateAt], [OwnerId], [Status])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2);
2023-07-16 18:06:29.003 +07:00 [INF] Executed DbCommand (10ms) [Parameters=[@p3='?' (DbType = Double), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32), @p7='?' (DbType = Int32), @p8='?' (DbType = Double), @p9='?' (DbType = Int32), @p10='?' (DbType = Int32), @p11='?' (DbType = Int32), @p12='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
MERGE [FundBill] USING (
VALUES (@p3, @p4, @p5, @p6, @p7, 0),
(@p8, @p9, @p10, @p11, @p12, 1)) AS i ([Amount], [PaymentId], [Status], [Type], [fromFundId], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([Amount], [PaymentId], [Status], [Type], [fromFundId])
VALUES (i.[Amount], i.[PaymentId], i.[Status], i.[Type], i.[fromFundId])
OUTPUT INSERTED.[Id], i._Position;
2023-07-16 18:06:30.294 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2023-07-16 18:06:30.304 +07:00 [INF] Executed action hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSession.HandleAsync (hui_management_backend.Web) in 12634.7169ms
2023-07-16 18:06:30.304 +07:00 [INF] Executed endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSession.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:06:30.308 +07:00 [INF] Request finished HTTP/1.1 POST http://localhost:57678/funds/1/sessions/add application/json 36 - 200 - application/json;+charset=utf-8 12775.8716ms
2023-07-16 18:06:30.332 +07:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:57678/funds/1 - -
2023-07-16 18:06:30.332 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:06:30.333 +07:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:57678/funds/1 - - - 204 - - 1.0760ms
2023-07-16 18:06:30.337 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:57678/funds/1 application/json -
2023-07-16 18:06:30.339 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:06:30.339 +07:00 [INF] Executing endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:06:30.343 +07:00 [INF] Route matched with {action = "Handle", controller = "FundGet"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[hui_management_backend.Web.Endpoints.FundEndpoints.FundGetResponse]] HandleAsync(hui_management_backend.Web.Endpoints.FundEndpoints.FundGetRequest, System.Threading.CancellationToken) on controller hui_management_backend.Web.Endpoints.FundEndpoints.FundGet (hui_management_backend.Web).
2023-07-16 18:06:30.436 +07:00 [INF] Executed DbCommand (11ms) [Parameters=[@__ownerId_0='?' (DbType = Int32), @__fundId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[FundPrice], [t].[IsArchived], [t].[Name], [t].[OpenDate], [t].[OpenDateText], [t].[OwnerId], [t].[ServiceCost], [t].[Id0], [t].[AdditionalInfo], [t].[Address], [t].[BankName], [t].[BankNumber], [t].[Email], [t].[Name0], [t].[Password], [t].[PhoneNumber], [t].[Role], [t0].[Id], [t0].[FundId], [t0].[NickName], [t0].[UserId], [t0].[Id0], [t0].[AdditionalInfo], [t0].[Address], [t0].[BankName], [t0].[BankNumber], [t0].[Email], [t0].[Name], [t0].[Password], [t0].[PhoneNumber], [t0].[Role], [t1].[Id], [t1].[FundId], [t1].[sessionNumber], [t1].[takenDate], [t1].[Id0], [t1].[fundAmount], [t1].[fundMemberId], [t1].[predictedPrice], [t1].[remainPrice], [t1].[serviceCost], [t1].[sessionId], [t1].[Id1], [t1].[FundId0], [t1].[NickName], [t1].[UserId], [t1].[Id2], [t1].[FundSessionId], [t1].[fundMemberId0], [t1].[payCost]
FROM (
    SELECT TOP(1) [f].[Id], [f].[FundPrice], [f].[IsArchived], [f].[Name], [f].[OpenDate], [f].[OpenDateText], [f].[OwnerId], [f].[ServiceCost], [u].[Id] AS [Id0], [u].[AdditionalInfo], [u].[Address], [u].[BankName], [u].[BankNumber], [u].[Email], [u].[Name] AS [Name0], [u].[Password], [u].[PhoneNumber], [u].[Role]
    FROM [Funds] AS [f]
    INNER JOIN [User] AS [u] ON [f].[OwnerId] = [u].[Id]
    WHERE [u].[Id] = @__ownerId_0 AND [f].[Id] = @__fundId_1
) AS [t]
LEFT JOIN (
    SELECT [f0].[Id], [f0].[FundId], [f0].[NickName], [f0].[UserId], [u0].[Id] AS [Id0], [u0].[AdditionalInfo], [u0].[Address], [u0].[BankName], [u0].[BankNumber], [u0].[Email], [u0].[Name], [u0].[Password], [u0].[PhoneNumber], [u0].[Role]
    FROM [FundMember] AS [f0]
    INNER JOIN [User] AS [u0] ON [f0].[UserId] = [u0].[Id]
) AS [t0] ON [t].[Id] = [t0].[FundId]
LEFT JOIN (
    SELECT [f1].[Id], [f1].[FundId], [f1].[sessionNumber], [f1].[takenDate], [t2].[Id] AS [Id0], [t2].[fundAmount], [t2].[fundMemberId], [t2].[predictedPrice], [t2].[remainPrice], [t2].[serviceCost], [t2].[sessionId], [f2].[Id] AS [Id1], [f2].[FundId] AS [FundId0], [f2].[NickName], [f2].[UserId], [n].[Id] AS [Id2], [n].[FundSessionId], [n].[fundMemberId] AS [fundMemberId0], [n].[payCost]
    FROM [FundSession] AS [f1]
    LEFT JOIN [TakenSessionDetail] AS [t2] ON [f1].[Id] = [t2].[sessionId]
    LEFT JOIN [FundMember] AS [f2] ON [t2].[fundMemberId] = [f2].[Id]
    LEFT JOIN [NormalSessionDetail] AS [n] ON [f1].[Id] = [n].[FundSessionId]
) AS [t1] ON [t].[Id] = [t1].[FundId]
ORDER BY [t].[Id], [t].[Id0], [t0].[Id], [t0].[Id0], [t1].[Id], [t1].[Id0], [t1].[Id1]
2023-07-16 18:06:30.476 +07:00 [INF] Executing OkObjectResult, writing value of type 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetResponse'.
2023-07-16 18:06:30.498 +07:00 [INF] Executed action hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web) in 155.8224ms
2023-07-16 18:06:30.499 +07:00 [INF] Executed endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:06:30.499 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:57678/funds/1 application/json - - 200 - application/json;+charset=utf-8 162.0705ms
2023-07-16 18:06:40.115 +07:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:57678/funds/1 - -
2023-07-16 18:06:40.116 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:06:40.116 +07:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:57678/funds/1 - - - 204 - - 0.9873ms
2023-07-16 18:06:40.117 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:57678/funds/1 application/json -
2023-07-16 18:06:40.118 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:06:40.118 +07:00 [INF] Executing endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:06:40.118 +07:00 [INF] Route matched with {action = "Handle", controller = "FundGet"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[hui_management_backend.Web.Endpoints.FundEndpoints.FundGetResponse]] HandleAsync(hui_management_backend.Web.Endpoints.FundEndpoints.FundGetRequest, System.Threading.CancellationToken) on controller hui_management_backend.Web.Endpoints.FundEndpoints.FundGet (hui_management_backend.Web).
2023-07-16 18:06:40.123 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ownerId_0='?' (DbType = Int32), @__fundId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[FundPrice], [t].[IsArchived], [t].[Name], [t].[OpenDate], [t].[OpenDateText], [t].[OwnerId], [t].[ServiceCost], [t].[Id0], [t].[AdditionalInfo], [t].[Address], [t].[BankName], [t].[BankNumber], [t].[Email], [t].[Name0], [t].[Password], [t].[PhoneNumber], [t].[Role], [t0].[Id], [t0].[FundId], [t0].[NickName], [t0].[UserId], [t0].[Id0], [t0].[AdditionalInfo], [t0].[Address], [t0].[BankName], [t0].[BankNumber], [t0].[Email], [t0].[Name], [t0].[Password], [t0].[PhoneNumber], [t0].[Role], [t1].[Id], [t1].[FundId], [t1].[sessionNumber], [t1].[takenDate], [t1].[Id0], [t1].[fundAmount], [t1].[fundMemberId], [t1].[predictedPrice], [t1].[remainPrice], [t1].[serviceCost], [t1].[sessionId], [t1].[Id1], [t1].[FundId0], [t1].[NickName], [t1].[UserId], [t1].[Id2], [t1].[FundSessionId], [t1].[fundMemberId0], [t1].[payCost]
FROM (
    SELECT TOP(1) [f].[Id], [f].[FundPrice], [f].[IsArchived], [f].[Name], [f].[OpenDate], [f].[OpenDateText], [f].[OwnerId], [f].[ServiceCost], [u].[Id] AS [Id0], [u].[AdditionalInfo], [u].[Address], [u].[BankName], [u].[BankNumber], [u].[Email], [u].[Name] AS [Name0], [u].[Password], [u].[PhoneNumber], [u].[Role]
    FROM [Funds] AS [f]
    INNER JOIN [User] AS [u] ON [f].[OwnerId] = [u].[Id]
    WHERE [u].[Id] = @__ownerId_0 AND [f].[Id] = @__fundId_1
) AS [t]
LEFT JOIN (
    SELECT [f0].[Id], [f0].[FundId], [f0].[NickName], [f0].[UserId], [u0].[Id] AS [Id0], [u0].[AdditionalInfo], [u0].[Address], [u0].[BankName], [u0].[BankNumber], [u0].[Email], [u0].[Name], [u0].[Password], [u0].[PhoneNumber], [u0].[Role]
    FROM [FundMember] AS [f0]
    INNER JOIN [User] AS [u0] ON [f0].[UserId] = [u0].[Id]
) AS [t0] ON [t].[Id] = [t0].[FundId]
LEFT JOIN (
    SELECT [f1].[Id], [f1].[FundId], [f1].[sessionNumber], [f1].[takenDate], [t2].[Id] AS [Id0], [t2].[fundAmount], [t2].[fundMemberId], [t2].[predictedPrice], [t2].[remainPrice], [t2].[serviceCost], [t2].[sessionId], [f2].[Id] AS [Id1], [f2].[FundId] AS [FundId0], [f2].[NickName], [f2].[UserId], [n].[Id] AS [Id2], [n].[FundSessionId], [n].[fundMemberId] AS [fundMemberId0], [n].[payCost]
    FROM [FundSession] AS [f1]
    LEFT JOIN [TakenSessionDetail] AS [t2] ON [f1].[Id] = [t2].[sessionId]
    LEFT JOIN [FundMember] AS [f2] ON [t2].[fundMemberId] = [f2].[Id]
    LEFT JOIN [NormalSessionDetail] AS [n] ON [f1].[Id] = [n].[FundSessionId]
) AS [t1] ON [t].[Id] = [t1].[FundId]
ORDER BY [t].[Id], [t].[Id0], [t0].[Id], [t0].[Id0], [t1].[Id], [t1].[Id0], [t1].[Id1]
2023-07-16 18:06:40.126 +07:00 [INF] Executing OkObjectResult, writing value of type 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetResponse'.
2023-07-16 18:06:40.127 +07:00 [INF] Executed action hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web) in 8.1583ms
2023-07-16 18:06:40.127 +07:00 [INF] Executed endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:06:40.127 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:57678/funds/1 application/json - - 200 - application/json;+charset=utf-8 9.7714ms
2023-07-16 18:06:43.231 +07:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:57678/funds - -
2023-07-16 18:06:43.231 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:06:43.231 +07:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:57678/funds - - - 204 - - 0.7111ms
2023-07-16 18:06:43.233 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:57678/funds application/json -
2023-07-16 18:06:43.233 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:06:43.233 +07:00 [INF] Executing endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAll.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:06:43.236 +07:00 [INF] Route matched with {action = "Handle", controller = "FundGetAll"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAllResponse]] HandleAsync(System.Threading.CancellationToken) on controller hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAll (hui_management_backend.Web).
2023-07-16 18:06:43.248 +07:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2023-07-16 18:06:43.257 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@__ownerId_0='?' (DbType = Int32), @__isArchived_1='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [f].[Id], [f].[FundPrice], [f].[IsArchived], [f].[Name], [f].[OpenDate], [f].[OpenDateText], [f].[OwnerId], [f].[ServiceCost], [u].[Id], [u].[AdditionalInfo], [u].[Address], [u].[BankName], [u].[BankNumber], [u].[Email], [u].[Name], [u].[Password], [u].[PhoneNumber], [u].[Role], [f0].[Id], [f0].[FundId], [f0].[NickName], [f0].[UserId], [f1].[Id], [f1].[FundId], [f1].[sessionNumber], [f1].[takenDate]
FROM [Funds] AS [f]
INNER JOIN [User] AS [u] ON [f].[OwnerId] = [u].[Id]
LEFT JOIN [FundMember] AS [f0] ON [f].[Id] = [f0].[FundId]
LEFT JOIN [FundSession] AS [f1] ON [f].[Id] = [f1].[FundId]
WHERE [u].[Id] = @__ownerId_0 AND [f].[IsArchived] = @__isArchived_1
ORDER BY [f].[Id], [u].[Id], [f0].[Id]
2023-07-16 18:06:43.260 +07:00 [INF] Executing OkObjectResult, writing value of type 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAllResponse'.
2023-07-16 18:06:43.265 +07:00 [INF] Executed action hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAll.HandleAsync (hui_management_backend.Web) in 28.483ms
2023-07-16 18:06:43.265 +07:00 [INF] Executed endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAll.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:06:43.265 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:57678/funds application/json - - 200 - application/json;+charset=utf-8 32.2477ms
2023-07-16 18:06:44.101 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:57678/funds/1 application/json -
2023-07-16 18:06:44.102 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:06:44.102 +07:00 [INF] Executing endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:06:44.102 +07:00 [INF] Route matched with {action = "Handle", controller = "FundGet"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[hui_management_backend.Web.Endpoints.FundEndpoints.FundGetResponse]] HandleAsync(hui_management_backend.Web.Endpoints.FundEndpoints.FundGetRequest, System.Threading.CancellationToken) on controller hui_management_backend.Web.Endpoints.FundEndpoints.FundGet (hui_management_backend.Web).
2023-07-16 18:06:44.105 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__ownerId_0='?' (DbType = Int32), @__fundId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[FundPrice], [t].[IsArchived], [t].[Name], [t].[OpenDate], [t].[OpenDateText], [t].[OwnerId], [t].[ServiceCost], [t].[Id0], [t].[AdditionalInfo], [t].[Address], [t].[BankName], [t].[BankNumber], [t].[Email], [t].[Name0], [t].[Password], [t].[PhoneNumber], [t].[Role], [t0].[Id], [t0].[FundId], [t0].[NickName], [t0].[UserId], [t0].[Id0], [t0].[AdditionalInfo], [t0].[Address], [t0].[BankName], [t0].[BankNumber], [t0].[Email], [t0].[Name], [t0].[Password], [t0].[PhoneNumber], [t0].[Role], [t1].[Id], [t1].[FundId], [t1].[sessionNumber], [t1].[takenDate], [t1].[Id0], [t1].[fundAmount], [t1].[fundMemberId], [t1].[predictedPrice], [t1].[remainPrice], [t1].[serviceCost], [t1].[sessionId], [t1].[Id1], [t1].[FundId0], [t1].[NickName], [t1].[UserId], [t1].[Id2], [t1].[FundSessionId], [t1].[fundMemberId0], [t1].[payCost]
FROM (
    SELECT TOP(1) [f].[Id], [f].[FundPrice], [f].[IsArchived], [f].[Name], [f].[OpenDate], [f].[OpenDateText], [f].[OwnerId], [f].[ServiceCost], [u].[Id] AS [Id0], [u].[AdditionalInfo], [u].[Address], [u].[BankName], [u].[BankNumber], [u].[Email], [u].[Name] AS [Name0], [u].[Password], [u].[PhoneNumber], [u].[Role]
    FROM [Funds] AS [f]
    INNER JOIN [User] AS [u] ON [f].[OwnerId] = [u].[Id]
    WHERE [u].[Id] = @__ownerId_0 AND [f].[Id] = @__fundId_1
) AS [t]
LEFT JOIN (
    SELECT [f0].[Id], [f0].[FundId], [f0].[NickName], [f0].[UserId], [u0].[Id] AS [Id0], [u0].[AdditionalInfo], [u0].[Address], [u0].[BankName], [u0].[BankNumber], [u0].[Email], [u0].[Name], [u0].[Password], [u0].[PhoneNumber], [u0].[Role]
    FROM [FundMember] AS [f0]
    INNER JOIN [User] AS [u0] ON [f0].[UserId] = [u0].[Id]
) AS [t0] ON [t].[Id] = [t0].[FundId]
LEFT JOIN (
    SELECT [f1].[Id], [f1].[FundId], [f1].[sessionNumber], [f1].[takenDate], [t2].[Id] AS [Id0], [t2].[fundAmount], [t2].[fundMemberId], [t2].[predictedPrice], [t2].[remainPrice], [t2].[serviceCost], [t2].[sessionId], [f2].[Id] AS [Id1], [f2].[FundId] AS [FundId0], [f2].[NickName], [f2].[UserId], [n].[Id] AS [Id2], [n].[FundSessionId], [n].[fundMemberId] AS [fundMemberId0], [n].[payCost]
    FROM [FundSession] AS [f1]
    LEFT JOIN [TakenSessionDetail] AS [t2] ON [f1].[Id] = [t2].[sessionId]
    LEFT JOIN [FundMember] AS [f2] ON [t2].[fundMemberId] = [f2].[Id]
    LEFT JOIN [NormalSessionDetail] AS [n] ON [f1].[Id] = [n].[FundSessionId]
) AS [t1] ON [t].[Id] = [t1].[FundId]
ORDER BY [t].[Id], [t].[Id0], [t0].[Id], [t0].[Id0], [t1].[Id], [t1].[Id0], [t1].[Id1]
2023-07-16 18:06:44.107 +07:00 [INF] Executing OkObjectResult, writing value of type 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetResponse'.
2023-07-16 18:06:44.108 +07:00 [INF] Executed action hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web) in 5.7656ms
2023-07-16 18:06:44.108 +07:00 [INF] Executed endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:06:44.108 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:57678/funds/1 application/json - - 200 - application/json;+charset=utf-8 6.9763ms
2023-07-16 18:06:47.536 +07:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:57678/funds/2 - -
2023-07-16 18:06:47.537 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:06:47.537 +07:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:57678/funds/2 - - - 204 - - 0.6414ms
2023-07-16 18:06:47.538 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:57678/funds/2 application/json -
2023-07-16 18:06:47.538 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:06:47.539 +07:00 [INF] Executing endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:06:47.539 +07:00 [INF] Route matched with {action = "Handle", controller = "FundGet"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[hui_management_backend.Web.Endpoints.FundEndpoints.FundGetResponse]] HandleAsync(hui_management_backend.Web.Endpoints.FundEndpoints.FundGetRequest, System.Threading.CancellationToken) on controller hui_management_backend.Web.Endpoints.FundEndpoints.FundGet (hui_management_backend.Web).
2023-07-16 18:06:47.543 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ownerId_0='?' (DbType = Int32), @__fundId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[FundPrice], [t].[IsArchived], [t].[Name], [t].[OpenDate], [t].[OpenDateText], [t].[OwnerId], [t].[ServiceCost], [t].[Id0], [t].[AdditionalInfo], [t].[Address], [t].[BankName], [t].[BankNumber], [t].[Email], [t].[Name0], [t].[Password], [t].[PhoneNumber], [t].[Role], [t0].[Id], [t0].[FundId], [t0].[NickName], [t0].[UserId], [t0].[Id0], [t0].[AdditionalInfo], [t0].[Address], [t0].[BankName], [t0].[BankNumber], [t0].[Email], [t0].[Name], [t0].[Password], [t0].[PhoneNumber], [t0].[Role], [t1].[Id], [t1].[FundId], [t1].[sessionNumber], [t1].[takenDate], [t1].[Id0], [t1].[fundAmount], [t1].[fundMemberId], [t1].[predictedPrice], [t1].[remainPrice], [t1].[serviceCost], [t1].[sessionId], [t1].[Id1], [t1].[FundId0], [t1].[NickName], [t1].[UserId], [t1].[Id2], [t1].[FundSessionId], [t1].[fundMemberId0], [t1].[payCost]
FROM (
    SELECT TOP(1) [f].[Id], [f].[FundPrice], [f].[IsArchived], [f].[Name], [f].[OpenDate], [f].[OpenDateText], [f].[OwnerId], [f].[ServiceCost], [u].[Id] AS [Id0], [u].[AdditionalInfo], [u].[Address], [u].[BankName], [u].[BankNumber], [u].[Email], [u].[Name] AS [Name0], [u].[Password], [u].[PhoneNumber], [u].[Role]
    FROM [Funds] AS [f]
    INNER JOIN [User] AS [u] ON [f].[OwnerId] = [u].[Id]
    WHERE [u].[Id] = @__ownerId_0 AND [f].[Id] = @__fundId_1
) AS [t]
LEFT JOIN (
    SELECT [f0].[Id], [f0].[FundId], [f0].[NickName], [f0].[UserId], [u0].[Id] AS [Id0], [u0].[AdditionalInfo], [u0].[Address], [u0].[BankName], [u0].[BankNumber], [u0].[Email], [u0].[Name], [u0].[Password], [u0].[PhoneNumber], [u0].[Role]
    FROM [FundMember] AS [f0]
    INNER JOIN [User] AS [u0] ON [f0].[UserId] = [u0].[Id]
) AS [t0] ON [t].[Id] = [t0].[FundId]
LEFT JOIN (
    SELECT [f1].[Id], [f1].[FundId], [f1].[sessionNumber], [f1].[takenDate], [t2].[Id] AS [Id0], [t2].[fundAmount], [t2].[fundMemberId], [t2].[predictedPrice], [t2].[remainPrice], [t2].[serviceCost], [t2].[sessionId], [f2].[Id] AS [Id1], [f2].[FundId] AS [FundId0], [f2].[NickName], [f2].[UserId], [n].[Id] AS [Id2], [n].[FundSessionId], [n].[fundMemberId] AS [fundMemberId0], [n].[payCost]
    FROM [FundSession] AS [f1]
    LEFT JOIN [TakenSessionDetail] AS [t2] ON [f1].[Id] = [t2].[sessionId]
    LEFT JOIN [FundMember] AS [f2] ON [t2].[fundMemberId] = [f2].[Id]
    LEFT JOIN [NormalSessionDetail] AS [n] ON [f1].[Id] = [n].[FundSessionId]
) AS [t1] ON [t].[Id] = [t1].[FundId]
ORDER BY [t].[Id], [t].[Id0], [t0].[Id], [t0].[Id0], [t1].[Id], [t1].[Id0], [t1].[Id1]
2023-07-16 18:06:47.544 +07:00 [INF] Executing OkObjectResult, writing value of type 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetResponse'.
2023-07-16 18:06:47.545 +07:00 [INF] Executed action hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web) in 5.99ms
2023-07-16 18:06:47.545 +07:00 [INF] Executed endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:06:47.545 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:57678/funds/2 application/json - - 200 - application/json;+charset=utf-8 7.1722ms
2023-07-16 18:06:49.268 +07:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:57678/funds/1 - -
2023-07-16 18:06:49.269 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:06:49.269 +07:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:57678/funds/1 - - - 204 - - 0.5211ms
2023-07-16 18:06:49.270 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:57678/funds/1 application/json -
2023-07-16 18:06:49.270 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:06:49.270 +07:00 [INF] Executing endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:06:49.270 +07:00 [INF] Route matched with {action = "Handle", controller = "FundGet"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[hui_management_backend.Web.Endpoints.FundEndpoints.FundGetResponse]] HandleAsync(hui_management_backend.Web.Endpoints.FundEndpoints.FundGetRequest, System.Threading.CancellationToken) on controller hui_management_backend.Web.Endpoints.FundEndpoints.FundGet (hui_management_backend.Web).
2023-07-16 18:06:49.275 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ownerId_0='?' (DbType = Int32), @__fundId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[FundPrice], [t].[IsArchived], [t].[Name], [t].[OpenDate], [t].[OpenDateText], [t].[OwnerId], [t].[ServiceCost], [t].[Id0], [t].[AdditionalInfo], [t].[Address], [t].[BankName], [t].[BankNumber], [t].[Email], [t].[Name0], [t].[Password], [t].[PhoneNumber], [t].[Role], [t0].[Id], [t0].[FundId], [t0].[NickName], [t0].[UserId], [t0].[Id0], [t0].[AdditionalInfo], [t0].[Address], [t0].[BankName], [t0].[BankNumber], [t0].[Email], [t0].[Name], [t0].[Password], [t0].[PhoneNumber], [t0].[Role], [t1].[Id], [t1].[FundId], [t1].[sessionNumber], [t1].[takenDate], [t1].[Id0], [t1].[fundAmount], [t1].[fundMemberId], [t1].[predictedPrice], [t1].[remainPrice], [t1].[serviceCost], [t1].[sessionId], [t1].[Id1], [t1].[FundId0], [t1].[NickName], [t1].[UserId], [t1].[Id2], [t1].[FundSessionId], [t1].[fundMemberId0], [t1].[payCost]
FROM (
    SELECT TOP(1) [f].[Id], [f].[FundPrice], [f].[IsArchived], [f].[Name], [f].[OpenDate], [f].[OpenDateText], [f].[OwnerId], [f].[ServiceCost], [u].[Id] AS [Id0], [u].[AdditionalInfo], [u].[Address], [u].[BankName], [u].[BankNumber], [u].[Email], [u].[Name] AS [Name0], [u].[Password], [u].[PhoneNumber], [u].[Role]
    FROM [Funds] AS [f]
    INNER JOIN [User] AS [u] ON [f].[OwnerId] = [u].[Id]
    WHERE [u].[Id] = @__ownerId_0 AND [f].[Id] = @__fundId_1
) AS [t]
LEFT JOIN (
    SELECT [f0].[Id], [f0].[FundId], [f0].[NickName], [f0].[UserId], [u0].[Id] AS [Id0], [u0].[AdditionalInfo], [u0].[Address], [u0].[BankName], [u0].[BankNumber], [u0].[Email], [u0].[Name], [u0].[Password], [u0].[PhoneNumber], [u0].[Role]
    FROM [FundMember] AS [f0]
    INNER JOIN [User] AS [u0] ON [f0].[UserId] = [u0].[Id]
) AS [t0] ON [t].[Id] = [t0].[FundId]
LEFT JOIN (
    SELECT [f1].[Id], [f1].[FundId], [f1].[sessionNumber], [f1].[takenDate], [t2].[Id] AS [Id0], [t2].[fundAmount], [t2].[fundMemberId], [t2].[predictedPrice], [t2].[remainPrice], [t2].[serviceCost], [t2].[sessionId], [f2].[Id] AS [Id1], [f2].[FundId] AS [FundId0], [f2].[NickName], [f2].[UserId], [n].[Id] AS [Id2], [n].[FundSessionId], [n].[fundMemberId] AS [fundMemberId0], [n].[payCost]
    FROM [FundSession] AS [f1]
    LEFT JOIN [TakenSessionDetail] AS [t2] ON [f1].[Id] = [t2].[sessionId]
    LEFT JOIN [FundMember] AS [f2] ON [t2].[fundMemberId] = [f2].[Id]
    LEFT JOIN [NormalSessionDetail] AS [n] ON [f1].[Id] = [n].[FundSessionId]
) AS [t1] ON [t].[Id] = [t1].[FundId]
ORDER BY [t].[Id], [t].[Id0], [t0].[Id], [t0].[Id0], [t1].[Id], [t1].[Id0], [t1].[Id1]
2023-07-16 18:06:49.275 +07:00 [INF] Executing OkObjectResult, writing value of type 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetResponse'.
2023-07-16 18:06:49.276 +07:00 [INF] Executed action hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web) in 5.418ms
2023-07-16 18:06:49.276 +07:00 [INF] Executed endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:06:49.276 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:57678/funds/1 application/json - - 200 - application/json;+charset=utf-8 6.3869ms
2023-07-16 18:06:52.597 +07:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:57678/funds/2 - -
2023-07-16 18:06:52.597 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:06:52.598 +07:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:57678/funds/2 - - - 204 - - 0.8189ms
2023-07-16 18:06:52.599 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:57678/funds/2 application/json -
2023-07-16 18:06:52.599 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:06:52.599 +07:00 [INF] Executing endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:06:52.599 +07:00 [INF] Route matched with {action = "Handle", controller = "FundGet"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[hui_management_backend.Web.Endpoints.FundEndpoints.FundGetResponse]] HandleAsync(hui_management_backend.Web.Endpoints.FundEndpoints.FundGetRequest, System.Threading.CancellationToken) on controller hui_management_backend.Web.Endpoints.FundEndpoints.FundGet (hui_management_backend.Web).
2023-07-16 18:06:52.602 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ownerId_0='?' (DbType = Int32), @__fundId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[FundPrice], [t].[IsArchived], [t].[Name], [t].[OpenDate], [t].[OpenDateText], [t].[OwnerId], [t].[ServiceCost], [t].[Id0], [t].[AdditionalInfo], [t].[Address], [t].[BankName], [t].[BankNumber], [t].[Email], [t].[Name0], [t].[Password], [t].[PhoneNumber], [t].[Role], [t0].[Id], [t0].[FundId], [t0].[NickName], [t0].[UserId], [t0].[Id0], [t0].[AdditionalInfo], [t0].[Address], [t0].[BankName], [t0].[BankNumber], [t0].[Email], [t0].[Name], [t0].[Password], [t0].[PhoneNumber], [t0].[Role], [t1].[Id], [t1].[FundId], [t1].[sessionNumber], [t1].[takenDate], [t1].[Id0], [t1].[fundAmount], [t1].[fundMemberId], [t1].[predictedPrice], [t1].[remainPrice], [t1].[serviceCost], [t1].[sessionId], [t1].[Id1], [t1].[FundId0], [t1].[NickName], [t1].[UserId], [t1].[Id2], [t1].[FundSessionId], [t1].[fundMemberId0], [t1].[payCost]
FROM (
    SELECT TOP(1) [f].[Id], [f].[FundPrice], [f].[IsArchived], [f].[Name], [f].[OpenDate], [f].[OpenDateText], [f].[OwnerId], [f].[ServiceCost], [u].[Id] AS [Id0], [u].[AdditionalInfo], [u].[Address], [u].[BankName], [u].[BankNumber], [u].[Email], [u].[Name] AS [Name0], [u].[Password], [u].[PhoneNumber], [u].[Role]
    FROM [Funds] AS [f]
    INNER JOIN [User] AS [u] ON [f].[OwnerId] = [u].[Id]
    WHERE [u].[Id] = @__ownerId_0 AND [f].[Id] = @__fundId_1
) AS [t]
LEFT JOIN (
    SELECT [f0].[Id], [f0].[FundId], [f0].[NickName], [f0].[UserId], [u0].[Id] AS [Id0], [u0].[AdditionalInfo], [u0].[Address], [u0].[BankName], [u0].[BankNumber], [u0].[Email], [u0].[Name], [u0].[Password], [u0].[PhoneNumber], [u0].[Role]
    FROM [FundMember] AS [f0]
    INNER JOIN [User] AS [u0] ON [f0].[UserId] = [u0].[Id]
) AS [t0] ON [t].[Id] = [t0].[FundId]
LEFT JOIN (
    SELECT [f1].[Id], [f1].[FundId], [f1].[sessionNumber], [f1].[takenDate], [t2].[Id] AS [Id0], [t2].[fundAmount], [t2].[fundMemberId], [t2].[predictedPrice], [t2].[remainPrice], [t2].[serviceCost], [t2].[sessionId], [f2].[Id] AS [Id1], [f2].[FundId] AS [FundId0], [f2].[NickName], [f2].[UserId], [n].[Id] AS [Id2], [n].[FundSessionId], [n].[fundMemberId] AS [fundMemberId0], [n].[payCost]
    FROM [FundSession] AS [f1]
    LEFT JOIN [TakenSessionDetail] AS [t2] ON [f1].[Id] = [t2].[sessionId]
    LEFT JOIN [FundMember] AS [f2] ON [t2].[fundMemberId] = [f2].[Id]
    LEFT JOIN [NormalSessionDetail] AS [n] ON [f1].[Id] = [n].[FundSessionId]
) AS [t1] ON [t].[Id] = [t1].[FundId]
ORDER BY [t].[Id], [t].[Id0], [t0].[Id], [t0].[Id0], [t1].[Id], [t1].[Id0], [t1].[Id1]
2023-07-16 18:06:52.604 +07:00 [INF] Executing OkObjectResult, writing value of type 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetResponse'.
2023-07-16 18:06:52.604 +07:00 [INF] Executed action hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web) in 4.7664ms
2023-07-16 18:06:52.604 +07:00 [INF] Executed endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:06:52.604 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:57678/funds/2 application/json - - 200 - application/json;+charset=utf-8 5.7835ms
2023-07-16 18:07:07.169 +07:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:57678/funds/2/sessions/add - -
2023-07-16 18:07:07.170 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:07:07.170 +07:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:57678/funds/2/sessions/add - - - 204 - - 0.6213ms
2023-07-16 18:07:07.171 +07:00 [INF] Request starting HTTP/1.1 POST http://localhost:57678/funds/2/sessions/add application/json 36
2023-07-16 18:07:07.172 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:07:07.172 +07:00 [INF] Executing endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSession.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:07:07.172 +07:00 [INF] Route matched with {action = "Handle", controller = "FundAddSession"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] HandleAsync(hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSessionRequest, System.Threading.CancellationToken) on controller hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSession (hui_management_backend.Web).
2023-07-16 18:07:07.176 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ownerId_0='?' (DbType = Int32), @__fundId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[FundPrice], [t].[IsArchived], [t].[Name], [t].[OpenDate], [t].[OpenDateText], [t].[OwnerId], [t].[ServiceCost], [t].[Id0], [t].[AdditionalInfo], [t].[Address], [t].[BankName], [t].[BankNumber], [t].[Email], [t].[Name0], [t].[Password], [t].[PhoneNumber], [t].[Role], [t0].[Id], [t0].[FundId], [t0].[NickName], [t0].[UserId], [t0].[Id0], [t0].[AdditionalInfo], [t0].[Address], [t0].[BankName], [t0].[BankNumber], [t0].[Email], [t0].[Name], [t0].[Password], [t0].[PhoneNumber], [t0].[Role], [t1].[Id], [t1].[FundId], [t1].[sessionNumber], [t1].[takenDate], [t1].[Id0], [t1].[fundAmount], [t1].[fundMemberId], [t1].[predictedPrice], [t1].[remainPrice], [t1].[serviceCost], [t1].[sessionId], [t1].[Id1], [t1].[FundId0], [t1].[NickName], [t1].[UserId], [t1].[Id2], [t1].[FundSessionId], [t1].[fundMemberId0], [t1].[payCost]
FROM (
    SELECT TOP(1) [f].[Id], [f].[FundPrice], [f].[IsArchived], [f].[Name], [f].[OpenDate], [f].[OpenDateText], [f].[OwnerId], [f].[ServiceCost], [u].[Id] AS [Id0], [u].[AdditionalInfo], [u].[Address], [u].[BankName], [u].[BankNumber], [u].[Email], [u].[Name] AS [Name0], [u].[Password], [u].[PhoneNumber], [u].[Role]
    FROM [Funds] AS [f]
    INNER JOIN [User] AS [u] ON [f].[OwnerId] = [u].[Id]
    WHERE [u].[Id] = @__ownerId_0 AND [f].[Id] = @__fundId_1
) AS [t]
LEFT JOIN (
    SELECT [f0].[Id], [f0].[FundId], [f0].[NickName], [f0].[UserId], [u0].[Id] AS [Id0], [u0].[AdditionalInfo], [u0].[Address], [u0].[BankName], [u0].[BankNumber], [u0].[Email], [u0].[Name], [u0].[Password], [u0].[PhoneNumber], [u0].[Role]
    FROM [FundMember] AS [f0]
    INNER JOIN [User] AS [u0] ON [f0].[UserId] = [u0].[Id]
) AS [t0] ON [t].[Id] = [t0].[FundId]
LEFT JOIN (
    SELECT [f1].[Id], [f1].[FundId], [f1].[sessionNumber], [f1].[takenDate], [t2].[Id] AS [Id0], [t2].[fundAmount], [t2].[fundMemberId], [t2].[predictedPrice], [t2].[remainPrice], [t2].[serviceCost], [t2].[sessionId], [f2].[Id] AS [Id1], [f2].[FundId] AS [FundId0], [f2].[NickName], [f2].[UserId], [n].[Id] AS [Id2], [n].[FundSessionId], [n].[fundMemberId] AS [fundMemberId0], [n].[payCost]
    FROM [FundSession] AS [f1]
    LEFT JOIN [TakenSessionDetail] AS [t2] ON [f1].[Id] = [t2].[sessionId]
    LEFT JOIN [FundMember] AS [f2] ON [t2].[fundMemberId] = [f2].[Id]
    LEFT JOIN [NormalSessionDetail] AS [n] ON [f1].[Id] = [n].[FundSessionId]
) AS [t1] ON [t].[Id] = [t1].[FundId]
ORDER BY [t].[Id], [t].[Id0], [t0].[Id], [t0].[Id0], [t1].[Id], [t1].[Id0], [t1].[Id1]
2023-07-16 18:07:07.182 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = DateTimeOffset), @p10='?' (DbType = Int32), @p3='?' (DbType = Double), @p4='?' (DbType = Boolean), @p5='?' (Size = 4000), @p6='?' (DbType = DateTimeOffset), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [FundSession] ([FundId], [sessionNumber], [takenDate])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2);
UPDATE [Funds] SET [FundPrice] = @p3, [IsArchived] = @p4, [Name] = @p5, [OpenDate] = @p6, [OpenDateText] = @p7, [OwnerId] = @p8, [ServiceCost] = @p9
OUTPUT 1
WHERE [Id] = @p10;
2023-07-16 18:07:07.188 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@p11='?' (DbType = Int32), @p12='?' (DbType = Int32), @p13='?' (DbType = Double), @p14='?' (DbType = Int32), @p15='?' (DbType = Int32), @p16='?' (DbType = Double), @p17='?' (DbType = Double), @p18='?' (DbType = Int32), @p19='?' (DbType = Double), @p20='?' (DbType = Double), @p21='?' (DbType = Double), @p22='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
MERGE [NormalSessionDetail] USING (
VALUES (@p11, @p12, @p13, 0),
(@p14, @p15, @p16, 1)) AS i ([FundSessionId], [fundMemberId], [payCost], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([FundSessionId], [fundMemberId], [payCost])
VALUES (i.[FundSessionId], i.[fundMemberId], i.[payCost])
OUTPUT INSERTED.[Id], i._Position;
INSERT INTO [TakenSessionDetail] ([fundAmount], [fundMemberId], [predictedPrice], [remainPrice], [serviceCost], [sessionId])
OUTPUT INSERTED.[Id]
VALUES (@p17, @p18, @p19, @p20, @p21, @p22);
2023-07-16 18:07:07.194 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__dateTimeOffset_Date_0='?' (DbType = DateTime2), @__ownerId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[CreateAt], [p].[OwnerId], [p].[Status]
FROM [Payment] AS [p]
WHERE CONVERT(date, [p].[CreateAt]) = @__dateTimeOffset_Date_0 AND [p].[OwnerId] = @__ownerId_1
2023-07-16 18:07:09.437 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = DateTimeOffset), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Payment] ([CreateAt], [OwnerId], [Status])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2);
2023-07-16 18:07:09.446 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@p3='?' (DbType = Double), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32), @p7='?' (DbType = Int32), @p8='?' (DbType = Double), @p9='?' (DbType = Int32), @p10='?' (DbType = Int32), @p11='?' (DbType = Int32), @p12='?' (DbType = Int32), @p13='?' (DbType = Double), @p14='?' (DbType = Int32), @p15='?' (DbType = Int32), @p16='?' (DbType = Int32), @p17='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
MERGE [FundBill] USING (
VALUES (@p3, @p4, @p5, @p6, @p7, 0),
(@p8, @p9, @p10, @p11, @p12, 1),
(@p13, @p14, @p15, @p16, @p17, 2)) AS i ([Amount], [PaymentId], [Status], [Type], [fromFundId], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([Amount], [PaymentId], [Status], [Type], [fromFundId])
VALUES (i.[Amount], i.[PaymentId], i.[Status], i.[Type], i.[fromFundId])
OUTPUT INSERTED.[Id], i._Position;
2023-07-16 18:07:18.338 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2023-07-16 18:07:18.339 +07:00 [INF] Executed action hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSession.HandleAsync (hui_management_backend.Web) in 11166.9233ms
2023-07-16 18:07:18.339 +07:00 [INF] Executed endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSession.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:07:18.339 +07:00 [INF] Request finished HTTP/1.1 POST http://localhost:57678/funds/2/sessions/add application/json 36 - 200 - application/json;+charset=utf-8 11168.0943ms
2023-07-16 18:07:18.344 +07:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:57678/funds/2 - -
2023-07-16 18:07:18.344 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:07:18.345 +07:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:57678/funds/2 - - - 204 - - 0.5643ms
2023-07-16 18:07:18.345 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:57678/funds/2 application/json -
2023-07-16 18:07:18.346 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:07:18.346 +07:00 [INF] Executing endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:07:18.346 +07:00 [INF] Route matched with {action = "Handle", controller = "FundGet"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[hui_management_backend.Web.Endpoints.FundEndpoints.FundGetResponse]] HandleAsync(hui_management_backend.Web.Endpoints.FundEndpoints.FundGetRequest, System.Threading.CancellationToken) on controller hui_management_backend.Web.Endpoints.FundEndpoints.FundGet (hui_management_backend.Web).
2023-07-16 18:07:18.350 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ownerId_0='?' (DbType = Int32), @__fundId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[FundPrice], [t].[IsArchived], [t].[Name], [t].[OpenDate], [t].[OpenDateText], [t].[OwnerId], [t].[ServiceCost], [t].[Id0], [t].[AdditionalInfo], [t].[Address], [t].[BankName], [t].[BankNumber], [t].[Email], [t].[Name0], [t].[Password], [t].[PhoneNumber], [t].[Role], [t0].[Id], [t0].[FundId], [t0].[NickName], [t0].[UserId], [t0].[Id0], [t0].[AdditionalInfo], [t0].[Address], [t0].[BankName], [t0].[BankNumber], [t0].[Email], [t0].[Name], [t0].[Password], [t0].[PhoneNumber], [t0].[Role], [t1].[Id], [t1].[FundId], [t1].[sessionNumber], [t1].[takenDate], [t1].[Id0], [t1].[fundAmount], [t1].[fundMemberId], [t1].[predictedPrice], [t1].[remainPrice], [t1].[serviceCost], [t1].[sessionId], [t1].[Id1], [t1].[FundId0], [t1].[NickName], [t1].[UserId], [t1].[Id2], [t1].[FundSessionId], [t1].[fundMemberId0], [t1].[payCost]
FROM (
    SELECT TOP(1) [f].[Id], [f].[FundPrice], [f].[IsArchived], [f].[Name], [f].[OpenDate], [f].[OpenDateText], [f].[OwnerId], [f].[ServiceCost], [u].[Id] AS [Id0], [u].[AdditionalInfo], [u].[Address], [u].[BankName], [u].[BankNumber], [u].[Email], [u].[Name] AS [Name0], [u].[Password], [u].[PhoneNumber], [u].[Role]
    FROM [Funds] AS [f]
    INNER JOIN [User] AS [u] ON [f].[OwnerId] = [u].[Id]
    WHERE [u].[Id] = @__ownerId_0 AND [f].[Id] = @__fundId_1
) AS [t]
LEFT JOIN (
    SELECT [f0].[Id], [f0].[FundId], [f0].[NickName], [f0].[UserId], [u0].[Id] AS [Id0], [u0].[AdditionalInfo], [u0].[Address], [u0].[BankName], [u0].[BankNumber], [u0].[Email], [u0].[Name], [u0].[Password], [u0].[PhoneNumber], [u0].[Role]
    FROM [FundMember] AS [f0]
    INNER JOIN [User] AS [u0] ON [f0].[UserId] = [u0].[Id]
) AS [t0] ON [t].[Id] = [t0].[FundId]
LEFT JOIN (
    SELECT [f1].[Id], [f1].[FundId], [f1].[sessionNumber], [f1].[takenDate], [t2].[Id] AS [Id0], [t2].[fundAmount], [t2].[fundMemberId], [t2].[predictedPrice], [t2].[remainPrice], [t2].[serviceCost], [t2].[sessionId], [f2].[Id] AS [Id1], [f2].[FundId] AS [FundId0], [f2].[NickName], [f2].[UserId], [n].[Id] AS [Id2], [n].[FundSessionId], [n].[fundMemberId] AS [fundMemberId0], [n].[payCost]
    FROM [FundSession] AS [f1]
    LEFT JOIN [TakenSessionDetail] AS [t2] ON [f1].[Id] = [t2].[sessionId]
    LEFT JOIN [FundMember] AS [f2] ON [t2].[fundMemberId] = [f2].[Id]
    LEFT JOIN [NormalSessionDetail] AS [n] ON [f1].[Id] = [n].[FundSessionId]
) AS [t1] ON [t].[Id] = [t1].[FundId]
ORDER BY [t].[Id], [t].[Id0], [t0].[Id], [t0].[Id0], [t1].[Id], [t1].[Id0], [t1].[Id1]
2023-07-16 18:07:18.351 +07:00 [INF] Executing OkObjectResult, writing value of type 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetResponse'.
2023-07-16 18:07:18.351 +07:00 [INF] Executed action hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web) in 4.9673ms
2023-07-16 18:07:18.352 +07:00 [INF] Executed endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:07:18.352 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:57678/funds/2 application/json - - 200 - application/json;+charset=utf-8 6.3035ms
2023-07-16 18:08:11.551 +07:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:57678/funds - -
2023-07-16 18:08:11.554 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:08:11.554 +07:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:57678/funds - - - 204 - - 2.8712ms
2023-07-16 18:08:11.555 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:57678/funds application/json -
2023-07-16 18:08:11.556 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:08:11.556 +07:00 [INF] Executing endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAll.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:08:11.556 +07:00 [INF] Route matched with {action = "Handle", controller = "FundGetAll"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAllResponse]] HandleAsync(System.Threading.CancellationToken) on controller hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAll (hui_management_backend.Web).
2023-07-16 18:08:11.596 +07:00 [INF] Executed DbCommand (35ms) [Parameters=[@__ownerId_0='?' (DbType = Int32), @__isArchived_1='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [f].[Id], [f].[FundPrice], [f].[IsArchived], [f].[Name], [f].[OpenDate], [f].[OpenDateText], [f].[OwnerId], [f].[ServiceCost], [u].[Id], [u].[AdditionalInfo], [u].[Address], [u].[BankName], [u].[BankNumber], [u].[Email], [u].[Name], [u].[Password], [u].[PhoneNumber], [u].[Role], [f0].[Id], [f0].[FundId], [f0].[NickName], [f0].[UserId], [f1].[Id], [f1].[FundId], [f1].[sessionNumber], [f1].[takenDate]
FROM [Funds] AS [f]
INNER JOIN [User] AS [u] ON [f].[OwnerId] = [u].[Id]
LEFT JOIN [FundMember] AS [f0] ON [f].[Id] = [f0].[FundId]
LEFT JOIN [FundSession] AS [f1] ON [f].[Id] = [f1].[FundId]
WHERE [u].[Id] = @__ownerId_0 AND [f].[IsArchived] = @__isArchived_1
ORDER BY [f].[Id], [u].[Id], [f0].[Id]
2023-07-16 18:08:11.627 +07:00 [INF] Executing OkObjectResult, writing value of type 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAllResponse'.
2023-07-16 18:08:11.628 +07:00 [INF] Executed action hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAll.HandleAsync (hui_management_backend.Web) in 72.4315ms
2023-07-16 18:08:11.628 +07:00 [INF] Executed endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAll.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:08:11.629 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:57678/funds application/json - - 200 - application/json;+charset=utf-8 73.4127ms
2023-07-16 18:11:53.189 +07:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-16 18:11:53.238 +07:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-07-16 18:11:53.357 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Funds] AS [f]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-16 18:11:53.368 +07:00 [INF] User profile is available. Using 'C:\Users\khang\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-07-16 18:11:53.437 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2023-07-16 18:11:53.437 +07:00 [INF] Hosting environment: Development
2023-07-16 18:11:53.437 +07:00 [INF] Content root path: C:\Users\khang\Desktop\Hui_Management\hui_management_backend\src\hui_management_backend.Web
2023-07-16 18:11:53.446 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:57678/ - -
2023-07-16 18:11:53.507 +07:00 [WRN] Failed to determine the https port for redirect.
2023-07-16 18:11:53.532 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:57678/ - - - 404 - - 87.1609ms
2023-07-16 18:12:01.457 +07:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:57678/funds - -
2023-07-16 18:12:01.462 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:12:01.465 +07:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:57678/funds - - - 204 - - 8.6097ms
2023-07-16 18:12:01.466 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:57678/funds application/json -
2023-07-16 18:12:01.573 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:12:01.575 +07:00 [INF] Executing endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAll.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:12:01.591 +07:00 [INF] Route matched with {action = "Handle", controller = "FundGetAll"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAllResponse]] HandleAsync(System.Threading.CancellationToken) on controller hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAll (hui_management_backend.Web).
2023-07-16 18:12:01.821 +07:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2023-07-16 18:12:01.867 +07:00 [INF] Executed DbCommand (24ms) [Parameters=[@__ownerId_0='?' (DbType = Int32), @__isArchived_1='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [f].[Id], [f].[FundPrice], [f].[IsArchived], [f].[Name], [f].[OpenDate], [f].[OpenDateText], [f].[OwnerId], [f].[ServiceCost], [u].[Id], [u].[AdditionalInfo], [u].[Address], [u].[BankName], [u].[BankNumber], [u].[Email], [u].[Name], [u].[Password], [u].[PhoneNumber], [u].[Role], [f0].[Id], [f0].[FundId], [f0].[NickName], [f0].[UserId], [f1].[Id], [f1].[FundId], [f1].[sessionNumber], [f1].[takenDate]
FROM [Funds] AS [f]
INNER JOIN [User] AS [u] ON [f].[OwnerId] = [u].[Id]
LEFT JOIN [FundMember] AS [f0] ON [f].[Id] = [f0].[FundId]
LEFT JOIN [FundSession] AS [f1] ON [f].[Id] = [f1].[FundId]
WHERE [u].[Id] = @__ownerId_0 AND [f].[IsArchived] = @__isArchived_1
ORDER BY [f].[Id], [u].[Id], [f0].[Id]
2023-07-16 18:12:02.008 +07:00 [INF] Executing OkObjectResult, writing value of type 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAllResponse'.
2023-07-16 18:12:02.041 +07:00 [INF] Executed action hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAll.HandleAsync (hui_management_backend.Web) in 448.0559ms
2023-07-16 18:12:02.041 +07:00 [INF] Executed endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAll.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:12:02.045 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:57678/funds application/json - - 200 - application/json;+charset=utf-8 578.9553ms
2023-07-16 18:12:02.976 +07:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:57678/funds/1 - -
2023-07-16 18:12:02.977 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:12:02.977 +07:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:57678/funds/1 - - - 204 - - 1.5876ms
2023-07-16 18:12:02.978 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:57678/funds/1 application/json -
2023-07-16 18:12:02.980 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:12:02.981 +07:00 [INF] Executing endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:12:02.987 +07:00 [INF] Route matched with {action = "Handle", controller = "FundGet"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[hui_management_backend.Web.Endpoints.FundEndpoints.FundGetResponse]] HandleAsync(hui_management_backend.Web.Endpoints.FundEndpoints.FundGetRequest, System.Threading.CancellationToken) on controller hui_management_backend.Web.Endpoints.FundEndpoints.FundGet (hui_management_backend.Web).
2023-07-16 18:12:03.031 +07:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2023-07-16 18:12:03.046 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__ownerId_0='?' (DbType = Int32), @__fundId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[FundPrice], [t].[IsArchived], [t].[Name], [t].[OpenDate], [t].[OpenDateText], [t].[OwnerId], [t].[ServiceCost], [t].[Id0], [t].[AdditionalInfo], [t].[Address], [t].[BankName], [t].[BankNumber], [t].[Email], [t].[Name0], [t].[Password], [t].[PhoneNumber], [t].[Role], [t0].[Id], [t0].[FundId], [t0].[NickName], [t0].[UserId], [t0].[Id0], [t0].[AdditionalInfo], [t0].[Address], [t0].[BankName], [t0].[BankNumber], [t0].[Email], [t0].[Name], [t0].[Password], [t0].[PhoneNumber], [t0].[Role], [t1].[Id], [t1].[FundId], [t1].[sessionNumber], [t1].[takenDate], [t1].[Id0], [t1].[fundAmount], [t1].[fundMemberId], [t1].[predictedPrice], [t1].[remainPrice], [t1].[serviceCost], [t1].[sessionId], [t1].[Id1], [t1].[FundId0], [t1].[NickName], [t1].[UserId], [t1].[Id2], [t1].[FundSessionId], [t1].[fundMemberId0], [t1].[payCost]
FROM (
    SELECT TOP(1) [f].[Id], [f].[FundPrice], [f].[IsArchived], [f].[Name], [f].[OpenDate], [f].[OpenDateText], [f].[OwnerId], [f].[ServiceCost], [u].[Id] AS [Id0], [u].[AdditionalInfo], [u].[Address], [u].[BankName], [u].[BankNumber], [u].[Email], [u].[Name] AS [Name0], [u].[Password], [u].[PhoneNumber], [u].[Role]
    FROM [Funds] AS [f]
    INNER JOIN [User] AS [u] ON [f].[OwnerId] = [u].[Id]
    WHERE [u].[Id] = @__ownerId_0 AND [f].[Id] = @__fundId_1
) AS [t]
LEFT JOIN (
    SELECT [f0].[Id], [f0].[FundId], [f0].[NickName], [f0].[UserId], [u0].[Id] AS [Id0], [u0].[AdditionalInfo], [u0].[Address], [u0].[BankName], [u0].[BankNumber], [u0].[Email], [u0].[Name], [u0].[Password], [u0].[PhoneNumber], [u0].[Role]
    FROM [FundMember] AS [f0]
    INNER JOIN [User] AS [u0] ON [f0].[UserId] = [u0].[Id]
) AS [t0] ON [t].[Id] = [t0].[FundId]
LEFT JOIN (
    SELECT [f1].[Id], [f1].[FundId], [f1].[sessionNumber], [f1].[takenDate], [t2].[Id] AS [Id0], [t2].[fundAmount], [t2].[fundMemberId], [t2].[predictedPrice], [t2].[remainPrice], [t2].[serviceCost], [t2].[sessionId], [f2].[Id] AS [Id1], [f2].[FundId] AS [FundId0], [f2].[NickName], [f2].[UserId], [n].[Id] AS [Id2], [n].[FundSessionId], [n].[fundMemberId] AS [fundMemberId0], [n].[payCost]
    FROM [FundSession] AS [f1]
    LEFT JOIN [TakenSessionDetail] AS [t2] ON [f1].[Id] = [t2].[sessionId]
    LEFT JOIN [FundMember] AS [f2] ON [t2].[fundMemberId] = [f2].[Id]
    LEFT JOIN [NormalSessionDetail] AS [n] ON [f1].[Id] = [n].[FundSessionId]
) AS [t1] ON [t].[Id] = [t1].[FundId]
ORDER BY [t].[Id], [t].[Id0], [t0].[Id], [t0].[Id0], [t1].[Id], [t1].[Id0], [t1].[Id1]
2023-07-16 18:12:03.067 +07:00 [INF] Executing OkObjectResult, writing value of type 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetResponse'.
2023-07-16 18:12:03.077 +07:00 [INF] Executed action hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web) in 90.2694ms
2023-07-16 18:12:03.077 +07:00 [INF] Executed endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:12:03.078 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:57678/funds/1 application/json - - 200 - application/json;+charset=utf-8 99.2216ms
2023-07-16 18:12:13.976 +07:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:57678/funds/1/sessions/add - -
2023-07-16 18:12:13.977 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:12:13.977 +07:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:57678/funds/1/sessions/add - - - 204 - - 1.1016ms
2023-07-16 18:12:13.978 +07:00 [INF] Request starting HTTP/1.1 POST http://localhost:57678/funds/1/sessions/add application/json 36
2023-07-16 18:12:13.979 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:12:13.979 +07:00 [INF] Executing endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSession.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:12:13.983 +07:00 [INF] Route matched with {action = "Handle", controller = "FundAddSession"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] HandleAsync(hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSessionRequest, System.Threading.CancellationToken) on controller hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSession (hui_management_backend.Web).
2023-07-16 18:12:13.997 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ownerId_0='?' (DbType = Int32), @__fundId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[FundPrice], [t].[IsArchived], [t].[Name], [t].[OpenDate], [t].[OpenDateText], [t].[OwnerId], [t].[ServiceCost], [t].[Id0], [t].[AdditionalInfo], [t].[Address], [t].[BankName], [t].[BankNumber], [t].[Email], [t].[Name0], [t].[Password], [t].[PhoneNumber], [t].[Role], [t0].[Id], [t0].[FundId], [t0].[NickName], [t0].[UserId], [t0].[Id0], [t0].[AdditionalInfo], [t0].[Address], [t0].[BankName], [t0].[BankNumber], [t0].[Email], [t0].[Name], [t0].[Password], [t0].[PhoneNumber], [t0].[Role], [t1].[Id], [t1].[FundId], [t1].[sessionNumber], [t1].[takenDate], [t1].[Id0], [t1].[fundAmount], [t1].[fundMemberId], [t1].[predictedPrice], [t1].[remainPrice], [t1].[serviceCost], [t1].[sessionId], [t1].[Id1], [t1].[FundId0], [t1].[NickName], [t1].[UserId], [t1].[Id2], [t1].[FundSessionId], [t1].[fundMemberId0], [t1].[payCost]
FROM (
    SELECT TOP(1) [f].[Id], [f].[FundPrice], [f].[IsArchived], [f].[Name], [f].[OpenDate], [f].[OpenDateText], [f].[OwnerId], [f].[ServiceCost], [u].[Id] AS [Id0], [u].[AdditionalInfo], [u].[Address], [u].[BankName], [u].[BankNumber], [u].[Email], [u].[Name] AS [Name0], [u].[Password], [u].[PhoneNumber], [u].[Role]
    FROM [Funds] AS [f]
    INNER JOIN [User] AS [u] ON [f].[OwnerId] = [u].[Id]
    WHERE [u].[Id] = @__ownerId_0 AND [f].[Id] = @__fundId_1
) AS [t]
LEFT JOIN (
    SELECT [f0].[Id], [f0].[FundId], [f0].[NickName], [f0].[UserId], [u0].[Id] AS [Id0], [u0].[AdditionalInfo], [u0].[Address], [u0].[BankName], [u0].[BankNumber], [u0].[Email], [u0].[Name], [u0].[Password], [u0].[PhoneNumber], [u0].[Role]
    FROM [FundMember] AS [f0]
    INNER JOIN [User] AS [u0] ON [f0].[UserId] = [u0].[Id]
) AS [t0] ON [t].[Id] = [t0].[FundId]
LEFT JOIN (
    SELECT [f1].[Id], [f1].[FundId], [f1].[sessionNumber], [f1].[takenDate], [t2].[Id] AS [Id0], [t2].[fundAmount], [t2].[fundMemberId], [t2].[predictedPrice], [t2].[remainPrice], [t2].[serviceCost], [t2].[sessionId], [f2].[Id] AS [Id1], [f2].[FundId] AS [FundId0], [f2].[NickName], [f2].[UserId], [n].[Id] AS [Id2], [n].[FundSessionId], [n].[fundMemberId] AS [fundMemberId0], [n].[payCost]
    FROM [FundSession] AS [f1]
    LEFT JOIN [TakenSessionDetail] AS [t2] ON [f1].[Id] = [t2].[sessionId]
    LEFT JOIN [FundMember] AS [f2] ON [t2].[fundMemberId] = [f2].[Id]
    LEFT JOIN [NormalSessionDetail] AS [n] ON [f1].[Id] = [n].[FundSessionId]
) AS [t1] ON [t].[Id] = [t1].[FundId]
ORDER BY [t].[Id], [t].[Id0], [t0].[Id], [t0].[Id0], [t1].[Id], [t1].[Id0], [t1].[Id1]
2023-07-16 18:12:14.122 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = DateTimeOffset), @p10='?' (DbType = Int32), @p3='?' (DbType = Double), @p4='?' (DbType = Boolean), @p5='?' (Size = 4000), @p6='?' (DbType = DateTimeOffset), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [FundSession] ([FundId], [sessionNumber], [takenDate])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2);
UPDATE [Funds] SET [FundPrice] = @p3, [IsArchived] = @p4, [Name] = @p5, [OpenDate] = @p6, [OpenDateText] = @p7, [OwnerId] = @p8, [ServiceCost] = @p9
OUTPUT 1
WHERE [Id] = @p10;
2023-07-16 18:12:14.141 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@p11='?' (DbType = Int32), @p12='?' (DbType = Int32), @p13='?' (DbType = Double), @p14='?' (DbType = Double), @p15='?' (DbType = Int32), @p16='?' (DbType = Double), @p17='?' (DbType = Double), @p18='?' (DbType = Double), @p19='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [NormalSessionDetail] ([FundSessionId], [fundMemberId], [payCost])
OUTPUT INSERTED.[Id]
VALUES (@p11, @p12, @p13);
INSERT INTO [TakenSessionDetail] ([fundAmount], [fundMemberId], [predictedPrice], [remainPrice], [serviceCost], [sessionId])
OUTPUT INSERTED.[Id]
VALUES (@p14, @p15, @p16, @p17, @p18, @p19);
2023-07-16 18:12:14.179 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__dateTimeOffset_Date_0='?' (DbType = DateTime2), @__ownerId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[CreateAt], [p].[OwnerId], [p].[Status]
FROM [Payment] AS [p]
WHERE CONVERT(date, [p].[CreateAt]) = @__dateTimeOffset_Date_0 AND [p].[OwnerId] = @__ownerId_1
2023-07-16 18:12:16.253 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__dateTimeOffset_Date_0='?' (DbType = DateTime2), @__ownerId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[CreateAt], [p].[OwnerId], [p].[Status]
FROM [Payment] AS [p]
WHERE CONVERT(date, [p].[CreateAt]) = @__dateTimeOffset_Date_0 AND [p].[OwnerId] = @__ownerId_1
2023-07-16 18:12:16.281 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = DateTimeOffset), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Payment] ([CreateAt], [OwnerId], [Status])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2);
2023-07-16 18:12:16.286 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@p3='?' (DbType = Double), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32), @p6='?' (DbType = Int32), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [FundBill] ([Amount], [PaymentId], [Status], [Type], [fromFundId])
OUTPUT INSERTED.[Id]
VALUES (@p3, @p4, @p5, @p6, @p7);
2023-07-16 18:12:18.221 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2023-07-16 18:12:18.223 +07:00 [INF] Executed action hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSession.HandleAsync (hui_management_backend.Web) in 4240.376ms
2023-07-16 18:12:18.223 +07:00 [INF] Executed endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSession.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:12:18.224 +07:00 [INF] Request finished HTTP/1.1 POST http://localhost:57678/funds/1/sessions/add application/json 36 - 200 - application/json;+charset=utf-8 4245.3574ms
2023-07-16 18:12:18.248 +07:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:57678/funds/1 - -
2023-07-16 18:12:18.249 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:12:18.249 +07:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:57678/funds/1 - - - 204 - - 0.5985ms
2023-07-16 18:12:18.250 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:57678/funds/1 application/json -
2023-07-16 18:12:18.250 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:12:18.250 +07:00 [INF] Executing endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:12:18.251 +07:00 [INF] Route matched with {action = "Handle", controller = "FundGet"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[hui_management_backend.Web.Endpoints.FundEndpoints.FundGetResponse]] HandleAsync(hui_management_backend.Web.Endpoints.FundEndpoints.FundGetRequest, System.Threading.CancellationToken) on controller hui_management_backend.Web.Endpoints.FundEndpoints.FundGet (hui_management_backend.Web).
2023-07-16 18:12:18.260 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__ownerId_0='?' (DbType = Int32), @__fundId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[FundPrice], [t].[IsArchived], [t].[Name], [t].[OpenDate], [t].[OpenDateText], [t].[OwnerId], [t].[ServiceCost], [t].[Id0], [t].[AdditionalInfo], [t].[Address], [t].[BankName], [t].[BankNumber], [t].[Email], [t].[Name0], [t].[Password], [t].[PhoneNumber], [t].[Role], [t0].[Id], [t0].[FundId], [t0].[NickName], [t0].[UserId], [t0].[Id0], [t0].[AdditionalInfo], [t0].[Address], [t0].[BankName], [t0].[BankNumber], [t0].[Email], [t0].[Name], [t0].[Password], [t0].[PhoneNumber], [t0].[Role], [t1].[Id], [t1].[FundId], [t1].[sessionNumber], [t1].[takenDate], [t1].[Id0], [t1].[fundAmount], [t1].[fundMemberId], [t1].[predictedPrice], [t1].[remainPrice], [t1].[serviceCost], [t1].[sessionId], [t1].[Id1], [t1].[FundId0], [t1].[NickName], [t1].[UserId], [t1].[Id2], [t1].[FundSessionId], [t1].[fundMemberId0], [t1].[payCost]
FROM (
    SELECT TOP(1) [f].[Id], [f].[FundPrice], [f].[IsArchived], [f].[Name], [f].[OpenDate], [f].[OpenDateText], [f].[OwnerId], [f].[ServiceCost], [u].[Id] AS [Id0], [u].[AdditionalInfo], [u].[Address], [u].[BankName], [u].[BankNumber], [u].[Email], [u].[Name] AS [Name0], [u].[Password], [u].[PhoneNumber], [u].[Role]
    FROM [Funds] AS [f]
    INNER JOIN [User] AS [u] ON [f].[OwnerId] = [u].[Id]
    WHERE [u].[Id] = @__ownerId_0 AND [f].[Id] = @__fundId_1
) AS [t]
LEFT JOIN (
    SELECT [f0].[Id], [f0].[FundId], [f0].[NickName], [f0].[UserId], [u0].[Id] AS [Id0], [u0].[AdditionalInfo], [u0].[Address], [u0].[BankName], [u0].[BankNumber], [u0].[Email], [u0].[Name], [u0].[Password], [u0].[PhoneNumber], [u0].[Role]
    FROM [FundMember] AS [f0]
    INNER JOIN [User] AS [u0] ON [f0].[UserId] = [u0].[Id]
) AS [t0] ON [t].[Id] = [t0].[FundId]
LEFT JOIN (
    SELECT [f1].[Id], [f1].[FundId], [f1].[sessionNumber], [f1].[takenDate], [t2].[Id] AS [Id0], [t2].[fundAmount], [t2].[fundMemberId], [t2].[predictedPrice], [t2].[remainPrice], [t2].[serviceCost], [t2].[sessionId], [f2].[Id] AS [Id1], [f2].[FundId] AS [FundId0], [f2].[NickName], [f2].[UserId], [n].[Id] AS [Id2], [n].[FundSessionId], [n].[fundMemberId] AS [fundMemberId0], [n].[payCost]
    FROM [FundSession] AS [f1]
    LEFT JOIN [TakenSessionDetail] AS [t2] ON [f1].[Id] = [t2].[sessionId]
    LEFT JOIN [FundMember] AS [f2] ON [t2].[fundMemberId] = [f2].[Id]
    LEFT JOIN [NormalSessionDetail] AS [n] ON [f1].[Id] = [n].[FundSessionId]
) AS [t1] ON [t].[Id] = [t1].[FundId]
ORDER BY [t].[Id], [t].[Id0], [t0].[Id], [t0].[Id0], [t1].[Id], [t1].[Id0], [t1].[Id1]
2023-07-16 18:12:18.278 +07:00 [INF] Executing OkObjectResult, writing value of type 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetResponse'.
2023-07-16 18:12:18.281 +07:00 [INF] Executed action hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web) in 29.954ms
2023-07-16 18:12:18.281 +07:00 [INF] Executed endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:12:18.281 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:57678/funds/1 application/json - - 200 - application/json;+charset=utf-8 31.7193ms
2023-07-16 18:23:46.932 +07:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-16 18:23:46.977 +07:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-07-16 18:23:47.105 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Funds] AS [f]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-16 18:23:47.117 +07:00 [INF] User profile is available. Using 'C:\Users\khang\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-07-16 18:23:47.190 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2023-07-16 18:23:47.191 +07:00 [INF] Hosting environment: Development
2023-07-16 18:23:47.191 +07:00 [INF] Content root path: C:\Users\khang\Desktop\Hui_Management\hui_management_backend\src\hui_management_backend.Web
2023-07-16 18:23:47.200 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:57678/ - -
2023-07-16 18:23:47.271 +07:00 [WRN] Failed to determine the https port for redirect.
2023-07-16 18:23:47.301 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:57678/ - - - 404 - - 101.6862ms
2023-07-16 18:23:52.428 +07:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:57678/funds - -
2023-07-16 18:23:52.432 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:23:52.435 +07:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:57678/funds - - - 204 - - 7.7240ms
2023-07-16 18:23:52.436 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:57678/funds application/json -
2023-07-16 18:23:52.537 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:23:52.539 +07:00 [INF] Executing endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAll.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:23:52.552 +07:00 [INF] Route matched with {action = "Handle", controller = "FundGetAll"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAllResponse]] HandleAsync(System.Threading.CancellationToken) on controller hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAll (hui_management_backend.Web).
2023-07-16 18:23:52.778 +07:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2023-07-16 18:23:52.825 +07:00 [INF] Executed DbCommand (24ms) [Parameters=[@__ownerId_0='?' (DbType = Int32), @__isArchived_1='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [f].[Id], [f].[FundPrice], [f].[IsArchived], [f].[Name], [f].[OpenDate], [f].[OpenDateText], [f].[OwnerId], [f].[ServiceCost], [u].[Id], [u].[AdditionalInfo], [u].[Address], [u].[BankName], [u].[BankNumber], [u].[Email], [u].[Name], [u].[Password], [u].[PhoneNumber], [u].[Role], [f0].[Id], [f0].[FundId], [f0].[NickName], [f0].[UserId], [f1].[Id], [f1].[FundId], [f1].[sessionNumber], [f1].[takenDate]
FROM [Funds] AS [f]
INNER JOIN [User] AS [u] ON [f].[OwnerId] = [u].[Id]
LEFT JOIN [FundMember] AS [f0] ON [f].[Id] = [f0].[FundId]
LEFT JOIN [FundSession] AS [f1] ON [f].[Id] = [f1].[FundId]
WHERE [u].[Id] = @__ownerId_0 AND [f].[IsArchived] = @__isArchived_1
ORDER BY [f].[Id], [u].[Id], [f0].[Id]
2023-07-16 18:23:52.926 +07:00 [INF] Executing OkObjectResult, writing value of type 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAllResponse'.
2023-07-16 18:23:52.953 +07:00 [INF] Executed action hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAll.HandleAsync (hui_management_backend.Web) in 399.1718ms
2023-07-16 18:23:52.953 +07:00 [INF] Executed endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAll.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:23:52.957 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:57678/funds application/json - - 200 - application/json;+charset=utf-8 520.4631ms
2023-07-16 18:23:53.859 +07:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:57678/funds/1 - -
2023-07-16 18:23:53.860 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:23:53.860 +07:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:57678/funds/1 - - - 204 - - 1.4852ms
2023-07-16 18:23:53.864 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:57678/funds/1 application/json -
2023-07-16 18:23:53.866 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:23:53.867 +07:00 [INF] Executing endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:23:53.871 +07:00 [INF] Route matched with {action = "Handle", controller = "FundGet"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[hui_management_backend.Web.Endpoints.FundEndpoints.FundGetResponse]] HandleAsync(hui_management_backend.Web.Endpoints.FundEndpoints.FundGetRequest, System.Threading.CancellationToken) on controller hui_management_backend.Web.Endpoints.FundEndpoints.FundGet (hui_management_backend.Web).
2023-07-16 18:23:53.915 +07:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2023-07-16 18:23:53.923 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ownerId_0='?' (DbType = Int32), @__fundId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[FundPrice], [t].[IsArchived], [t].[Name], [t].[OpenDate], [t].[OpenDateText], [t].[OwnerId], [t].[ServiceCost], [t].[Id0], [t].[AdditionalInfo], [t].[Address], [t].[BankName], [t].[BankNumber], [t].[Email], [t].[Name0], [t].[Password], [t].[PhoneNumber], [t].[Role], [t0].[Id], [t0].[FundId], [t0].[NickName], [t0].[UserId], [t0].[Id0], [t0].[AdditionalInfo], [t0].[Address], [t0].[BankName], [t0].[BankNumber], [t0].[Email], [t0].[Name], [t0].[Password], [t0].[PhoneNumber], [t0].[Role], [t1].[Id], [t1].[FundId], [t1].[sessionNumber], [t1].[takenDate], [t1].[Id0], [t1].[fundAmount], [t1].[fundMemberId], [t1].[predictedPrice], [t1].[remainPrice], [t1].[serviceCost], [t1].[sessionId], [t1].[Id1], [t1].[FundId0], [t1].[NickName], [t1].[UserId], [t1].[Id2], [t1].[FundSessionId], [t1].[fundMemberId0], [t1].[payCost]
FROM (
    SELECT TOP(1) [f].[Id], [f].[FundPrice], [f].[IsArchived], [f].[Name], [f].[OpenDate], [f].[OpenDateText], [f].[OwnerId], [f].[ServiceCost], [u].[Id] AS [Id0], [u].[AdditionalInfo], [u].[Address], [u].[BankName], [u].[BankNumber], [u].[Email], [u].[Name] AS [Name0], [u].[Password], [u].[PhoneNumber], [u].[Role]
    FROM [Funds] AS [f]
    INNER JOIN [User] AS [u] ON [f].[OwnerId] = [u].[Id]
    WHERE [u].[Id] = @__ownerId_0 AND [f].[Id] = @__fundId_1
) AS [t]
LEFT JOIN (
    SELECT [f0].[Id], [f0].[FundId], [f0].[NickName], [f0].[UserId], [u0].[Id] AS [Id0], [u0].[AdditionalInfo], [u0].[Address], [u0].[BankName], [u0].[BankNumber], [u0].[Email], [u0].[Name], [u0].[Password], [u0].[PhoneNumber], [u0].[Role]
    FROM [FundMember] AS [f0]
    INNER JOIN [User] AS [u0] ON [f0].[UserId] = [u0].[Id]
) AS [t0] ON [t].[Id] = [t0].[FundId]
LEFT JOIN (
    SELECT [f1].[Id], [f1].[FundId], [f1].[sessionNumber], [f1].[takenDate], [t2].[Id] AS [Id0], [t2].[fundAmount], [t2].[fundMemberId], [t2].[predictedPrice], [t2].[remainPrice], [t2].[serviceCost], [t2].[sessionId], [f2].[Id] AS [Id1], [f2].[FundId] AS [FundId0], [f2].[NickName], [f2].[UserId], [n].[Id] AS [Id2], [n].[FundSessionId], [n].[fundMemberId] AS [fundMemberId0], [n].[payCost]
    FROM [FundSession] AS [f1]
    LEFT JOIN [TakenSessionDetail] AS [t2] ON [f1].[Id] = [t2].[sessionId]
    LEFT JOIN [FundMember] AS [f2] ON [t2].[fundMemberId] = [f2].[Id]
    LEFT JOIN [NormalSessionDetail] AS [n] ON [f1].[Id] = [n].[FundSessionId]
) AS [t1] ON [t].[Id] = [t1].[FundId]
ORDER BY [t].[Id], [t].[Id0], [t0].[Id], [t0].[Id0], [t1].[Id], [t1].[Id0], [t1].[Id1]
2023-07-16 18:23:53.947 +07:00 [INF] Executing OkObjectResult, writing value of type 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetResponse'.
2023-07-16 18:23:53.957 +07:00 [INF] Executed action hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web) in 85.4129ms
2023-07-16 18:23:53.957 +07:00 [INF] Executed endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:23:53.957 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:57678/funds/1 application/json - - 200 - application/json;+charset=utf-8 92.9749ms
2023-07-16 18:24:01.102 +07:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:57678/funds/1/sessions/add - -
2023-07-16 18:24:01.103 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:24:01.103 +07:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:57678/funds/1/sessions/add - - - 204 - - 1.7388ms
2023-07-16 18:24:01.107 +07:00 [INF] Request starting HTTP/1.1 POST http://localhost:57678/funds/1/sessions/add application/json 36
2023-07-16 18:24:01.109 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:24:01.109 +07:00 [INF] Executing endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSession.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:24:01.112 +07:00 [INF] Route matched with {action = "Handle", controller = "FundAddSession"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] HandleAsync(hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSessionRequest, System.Threading.CancellationToken) on controller hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSession (hui_management_backend.Web).
2023-07-16 18:24:01.126 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__ownerId_0='?' (DbType = Int32), @__fundId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[FundPrice], [t].[IsArchived], [t].[Name], [t].[OpenDate], [t].[OpenDateText], [t].[OwnerId], [t].[ServiceCost], [t].[Id0], [t].[AdditionalInfo], [t].[Address], [t].[BankName], [t].[BankNumber], [t].[Email], [t].[Name0], [t].[Password], [t].[PhoneNumber], [t].[Role], [t0].[Id], [t0].[FundId], [t0].[NickName], [t0].[UserId], [t0].[Id0], [t0].[AdditionalInfo], [t0].[Address], [t0].[BankName], [t0].[BankNumber], [t0].[Email], [t0].[Name], [t0].[Password], [t0].[PhoneNumber], [t0].[Role], [t1].[Id], [t1].[FundId], [t1].[sessionNumber], [t1].[takenDate], [t1].[Id0], [t1].[fundAmount], [t1].[fundMemberId], [t1].[predictedPrice], [t1].[remainPrice], [t1].[serviceCost], [t1].[sessionId], [t1].[Id1], [t1].[FundId0], [t1].[NickName], [t1].[UserId], [t1].[Id2], [t1].[FundSessionId], [t1].[fundMemberId0], [t1].[payCost]
FROM (
    SELECT TOP(1) [f].[Id], [f].[FundPrice], [f].[IsArchived], [f].[Name], [f].[OpenDate], [f].[OpenDateText], [f].[OwnerId], [f].[ServiceCost], [u].[Id] AS [Id0], [u].[AdditionalInfo], [u].[Address], [u].[BankName], [u].[BankNumber], [u].[Email], [u].[Name] AS [Name0], [u].[Password], [u].[PhoneNumber], [u].[Role]
    FROM [Funds] AS [f]
    INNER JOIN [User] AS [u] ON [f].[OwnerId] = [u].[Id]
    WHERE [u].[Id] = @__ownerId_0 AND [f].[Id] = @__fundId_1
) AS [t]
LEFT JOIN (
    SELECT [f0].[Id], [f0].[FundId], [f0].[NickName], [f0].[UserId], [u0].[Id] AS [Id0], [u0].[AdditionalInfo], [u0].[Address], [u0].[BankName], [u0].[BankNumber], [u0].[Email], [u0].[Name], [u0].[Password], [u0].[PhoneNumber], [u0].[Role]
    FROM [FundMember] AS [f0]
    INNER JOIN [User] AS [u0] ON [f0].[UserId] = [u0].[Id]
) AS [t0] ON [t].[Id] = [t0].[FundId]
LEFT JOIN (
    SELECT [f1].[Id], [f1].[FundId], [f1].[sessionNumber], [f1].[takenDate], [t2].[Id] AS [Id0], [t2].[fundAmount], [t2].[fundMemberId], [t2].[predictedPrice], [t2].[remainPrice], [t2].[serviceCost], [t2].[sessionId], [f2].[Id] AS [Id1], [f2].[FundId] AS [FundId0], [f2].[NickName], [f2].[UserId], [n].[Id] AS [Id2], [n].[FundSessionId], [n].[fundMemberId] AS [fundMemberId0], [n].[payCost]
    FROM [FundSession] AS [f1]
    LEFT JOIN [TakenSessionDetail] AS [t2] ON [f1].[Id] = [t2].[sessionId]
    LEFT JOIN [FundMember] AS [f2] ON [t2].[fundMemberId] = [f2].[Id]
    LEFT JOIN [NormalSessionDetail] AS [n] ON [f1].[Id] = [n].[FundSessionId]
) AS [t1] ON [t].[Id] = [t1].[FundId]
ORDER BY [t].[Id], [t].[Id0], [t0].[Id], [t0].[Id0], [t1].[Id], [t1].[Id0], [t1].[Id1]
2023-07-16 18:24:01.251 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = DateTimeOffset), @p10='?' (DbType = Int32), @p3='?' (DbType = Double), @p4='?' (DbType = Boolean), @p5='?' (Size = 4000), @p6='?' (DbType = DateTimeOffset), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [FundSession] ([FundId], [sessionNumber], [takenDate])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2);
UPDATE [Funds] SET [FundPrice] = @p3, [IsArchived] = @p4, [Name] = @p5, [OpenDate] = @p6, [OpenDateText] = @p7, [OwnerId] = @p8, [ServiceCost] = @p9
OUTPUT 1
WHERE [Id] = @p10;
2023-07-16 18:24:01.269 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@p11='?' (DbType = Int32), @p12='?' (DbType = Int32), @p13='?' (DbType = Double), @p14='?' (DbType = Double), @p15='?' (DbType = Int32), @p16='?' (DbType = Double), @p17='?' (DbType = Double), @p18='?' (DbType = Double), @p19='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [NormalSessionDetail] ([FundSessionId], [fundMemberId], [payCost])
OUTPUT INSERTED.[Id]
VALUES (@p11, @p12, @p13);
INSERT INTO [TakenSessionDetail] ([fundAmount], [fundMemberId], [predictedPrice], [remainPrice], [serviceCost], [sessionId])
OUTPUT INSERTED.[Id]
VALUES (@p14, @p15, @p16, @p17, @p18, @p19);
2023-07-16 18:24:01.306 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__dateTimeOffset_Date_0='?' (DbType = DateTime2), @__ownerId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[CreateAt], [p].[OwnerId], [p].[Status]
FROM [Payment] AS [p]
WHERE CONVERT(date, [p].[CreateAt]) = @__dateTimeOffset_Date_0 AND [p].[OwnerId] = @__ownerId_1
2023-07-16 18:24:01.324 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = DateTimeOffset), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Payment] ([CreateAt], [OwnerId], [Status])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2);
2023-07-16 18:24:03.312 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__dateTimeOffset_Date_0='?' (DbType = DateTime2), @__ownerId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[CreateAt], [p].[OwnerId], [p].[Status]
FROM [Payment] AS [p]
WHERE CONVERT(date, [p].[CreateAt]) = @__dateTimeOffset_Date_0 AND [p].[OwnerId] = @__ownerId_1
2023-07-16 18:24:03.326 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Double), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTimeOffset), @p6='?' (DbType = Int32), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [FundBill] ([Amount], [PaymentId], [Status], [Type], [fromFundId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4);
INSERT INTO [Payment] ([CreateAt], [OwnerId], [Status])
OUTPUT INSERTED.[Id]
VALUES (@p5, @p6, @p7);
2023-07-16 18:24:03.338 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Double), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p8='?' (DbType = Int32), @p5='?' (DbType = DateTimeOffset), @p6='?' (DbType = Int32), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [FundBill] ([Amount], [PaymentId], [Status], [Type], [fromFundId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4);
UPDATE [Payment] SET [CreateAt] = @p5, [OwnerId] = @p6, [Status] = @p7
OUTPUT 1
WHERE [Id] = @p8;
2023-07-16 18:24:16.483 +07:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-16 18:24:16.525 +07:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-07-16 18:24:16.656 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Funds] AS [f]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-16 18:24:16.668 +07:00 [INF] User profile is available. Using 'C:\Users\khang\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-07-16 18:24:16.731 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2023-07-16 18:24:16.732 +07:00 [INF] Hosting environment: Development
2023-07-16 18:24:16.732 +07:00 [INF] Content root path: C:\Users\khang\Desktop\Hui_Management\hui_management_backend\src\hui_management_backend.Web
2023-07-16 18:24:16.741 +07:00 [INF] Request starting HTTP/1.1 POST http://localhost:57678/funds/1/sessions/add application/json 36
2023-07-16 18:24:16.741 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:57678/ - -
2023-07-16 18:24:16.805 +07:00 [WRN] Failed to determine the https port for redirect.
2023-07-16 18:24:16.852 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:57678/ - - - 404 - - 111.6111ms
2023-07-16 18:24:16.905 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:24:16.907 +07:00 [INF] Executing endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSession.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:24:16.923 +07:00 [INF] Route matched with {action = "Handle", controller = "FundAddSession"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] HandleAsync(hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSessionRequest, System.Threading.CancellationToken) on controller hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSession (hui_management_backend.Web).
2023-07-16 18:24:17.118 +07:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2023-07-16 18:24:17.166 +07:00 [INF] Executed DbCommand (26ms) [Parameters=[@__ownerId_0='?' (DbType = Int32), @__fundId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[FundPrice], [t].[IsArchived], [t].[Name], [t].[OpenDate], [t].[OpenDateText], [t].[OwnerId], [t].[ServiceCost], [t].[Id0], [t].[AdditionalInfo], [t].[Address], [t].[BankName], [t].[BankNumber], [t].[Email], [t].[Name0], [t].[Password], [t].[PhoneNumber], [t].[Role], [t0].[Id], [t0].[FundId], [t0].[NickName], [t0].[UserId], [t0].[Id0], [t0].[AdditionalInfo], [t0].[Address], [t0].[BankName], [t0].[BankNumber], [t0].[Email], [t0].[Name], [t0].[Password], [t0].[PhoneNumber], [t0].[Role], [t1].[Id], [t1].[FundId], [t1].[sessionNumber], [t1].[takenDate], [t1].[Id0], [t1].[fundAmount], [t1].[fundMemberId], [t1].[predictedPrice], [t1].[remainPrice], [t1].[serviceCost], [t1].[sessionId], [t1].[Id1], [t1].[FundId0], [t1].[NickName], [t1].[UserId], [t1].[Id2], [t1].[FundSessionId], [t1].[fundMemberId0], [t1].[payCost]
FROM (
    SELECT TOP(1) [f].[Id], [f].[FundPrice], [f].[IsArchived], [f].[Name], [f].[OpenDate], [f].[OpenDateText], [f].[OwnerId], [f].[ServiceCost], [u].[Id] AS [Id0], [u].[AdditionalInfo], [u].[Address], [u].[BankName], [u].[BankNumber], [u].[Email], [u].[Name] AS [Name0], [u].[Password], [u].[PhoneNumber], [u].[Role]
    FROM [Funds] AS [f]
    INNER JOIN [User] AS [u] ON [f].[OwnerId] = [u].[Id]
    WHERE [u].[Id] = @__ownerId_0 AND [f].[Id] = @__fundId_1
) AS [t]
LEFT JOIN (
    SELECT [f0].[Id], [f0].[FundId], [f0].[NickName], [f0].[UserId], [u0].[Id] AS [Id0], [u0].[AdditionalInfo], [u0].[Address], [u0].[BankName], [u0].[BankNumber], [u0].[Email], [u0].[Name], [u0].[Password], [u0].[PhoneNumber], [u0].[Role]
    FROM [FundMember] AS [f0]
    INNER JOIN [User] AS [u0] ON [f0].[UserId] = [u0].[Id]
) AS [t0] ON [t].[Id] = [t0].[FundId]
LEFT JOIN (
    SELECT [f1].[Id], [f1].[FundId], [f1].[sessionNumber], [f1].[takenDate], [t2].[Id] AS [Id0], [t2].[fundAmount], [t2].[fundMemberId], [t2].[predictedPrice], [t2].[remainPrice], [t2].[serviceCost], [t2].[sessionId], [f2].[Id] AS [Id1], [f2].[FundId] AS [FundId0], [f2].[NickName], [f2].[UserId], [n].[Id] AS [Id2], [n].[FundSessionId], [n].[fundMemberId] AS [fundMemberId0], [n].[payCost]
    FROM [FundSession] AS [f1]
    LEFT JOIN [TakenSessionDetail] AS [t2] ON [f1].[Id] = [t2].[sessionId]
    LEFT JOIN [FundMember] AS [f2] ON [t2].[fundMemberId] = [f2].[Id]
    LEFT JOIN [NormalSessionDetail] AS [n] ON [f1].[Id] = [n].[FundSessionId]
) AS [t1] ON [t].[Id] = [t1].[FundId]
ORDER BY [t].[Id], [t].[Id0], [t0].[Id], [t0].[Id0], [t1].[Id], [t1].[Id0], [t1].[Id1]
2023-07-16 18:24:17.288 +07:00 [INF] Executing BadRequestObjectResult, writing value of type 'System.String[]'.
2023-07-16 18:24:17.296 +07:00 [INF] Executed action hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSession.HandleAsync (hui_management_backend.Web) in 371.0789ms
2023-07-16 18:24:17.297 +07:00 [INF] Executed endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSession.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:24:17.300 +07:00 [INF] Request finished HTTP/1.1 POST http://localhost:57678/funds/1/sessions/add application/json 36 - 400 - application/json;+charset=utf-8 560.3467ms
2023-07-16 18:24:46.975 +07:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-16 18:24:47.014 +07:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-07-16 18:24:47.141 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Funds] AS [f]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-16 18:24:47.155 +07:00 [INF] User profile is available. Using 'C:\Users\khang\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-07-16 18:24:47.225 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2023-07-16 18:24:47.225 +07:00 [INF] Hosting environment: Development
2023-07-16 18:24:47.225 +07:00 [INF] Content root path: C:\Users\khang\Desktop\Hui_Management\hui_management_backend\src\hui_management_backend.Web
2023-07-16 18:24:47.236 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:57678/ - -
2023-07-16 18:24:47.317 +07:00 [WRN] Failed to determine the https port for redirect.
2023-07-16 18:24:47.343 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:57678/ - - - 404 - - 107.8009ms
2023-07-16 18:24:57.384 +07:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:57678/funds/1/sessions/add - -
2023-07-16 18:24:57.388 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:24:57.391 +07:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:57678/funds/1/sessions/add - - - 204 - - 6.4387ms
2023-07-16 18:24:57.395 +07:00 [INF] Request starting HTTP/1.1 POST http://localhost:57678/funds/1/sessions/add application/json 36
2023-07-16 18:24:57.503 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:24:57.504 +07:00 [INF] Executing endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSession.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:24:57.521 +07:00 [INF] Route matched with {action = "Handle", controller = "FundAddSession"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] HandleAsync(hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSessionRequest, System.Threading.CancellationToken) on controller hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSession (hui_management_backend.Web).
2023-07-16 18:24:57.715 +07:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2023-07-16 18:24:57.761 +07:00 [INF] Executed DbCommand (24ms) [Parameters=[@__ownerId_0='?' (DbType = Int32), @__fundId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[FundPrice], [t].[IsArchived], [t].[Name], [t].[OpenDate], [t].[OpenDateText], [t].[OwnerId], [t].[ServiceCost], [t].[Id0], [t].[AdditionalInfo], [t].[Address], [t].[BankName], [t].[BankNumber], [t].[Email], [t].[Name0], [t].[Password], [t].[PhoneNumber], [t].[Role], [t0].[Id], [t0].[FundId], [t0].[NickName], [t0].[UserId], [t0].[Id0], [t0].[AdditionalInfo], [t0].[Address], [t0].[BankName], [t0].[BankNumber], [t0].[Email], [t0].[Name], [t0].[Password], [t0].[PhoneNumber], [t0].[Role], [t1].[Id], [t1].[FundId], [t1].[sessionNumber], [t1].[takenDate], [t1].[Id0], [t1].[fundAmount], [t1].[fundMemberId], [t1].[predictedPrice], [t1].[remainPrice], [t1].[serviceCost], [t1].[sessionId], [t1].[Id1], [t1].[FundId0], [t1].[NickName], [t1].[UserId], [t1].[Id2], [t1].[FundSessionId], [t1].[fundMemberId0], [t1].[payCost]
FROM (
    SELECT TOP(1) [f].[Id], [f].[FundPrice], [f].[IsArchived], [f].[Name], [f].[OpenDate], [f].[OpenDateText], [f].[OwnerId], [f].[ServiceCost], [u].[Id] AS [Id0], [u].[AdditionalInfo], [u].[Address], [u].[BankName], [u].[BankNumber], [u].[Email], [u].[Name] AS [Name0], [u].[Password], [u].[PhoneNumber], [u].[Role]
    FROM [Funds] AS [f]
    INNER JOIN [User] AS [u] ON [f].[OwnerId] = [u].[Id]
    WHERE [u].[Id] = @__ownerId_0 AND [f].[Id] = @__fundId_1
) AS [t]
LEFT JOIN (
    SELECT [f0].[Id], [f0].[FundId], [f0].[NickName], [f0].[UserId], [u0].[Id] AS [Id0], [u0].[AdditionalInfo], [u0].[Address], [u0].[BankName], [u0].[BankNumber], [u0].[Email], [u0].[Name], [u0].[Password], [u0].[PhoneNumber], [u0].[Role]
    FROM [FundMember] AS [f0]
    INNER JOIN [User] AS [u0] ON [f0].[UserId] = [u0].[Id]
) AS [t0] ON [t].[Id] = [t0].[FundId]
LEFT JOIN (
    SELECT [f1].[Id], [f1].[FundId], [f1].[sessionNumber], [f1].[takenDate], [t2].[Id] AS [Id0], [t2].[fundAmount], [t2].[fundMemberId], [t2].[predictedPrice], [t2].[remainPrice], [t2].[serviceCost], [t2].[sessionId], [f2].[Id] AS [Id1], [f2].[FundId] AS [FundId0], [f2].[NickName], [f2].[UserId], [n].[Id] AS [Id2], [n].[FundSessionId], [n].[fundMemberId] AS [fundMemberId0], [n].[payCost]
    FROM [FundSession] AS [f1]
    LEFT JOIN [TakenSessionDetail] AS [t2] ON [f1].[Id] = [t2].[sessionId]
    LEFT JOIN [FundMember] AS [f2] ON [t2].[fundMemberId] = [f2].[Id]
    LEFT JOIN [NormalSessionDetail] AS [n] ON [f1].[Id] = [n].[FundSessionId]
) AS [t1] ON [t].[Id] = [t1].[FundId]
ORDER BY [t].[Id], [t].[Id0], [t0].[Id], [t0].[Id0], [t1].[Id], [t1].[Id0], [t1].[Id1]
2023-07-16 18:24:57.987 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = DateTimeOffset), @p10='?' (DbType = Int32), @p3='?' (DbType = Double), @p4='?' (DbType = Boolean), @p5='?' (Size = 4000), @p6='?' (DbType = DateTimeOffset), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [FundSession] ([FundId], [sessionNumber], [takenDate])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2);
UPDATE [Funds] SET [FundPrice] = @p3, [IsArchived] = @p4, [Name] = @p5, [OpenDate] = @p6, [OpenDateText] = @p7, [OwnerId] = @p8, [ServiceCost] = @p9
OUTPUT 1
WHERE [Id] = @p10;
2023-07-16 18:24:58.004 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@p11='?' (DbType = Int32), @p12='?' (DbType = Int32), @p13='?' (DbType = Double), @p14='?' (DbType = Double), @p15='?' (DbType = Int32), @p16='?' (DbType = Double), @p17='?' (DbType = Double), @p18='?' (DbType = Double), @p19='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [NormalSessionDetail] ([FundSessionId], [fundMemberId], [payCost])
OUTPUT INSERTED.[Id]
VALUES (@p11, @p12, @p13);
INSERT INTO [TakenSessionDetail] ([fundAmount], [fundMemberId], [predictedPrice], [remainPrice], [serviceCost], [sessionId])
OUTPUT INSERTED.[Id]
VALUES (@p14, @p15, @p16, @p17, @p18, @p19);
2023-07-16 18:24:58.044 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__dateTimeOffset_Date_0='?' (DbType = DateTime2), @__ownerId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[CreateAt], [p].[OwnerId], [p].[Status]
FROM [Payment] AS [p]
WHERE CONVERT(date, [p].[CreateAt]) = @__dateTimeOffset_Date_0 AND [p].[OwnerId] = @__ownerId_1
2023-07-16 18:24:58.062 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = DateTimeOffset), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Payment] ([CreateAt], [OwnerId], [Status])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2);
2023-07-16 18:24:59.755 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__dateTimeOffset_Date_0='?' (DbType = DateTime2), @__ownerId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[CreateAt], [p].[OwnerId], [p].[Status]
FROM [Payment] AS [p]
WHERE CONVERT(date, [p].[CreateAt]) = @__dateTimeOffset_Date_0 AND [p].[OwnerId] = @__ownerId_1
2023-07-16 18:24:59.769 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Double), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTimeOffset), @p6='?' (DbType = Int32), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [FundBill] ([Amount], [PaymentId], [Status], [Type], [fromFundId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4);
INSERT INTO [Payment] ([CreateAt], [OwnerId], [Status])
OUTPUT INSERTED.[Id]
VALUES (@p5, @p6, @p7);
2023-07-16 18:24:59.780 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Double), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p8='?' (DbType = Int32), @p5='?' (DbType = DateTimeOffset), @p6='?' (DbType = Int32), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [FundBill] ([Amount], [PaymentId], [Status], [Type], [fromFundId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4);
UPDATE [Payment] SET [CreateAt] = @p5, [OwnerId] = @p6, [Status] = @p7
OUTPUT 1
WHERE [Id] = @p8;
2023-07-16 18:24:59.785 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@p3='?' (DbType = Int32), @p0='?' (DbType = DateTimeOffset), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Payment] SET [CreateAt] = @p0, [OwnerId] = @p1, [Status] = @p2
OUTPUT 1
WHERE [Id] = @p3;
2023-07-16 18:25:07.431 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2023-07-16 18:25:07.441 +07:00 [INF] Executed action hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSession.HandleAsync (hui_management_backend.Web) in 9917.1157ms
2023-07-16 18:25:07.441 +07:00 [INF] Executed endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSession.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:25:07.445 +07:00 [INF] Request finished HTTP/1.1 POST http://localhost:57678/funds/1/sessions/add application/json 36 - 200 - application/json;+charset=utf-8 10050.8697ms
2023-07-16 18:25:07.469 +07:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:57678/funds/1 - -
2023-07-16 18:25:07.470 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:25:07.471 +07:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:57678/funds/1 - - - 204 - - 1.3893ms
2023-07-16 18:25:07.474 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:57678/funds/1 application/json -
2023-07-16 18:25:07.475 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:25:07.476 +07:00 [INF] Executing endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:25:07.479 +07:00 [INF] Route matched with {action = "Handle", controller = "FundGet"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[hui_management_backend.Web.Endpoints.FundEndpoints.FundGetResponse]] HandleAsync(hui_management_backend.Web.Endpoints.FundEndpoints.FundGetRequest, System.Threading.CancellationToken) on controller hui_management_backend.Web.Endpoints.FundEndpoints.FundGet (hui_management_backend.Web).
2023-07-16 18:25:07.559 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ownerId_0='?' (DbType = Int32), @__fundId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[FundPrice], [t].[IsArchived], [t].[Name], [t].[OpenDate], [t].[OpenDateText], [t].[OwnerId], [t].[ServiceCost], [t].[Id0], [t].[AdditionalInfo], [t].[Address], [t].[BankName], [t].[BankNumber], [t].[Email], [t].[Name0], [t].[Password], [t].[PhoneNumber], [t].[Role], [t0].[Id], [t0].[FundId], [t0].[NickName], [t0].[UserId], [t0].[Id0], [t0].[AdditionalInfo], [t0].[Address], [t0].[BankName], [t0].[BankNumber], [t0].[Email], [t0].[Name], [t0].[Password], [t0].[PhoneNumber], [t0].[Role], [t1].[Id], [t1].[FundId], [t1].[sessionNumber], [t1].[takenDate], [t1].[Id0], [t1].[fundAmount], [t1].[fundMemberId], [t1].[predictedPrice], [t1].[remainPrice], [t1].[serviceCost], [t1].[sessionId], [t1].[Id1], [t1].[FundId0], [t1].[NickName], [t1].[UserId], [t1].[Id2], [t1].[FundSessionId], [t1].[fundMemberId0], [t1].[payCost]
FROM (
    SELECT TOP(1) [f].[Id], [f].[FundPrice], [f].[IsArchived], [f].[Name], [f].[OpenDate], [f].[OpenDateText], [f].[OwnerId], [f].[ServiceCost], [u].[Id] AS [Id0], [u].[AdditionalInfo], [u].[Address], [u].[BankName], [u].[BankNumber], [u].[Email], [u].[Name] AS [Name0], [u].[Password], [u].[PhoneNumber], [u].[Role]
    FROM [Funds] AS [f]
    INNER JOIN [User] AS [u] ON [f].[OwnerId] = [u].[Id]
    WHERE [u].[Id] = @__ownerId_0 AND [f].[Id] = @__fundId_1
) AS [t]
LEFT JOIN (
    SELECT [f0].[Id], [f0].[FundId], [f0].[NickName], [f0].[UserId], [u0].[Id] AS [Id0], [u0].[AdditionalInfo], [u0].[Address], [u0].[BankName], [u0].[BankNumber], [u0].[Email], [u0].[Name], [u0].[Password], [u0].[PhoneNumber], [u0].[Role]
    FROM [FundMember] AS [f0]
    INNER JOIN [User] AS [u0] ON [f0].[UserId] = [u0].[Id]
) AS [t0] ON [t].[Id] = [t0].[FundId]
LEFT JOIN (
    SELECT [f1].[Id], [f1].[FundId], [f1].[sessionNumber], [f1].[takenDate], [t2].[Id] AS [Id0], [t2].[fundAmount], [t2].[fundMemberId], [t2].[predictedPrice], [t2].[remainPrice], [t2].[serviceCost], [t2].[sessionId], [f2].[Id] AS [Id1], [f2].[FundId] AS [FundId0], [f2].[NickName], [f2].[UserId], [n].[Id] AS [Id2], [n].[FundSessionId], [n].[fundMemberId] AS [fundMemberId0], [n].[payCost]
    FROM [FundSession] AS [f1]
    LEFT JOIN [TakenSessionDetail] AS [t2] ON [f1].[Id] = [t2].[sessionId]
    LEFT JOIN [FundMember] AS [f2] ON [t2].[fundMemberId] = [f2].[Id]
    LEFT JOIN [NormalSessionDetail] AS [n] ON [f1].[Id] = [n].[FundSessionId]
) AS [t1] ON [t].[Id] = [t1].[FundId]
ORDER BY [t].[Id], [t].[Id0], [t0].[Id], [t0].[Id0], [t1].[Id], [t1].[Id0], [t1].[Id1]
2023-07-16 18:25:07.596 +07:00 [INF] Executing OkObjectResult, writing value of type 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetResponse'.
2023-07-16 18:25:07.612 +07:00 [INF] Executed action hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web) in 133.609ms
2023-07-16 18:25:07.612 +07:00 [INF] Executed endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:25:07.613 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:57678/funds/1 application/json - - 200 - application/json;+charset=utf-8 138.9741ms
2023-07-16 18:25:15.189 +07:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:57678/funds/2 - -
2023-07-16 18:25:15.189 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:25:15.190 +07:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:57678/funds/2 - - - 204 - - 1.0739ms
2023-07-16 18:25:15.191 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:57678/funds/2 application/json -
2023-07-16 18:25:15.191 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:25:15.191 +07:00 [INF] Executing endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:25:15.192 +07:00 [INF] Route matched with {action = "Handle", controller = "FundGet"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[hui_management_backend.Web.Endpoints.FundEndpoints.FundGetResponse]] HandleAsync(hui_management_backend.Web.Endpoints.FundEndpoints.FundGetRequest, System.Threading.CancellationToken) on controller hui_management_backend.Web.Endpoints.FundEndpoints.FundGet (hui_management_backend.Web).
2023-07-16 18:25:15.196 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__ownerId_0='?' (DbType = Int32), @__fundId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[FundPrice], [t].[IsArchived], [t].[Name], [t].[OpenDate], [t].[OpenDateText], [t].[OwnerId], [t].[ServiceCost], [t].[Id0], [t].[AdditionalInfo], [t].[Address], [t].[BankName], [t].[BankNumber], [t].[Email], [t].[Name0], [t].[Password], [t].[PhoneNumber], [t].[Role], [t0].[Id], [t0].[FundId], [t0].[NickName], [t0].[UserId], [t0].[Id0], [t0].[AdditionalInfo], [t0].[Address], [t0].[BankName], [t0].[BankNumber], [t0].[Email], [t0].[Name], [t0].[Password], [t0].[PhoneNumber], [t0].[Role], [t1].[Id], [t1].[FundId], [t1].[sessionNumber], [t1].[takenDate], [t1].[Id0], [t1].[fundAmount], [t1].[fundMemberId], [t1].[predictedPrice], [t1].[remainPrice], [t1].[serviceCost], [t1].[sessionId], [t1].[Id1], [t1].[FundId0], [t1].[NickName], [t1].[UserId], [t1].[Id2], [t1].[FundSessionId], [t1].[fundMemberId0], [t1].[payCost]
FROM (
    SELECT TOP(1) [f].[Id], [f].[FundPrice], [f].[IsArchived], [f].[Name], [f].[OpenDate], [f].[OpenDateText], [f].[OwnerId], [f].[ServiceCost], [u].[Id] AS [Id0], [u].[AdditionalInfo], [u].[Address], [u].[BankName], [u].[BankNumber], [u].[Email], [u].[Name] AS [Name0], [u].[Password], [u].[PhoneNumber], [u].[Role]
    FROM [Funds] AS [f]
    INNER JOIN [User] AS [u] ON [f].[OwnerId] = [u].[Id]
    WHERE [u].[Id] = @__ownerId_0 AND [f].[Id] = @__fundId_1
) AS [t]
LEFT JOIN (
    SELECT [f0].[Id], [f0].[FundId], [f0].[NickName], [f0].[UserId], [u0].[Id] AS [Id0], [u0].[AdditionalInfo], [u0].[Address], [u0].[BankName], [u0].[BankNumber], [u0].[Email], [u0].[Name], [u0].[Password], [u0].[PhoneNumber], [u0].[Role]
    FROM [FundMember] AS [f0]
    INNER JOIN [User] AS [u0] ON [f0].[UserId] = [u0].[Id]
) AS [t0] ON [t].[Id] = [t0].[FundId]
LEFT JOIN (
    SELECT [f1].[Id], [f1].[FundId], [f1].[sessionNumber], [f1].[takenDate], [t2].[Id] AS [Id0], [t2].[fundAmount], [t2].[fundMemberId], [t2].[predictedPrice], [t2].[remainPrice], [t2].[serviceCost], [t2].[sessionId], [f2].[Id] AS [Id1], [f2].[FundId] AS [FundId0], [f2].[NickName], [f2].[UserId], [n].[Id] AS [Id2], [n].[FundSessionId], [n].[fundMemberId] AS [fundMemberId0], [n].[payCost]
    FROM [FundSession] AS [f1]
    LEFT JOIN [TakenSessionDetail] AS [t2] ON [f1].[Id] = [t2].[sessionId]
    LEFT JOIN [FundMember] AS [f2] ON [t2].[fundMemberId] = [f2].[Id]
    LEFT JOIN [NormalSessionDetail] AS [n] ON [f1].[Id] = [n].[FundSessionId]
) AS [t1] ON [t].[Id] = [t1].[FundId]
ORDER BY [t].[Id], [t].[Id0], [t0].[Id], [t0].[Id0], [t1].[Id], [t1].[Id0], [t1].[Id1]
2023-07-16 18:25:15.198 +07:00 [INF] Executing OkObjectResult, writing value of type 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetResponse'.
2023-07-16 18:25:15.199 +07:00 [INF] Executed action hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web) in 7.074ms
2023-07-16 18:25:15.199 +07:00 [INF] Executed endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:25:15.199 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:57678/funds/2 application/json - - 200 - application/json;+charset=utf-8 8.5644ms
2023-07-16 18:25:21.473 +07:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:57678/funds/1 - -
2023-07-16 18:25:21.474 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:25:21.474 +07:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:57678/funds/1 - - - 204 - - 1.1456ms
2023-07-16 18:25:21.478 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:57678/funds/1 application/json -
2023-07-16 18:25:21.479 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:25:21.479 +07:00 [INF] Executing endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:25:21.479 +07:00 [INF] Route matched with {action = "Handle", controller = "FundGet"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[hui_management_backend.Web.Endpoints.FundEndpoints.FundGetResponse]] HandleAsync(hui_management_backend.Web.Endpoints.FundEndpoints.FundGetRequest, System.Threading.CancellationToken) on controller hui_management_backend.Web.Endpoints.FundEndpoints.FundGet (hui_management_backend.Web).
2023-07-16 18:25:21.483 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ownerId_0='?' (DbType = Int32), @__fundId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[FundPrice], [t].[IsArchived], [t].[Name], [t].[OpenDate], [t].[OpenDateText], [t].[OwnerId], [t].[ServiceCost], [t].[Id0], [t].[AdditionalInfo], [t].[Address], [t].[BankName], [t].[BankNumber], [t].[Email], [t].[Name0], [t].[Password], [t].[PhoneNumber], [t].[Role], [t0].[Id], [t0].[FundId], [t0].[NickName], [t0].[UserId], [t0].[Id0], [t0].[AdditionalInfo], [t0].[Address], [t0].[BankName], [t0].[BankNumber], [t0].[Email], [t0].[Name], [t0].[Password], [t0].[PhoneNumber], [t0].[Role], [t1].[Id], [t1].[FundId], [t1].[sessionNumber], [t1].[takenDate], [t1].[Id0], [t1].[fundAmount], [t1].[fundMemberId], [t1].[predictedPrice], [t1].[remainPrice], [t1].[serviceCost], [t1].[sessionId], [t1].[Id1], [t1].[FundId0], [t1].[NickName], [t1].[UserId], [t1].[Id2], [t1].[FundSessionId], [t1].[fundMemberId0], [t1].[payCost]
FROM (
    SELECT TOP(1) [f].[Id], [f].[FundPrice], [f].[IsArchived], [f].[Name], [f].[OpenDate], [f].[OpenDateText], [f].[OwnerId], [f].[ServiceCost], [u].[Id] AS [Id0], [u].[AdditionalInfo], [u].[Address], [u].[BankName], [u].[BankNumber], [u].[Email], [u].[Name] AS [Name0], [u].[Password], [u].[PhoneNumber], [u].[Role]
    FROM [Funds] AS [f]
    INNER JOIN [User] AS [u] ON [f].[OwnerId] = [u].[Id]
    WHERE [u].[Id] = @__ownerId_0 AND [f].[Id] = @__fundId_1
) AS [t]
LEFT JOIN (
    SELECT [f0].[Id], [f0].[FundId], [f0].[NickName], [f0].[UserId], [u0].[Id] AS [Id0], [u0].[AdditionalInfo], [u0].[Address], [u0].[BankName], [u0].[BankNumber], [u0].[Email], [u0].[Name], [u0].[Password], [u0].[PhoneNumber], [u0].[Role]
    FROM [FundMember] AS [f0]
    INNER JOIN [User] AS [u0] ON [f0].[UserId] = [u0].[Id]
) AS [t0] ON [t].[Id] = [t0].[FundId]
LEFT JOIN (
    SELECT [f1].[Id], [f1].[FundId], [f1].[sessionNumber], [f1].[takenDate], [t2].[Id] AS [Id0], [t2].[fundAmount], [t2].[fundMemberId], [t2].[predictedPrice], [t2].[remainPrice], [t2].[serviceCost], [t2].[sessionId], [f2].[Id] AS [Id1], [f2].[FundId] AS [FundId0], [f2].[NickName], [f2].[UserId], [n].[Id] AS [Id2], [n].[FundSessionId], [n].[fundMemberId] AS [fundMemberId0], [n].[payCost]
    FROM [FundSession] AS [f1]
    LEFT JOIN [TakenSessionDetail] AS [t2] ON [f1].[Id] = [t2].[sessionId]
    LEFT JOIN [FundMember] AS [f2] ON [t2].[fundMemberId] = [f2].[Id]
    LEFT JOIN [NormalSessionDetail] AS [n] ON [f1].[Id] = [n].[FundSessionId]
) AS [t1] ON [t].[Id] = [t1].[FundId]
ORDER BY [t].[Id], [t].[Id0], [t0].[Id], [t0].[Id0], [t1].[Id], [t1].[Id0], [t1].[Id1]
2023-07-16 18:25:21.485 +07:00 [INF] Executing OkObjectResult, writing value of type 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetResponse'.
2023-07-16 18:25:21.486 +07:00 [INF] Executed action hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web) in 6.5417ms
2023-07-16 18:25:21.486 +07:00 [INF] Executed endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:25:21.486 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:57678/funds/1 application/json - - 200 - application/json;+charset=utf-8 8.1036ms
2023-07-16 18:25:24.772 +07:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:57678/funds/2 - -
2023-07-16 18:25:24.772 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:25:24.772 +07:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:57678/funds/2 - - - 204 - - 0.6494ms
2023-07-16 18:25:24.773 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:57678/funds/2 application/json -
2023-07-16 18:25:24.774 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:25:24.774 +07:00 [INF] Executing endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:25:24.774 +07:00 [INF] Route matched with {action = "Handle", controller = "FundGet"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[hui_management_backend.Web.Endpoints.FundEndpoints.FundGetResponse]] HandleAsync(hui_management_backend.Web.Endpoints.FundEndpoints.FundGetRequest, System.Threading.CancellationToken) on controller hui_management_backend.Web.Endpoints.FundEndpoints.FundGet (hui_management_backend.Web).
2023-07-16 18:25:24.777 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__ownerId_0='?' (DbType = Int32), @__fundId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[FundPrice], [t].[IsArchived], [t].[Name], [t].[OpenDate], [t].[OpenDateText], [t].[OwnerId], [t].[ServiceCost], [t].[Id0], [t].[AdditionalInfo], [t].[Address], [t].[BankName], [t].[BankNumber], [t].[Email], [t].[Name0], [t].[Password], [t].[PhoneNumber], [t].[Role], [t0].[Id], [t0].[FundId], [t0].[NickName], [t0].[UserId], [t0].[Id0], [t0].[AdditionalInfo], [t0].[Address], [t0].[BankName], [t0].[BankNumber], [t0].[Email], [t0].[Name], [t0].[Password], [t0].[PhoneNumber], [t0].[Role], [t1].[Id], [t1].[FundId], [t1].[sessionNumber], [t1].[takenDate], [t1].[Id0], [t1].[fundAmount], [t1].[fundMemberId], [t1].[predictedPrice], [t1].[remainPrice], [t1].[serviceCost], [t1].[sessionId], [t1].[Id1], [t1].[FundId0], [t1].[NickName], [t1].[UserId], [t1].[Id2], [t1].[FundSessionId], [t1].[fundMemberId0], [t1].[payCost]
FROM (
    SELECT TOP(1) [f].[Id], [f].[FundPrice], [f].[IsArchived], [f].[Name], [f].[OpenDate], [f].[OpenDateText], [f].[OwnerId], [f].[ServiceCost], [u].[Id] AS [Id0], [u].[AdditionalInfo], [u].[Address], [u].[BankName], [u].[BankNumber], [u].[Email], [u].[Name] AS [Name0], [u].[Password], [u].[PhoneNumber], [u].[Role]
    FROM [Funds] AS [f]
    INNER JOIN [User] AS [u] ON [f].[OwnerId] = [u].[Id]
    WHERE [u].[Id] = @__ownerId_0 AND [f].[Id] = @__fundId_1
) AS [t]
LEFT JOIN (
    SELECT [f0].[Id], [f0].[FundId], [f0].[NickName], [f0].[UserId], [u0].[Id] AS [Id0], [u0].[AdditionalInfo], [u0].[Address], [u0].[BankName], [u0].[BankNumber], [u0].[Email], [u0].[Name], [u0].[Password], [u0].[PhoneNumber], [u0].[Role]
    FROM [FundMember] AS [f0]
    INNER JOIN [User] AS [u0] ON [f0].[UserId] = [u0].[Id]
) AS [t0] ON [t].[Id] = [t0].[FundId]
LEFT JOIN (
    SELECT [f1].[Id], [f1].[FundId], [f1].[sessionNumber], [f1].[takenDate], [t2].[Id] AS [Id0], [t2].[fundAmount], [t2].[fundMemberId], [t2].[predictedPrice], [t2].[remainPrice], [t2].[serviceCost], [t2].[sessionId], [f2].[Id] AS [Id1], [f2].[FundId] AS [FundId0], [f2].[NickName], [f2].[UserId], [n].[Id] AS [Id2], [n].[FundSessionId], [n].[fundMemberId] AS [fundMemberId0], [n].[payCost]
    FROM [FundSession] AS [f1]
    LEFT JOIN [TakenSessionDetail] AS [t2] ON [f1].[Id] = [t2].[sessionId]
    LEFT JOIN [FundMember] AS [f2] ON [t2].[fundMemberId] = [f2].[Id]
    LEFT JOIN [NormalSessionDetail] AS [n] ON [f1].[Id] = [n].[FundSessionId]
) AS [t1] ON [t].[Id] = [t1].[FundId]
ORDER BY [t].[Id], [t].[Id0], [t0].[Id], [t0].[Id0], [t1].[Id], [t1].[Id0], [t1].[Id1]
2023-07-16 18:25:24.780 +07:00 [INF] Executing OkObjectResult, writing value of type 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetResponse'.
2023-07-16 18:25:24.780 +07:00 [INF] Executed action hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web) in 5.8009ms
2023-07-16 18:25:24.780 +07:00 [INF] Executed endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:25:24.781 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:57678/funds/2 application/json - - 200 - application/json;+charset=utf-8 7.6025ms
2023-07-16 18:25:32.492 +07:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:57678/funds/2/sessions/add - -
2023-07-16 18:25:32.493 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:25:32.494 +07:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:57678/funds/2/sessions/add - - - 204 - - 1.4669ms
2023-07-16 18:25:32.498 +07:00 [INF] Request starting HTTP/1.1 POST http://localhost:57678/funds/2/sessions/add application/json 35
2023-07-16 18:25:32.500 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:25:32.500 +07:00 [INF] Executing endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSession.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:25:32.500 +07:00 [INF] Route matched with {action = "Handle", controller = "FundAddSession"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] HandleAsync(hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSessionRequest, System.Threading.CancellationToken) on controller hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSession (hui_management_backend.Web).
2023-07-16 18:25:32.504 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__ownerId_0='?' (DbType = Int32), @__fundId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[FundPrice], [t].[IsArchived], [t].[Name], [t].[OpenDate], [t].[OpenDateText], [t].[OwnerId], [t].[ServiceCost], [t].[Id0], [t].[AdditionalInfo], [t].[Address], [t].[BankName], [t].[BankNumber], [t].[Email], [t].[Name0], [t].[Password], [t].[PhoneNumber], [t].[Role], [t0].[Id], [t0].[FundId], [t0].[NickName], [t0].[UserId], [t0].[Id0], [t0].[AdditionalInfo], [t0].[Address], [t0].[BankName], [t0].[BankNumber], [t0].[Email], [t0].[Name], [t0].[Password], [t0].[PhoneNumber], [t0].[Role], [t1].[Id], [t1].[FundId], [t1].[sessionNumber], [t1].[takenDate], [t1].[Id0], [t1].[fundAmount], [t1].[fundMemberId], [t1].[predictedPrice], [t1].[remainPrice], [t1].[serviceCost], [t1].[sessionId], [t1].[Id1], [t1].[FundId0], [t1].[NickName], [t1].[UserId], [t1].[Id2], [t1].[FundSessionId], [t1].[fundMemberId0], [t1].[payCost]
FROM (
    SELECT TOP(1) [f].[Id], [f].[FundPrice], [f].[IsArchived], [f].[Name], [f].[OpenDate], [f].[OpenDateText], [f].[OwnerId], [f].[ServiceCost], [u].[Id] AS [Id0], [u].[AdditionalInfo], [u].[Address], [u].[BankName], [u].[BankNumber], [u].[Email], [u].[Name] AS [Name0], [u].[Password], [u].[PhoneNumber], [u].[Role]
    FROM [Funds] AS [f]
    INNER JOIN [User] AS [u] ON [f].[OwnerId] = [u].[Id]
    WHERE [u].[Id] = @__ownerId_0 AND [f].[Id] = @__fundId_1
) AS [t]
LEFT JOIN (
    SELECT [f0].[Id], [f0].[FundId], [f0].[NickName], [f0].[UserId], [u0].[Id] AS [Id0], [u0].[AdditionalInfo], [u0].[Address], [u0].[BankName], [u0].[BankNumber], [u0].[Email], [u0].[Name], [u0].[Password], [u0].[PhoneNumber], [u0].[Role]
    FROM [FundMember] AS [f0]
    INNER JOIN [User] AS [u0] ON [f0].[UserId] = [u0].[Id]
) AS [t0] ON [t].[Id] = [t0].[FundId]
LEFT JOIN (
    SELECT [f1].[Id], [f1].[FundId], [f1].[sessionNumber], [f1].[takenDate], [t2].[Id] AS [Id0], [t2].[fundAmount], [t2].[fundMemberId], [t2].[predictedPrice], [t2].[remainPrice], [t2].[serviceCost], [t2].[sessionId], [f2].[Id] AS [Id1], [f2].[FundId] AS [FundId0], [f2].[NickName], [f2].[UserId], [n].[Id] AS [Id2], [n].[FundSessionId], [n].[fundMemberId] AS [fundMemberId0], [n].[payCost]
    FROM [FundSession] AS [f1]
    LEFT JOIN [TakenSessionDetail] AS [t2] ON [f1].[Id] = [t2].[sessionId]
    LEFT JOIN [FundMember] AS [f2] ON [t2].[fundMemberId] = [f2].[Id]
    LEFT JOIN [NormalSessionDetail] AS [n] ON [f1].[Id] = [n].[FundSessionId]
) AS [t1] ON [t].[Id] = [t1].[FundId]
ORDER BY [t].[Id], [t].[Id0], [t0].[Id], [t0].[Id0], [t1].[Id], [t1].[Id0], [t1].[Id1]
2023-07-16 18:25:32.510 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = DateTimeOffset), @p10='?' (DbType = Int32), @p3='?' (DbType = Double), @p4='?' (DbType = Boolean), @p5='?' (Size = 4000), @p6='?' (DbType = DateTimeOffset), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [FundSession] ([FundId], [sessionNumber], [takenDate])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2);
UPDATE [Funds] SET [FundPrice] = @p3, [IsArchived] = @p4, [Name] = @p5, [OpenDate] = @p6, [OpenDateText] = @p7, [OwnerId] = @p8, [ServiceCost] = @p9
OUTPUT 1
WHERE [Id] = @p10;
2023-07-16 18:25:32.519 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@p11='?' (DbType = Int32), @p12='?' (DbType = Int32), @p13='?' (DbType = Double), @p14='?' (DbType = Int32), @p15='?' (DbType = Int32), @p16='?' (DbType = Double), @p17='?' (DbType = Double), @p18='?' (DbType = Int32), @p19='?' (DbType = Double), @p20='?' (DbType = Double), @p21='?' (DbType = Double), @p22='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
MERGE [NormalSessionDetail] USING (
VALUES (@p11, @p12, @p13, 0),
(@p14, @p15, @p16, 1)) AS i ([FundSessionId], [fundMemberId], [payCost], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([FundSessionId], [fundMemberId], [payCost])
VALUES (i.[FundSessionId], i.[fundMemberId], i.[payCost])
OUTPUT INSERTED.[Id], i._Position;
INSERT INTO [TakenSessionDetail] ([fundAmount], [fundMemberId], [predictedPrice], [remainPrice], [serviceCost], [sessionId])
OUTPUT INSERTED.[Id]
VALUES (@p17, @p18, @p19, @p20, @p21, @p22);
2023-07-16 18:25:32.522 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__dateTimeOffset_Date_0='?' (DbType = DateTime2), @__ownerId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[CreateAt], [p].[OwnerId], [p].[Status]
FROM [Payment] AS [p]
WHERE CONVERT(date, [p].[CreateAt]) = @__dateTimeOffset_Date_0 AND [p].[OwnerId] = @__ownerId_1
2023-07-16 18:25:34.206 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__dateTimeOffset_Date_0='?' (DbType = DateTime2), @__ownerId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[CreateAt], [p].[OwnerId], [p].[Status]
FROM [Payment] AS [p]
WHERE CONVERT(date, [p].[CreateAt]) = @__dateTimeOffset_Date_0 AND [p].[OwnerId] = @__ownerId_1
2023-07-16 18:25:34.208 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__dateTimeOffset_Date_0='?' (DbType = DateTime2), @__ownerId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[CreateAt], [p].[OwnerId], [p].[Status]
FROM [Payment] AS [p]
WHERE CONVERT(date, [p].[CreateAt]) = @__dateTimeOffset_Date_0 AND [p].[OwnerId] = @__ownerId_1
2023-07-16 18:25:34.215 +07:00 [INF] Executed DbCommand (5ms) [Parameters=[@p0='?' (DbType = Double), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Double), @p6='?' (DbType = Int32), @p7='?' (DbType = Int32), @p8='?' (DbType = Int32), @p9='?' (DbType = Int32), @p10='?' (DbType = Double), @p11='?' (DbType = Int32), @p12='?' (DbType = Int32), @p13='?' (DbType = Int32), @p14='?' (DbType = Int32), @p18='?' (DbType = Int32), @p15='?' (DbType = DateTimeOffset), @p16='?' (DbType = Int32), @p17='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
MERGE [FundBill] USING (
VALUES (@p0, @p1, @p2, @p3, @p4, 0),
(@p5, @p6, @p7, @p8, @p9, 1),
(@p10, @p11, @p12, @p13, @p14, 2)) AS i ([Amount], [PaymentId], [Status], [Type], [fromFundId], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([Amount], [PaymentId], [Status], [Type], [fromFundId])
VALUES (i.[Amount], i.[PaymentId], i.[Status], i.[Type], i.[fromFundId])
OUTPUT INSERTED.[Id], i._Position;
UPDATE [Payment] SET [CreateAt] = @p15, [OwnerId] = @p16, [Status] = @p17
OUTPUT 1
WHERE [Id] = @p18;
2023-07-16 18:25:34.225 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@p3='?' (DbType = Int32), @p0='?' (DbType = DateTimeOffset), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Payment] SET [CreateAt] = @p0, [OwnerId] = @p1, [Status] = @p2
OUTPUT 1
WHERE [Id] = @p3;
2023-07-16 18:25:40.124 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2023-07-16 18:25:40.125 +07:00 [INF] Executed action hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSession.HandleAsync (hui_management_backend.Web) in 7624.7588ms
2023-07-16 18:25:40.125 +07:00 [INF] Executed endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSession.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:25:40.125 +07:00 [INF] Request finished HTTP/1.1 POST http://localhost:57678/funds/2/sessions/add application/json 35 - 200 - application/json;+charset=utf-8 7626.7786ms
2023-07-16 18:25:40.149 +07:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:57678/funds/2 - -
2023-07-16 18:25:40.149 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:25:40.150 +07:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:57678/funds/2 - - - 204 - - 0.6079ms
2023-07-16 18:25:40.150 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:57678/funds/2 application/json -
2023-07-16 18:25:40.151 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:25:40.151 +07:00 [INF] Executing endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:25:40.151 +07:00 [INF] Route matched with {action = "Handle", controller = "FundGet"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[hui_management_backend.Web.Endpoints.FundEndpoints.FundGetResponse]] HandleAsync(hui_management_backend.Web.Endpoints.FundEndpoints.FundGetRequest, System.Threading.CancellationToken) on controller hui_management_backend.Web.Endpoints.FundEndpoints.FundGet (hui_management_backend.Web).
2023-07-16 18:25:40.154 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ownerId_0='?' (DbType = Int32), @__fundId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[FundPrice], [t].[IsArchived], [t].[Name], [t].[OpenDate], [t].[OpenDateText], [t].[OwnerId], [t].[ServiceCost], [t].[Id0], [t].[AdditionalInfo], [t].[Address], [t].[BankName], [t].[BankNumber], [t].[Email], [t].[Name0], [t].[Password], [t].[PhoneNumber], [t].[Role], [t0].[Id], [t0].[FundId], [t0].[NickName], [t0].[UserId], [t0].[Id0], [t0].[AdditionalInfo], [t0].[Address], [t0].[BankName], [t0].[BankNumber], [t0].[Email], [t0].[Name], [t0].[Password], [t0].[PhoneNumber], [t0].[Role], [t1].[Id], [t1].[FundId], [t1].[sessionNumber], [t1].[takenDate], [t1].[Id0], [t1].[fundAmount], [t1].[fundMemberId], [t1].[predictedPrice], [t1].[remainPrice], [t1].[serviceCost], [t1].[sessionId], [t1].[Id1], [t1].[FundId0], [t1].[NickName], [t1].[UserId], [t1].[Id2], [t1].[FundSessionId], [t1].[fundMemberId0], [t1].[payCost]
FROM (
    SELECT TOP(1) [f].[Id], [f].[FundPrice], [f].[IsArchived], [f].[Name], [f].[OpenDate], [f].[OpenDateText], [f].[OwnerId], [f].[ServiceCost], [u].[Id] AS [Id0], [u].[AdditionalInfo], [u].[Address], [u].[BankName], [u].[BankNumber], [u].[Email], [u].[Name] AS [Name0], [u].[Password], [u].[PhoneNumber], [u].[Role]
    FROM [Funds] AS [f]
    INNER JOIN [User] AS [u] ON [f].[OwnerId] = [u].[Id]
    WHERE [u].[Id] = @__ownerId_0 AND [f].[Id] = @__fundId_1
) AS [t]
LEFT JOIN (
    SELECT [f0].[Id], [f0].[FundId], [f0].[NickName], [f0].[UserId], [u0].[Id] AS [Id0], [u0].[AdditionalInfo], [u0].[Address], [u0].[BankName], [u0].[BankNumber], [u0].[Email], [u0].[Name], [u0].[Password], [u0].[PhoneNumber], [u0].[Role]
    FROM [FundMember] AS [f0]
    INNER JOIN [User] AS [u0] ON [f0].[UserId] = [u0].[Id]
) AS [t0] ON [t].[Id] = [t0].[FundId]
LEFT JOIN (
    SELECT [f1].[Id], [f1].[FundId], [f1].[sessionNumber], [f1].[takenDate], [t2].[Id] AS [Id0], [t2].[fundAmount], [t2].[fundMemberId], [t2].[predictedPrice], [t2].[remainPrice], [t2].[serviceCost], [t2].[sessionId], [f2].[Id] AS [Id1], [f2].[FundId] AS [FundId0], [f2].[NickName], [f2].[UserId], [n].[Id] AS [Id2], [n].[FundSessionId], [n].[fundMemberId] AS [fundMemberId0], [n].[payCost]
    FROM [FundSession] AS [f1]
    LEFT JOIN [TakenSessionDetail] AS [t2] ON [f1].[Id] = [t2].[sessionId]
    LEFT JOIN [FundMember] AS [f2] ON [t2].[fundMemberId] = [f2].[Id]
    LEFT JOIN [NormalSessionDetail] AS [n] ON [f1].[Id] = [n].[FundSessionId]
) AS [t1] ON [t].[Id] = [t1].[FundId]
ORDER BY [t].[Id], [t].[Id0], [t0].[Id], [t0].[Id0], [t1].[Id], [t1].[Id0], [t1].[Id1]
2023-07-16 18:25:40.156 +07:00 [INF] Executing OkObjectResult, writing value of type 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetResponse'.
2023-07-16 18:25:40.157 +07:00 [INF] Executed action hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web) in 5.5285ms
2023-07-16 18:25:40.157 +07:00 [INF] Executed endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:25:40.157 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:57678/funds/2 application/json - - 200 - application/json;+charset=utf-8 6.5368ms
2023-07-16 18:26:04.215 +07:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:57678/funds - -
2023-07-16 18:26:04.215 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:26:04.216 +07:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:57678/funds - - - 204 - - 0.7207ms
2023-07-16 18:26:04.216 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:57678/funds application/json -
2023-07-16 18:26:04.217 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:26:04.217 +07:00 [INF] Executing endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAll.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:26:04.220 +07:00 [INF] Route matched with {action = "Handle", controller = "FundGetAll"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAllResponse]] HandleAsync(System.Threading.CancellationToken) on controller hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAll (hui_management_backend.Web).
2023-07-16 18:26:04.232 +07:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2023-07-16 18:26:04.238 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__ownerId_0='?' (DbType = Int32), @__isArchived_1='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [f].[Id], [f].[FundPrice], [f].[IsArchived], [f].[Name], [f].[OpenDate], [f].[OpenDateText], [f].[OwnerId], [f].[ServiceCost], [u].[Id], [u].[AdditionalInfo], [u].[Address], [u].[BankName], [u].[BankNumber], [u].[Email], [u].[Name], [u].[Password], [u].[PhoneNumber], [u].[Role], [f0].[Id], [f0].[FundId], [f0].[NickName], [f0].[UserId], [f1].[Id], [f1].[FundId], [f1].[sessionNumber], [f1].[takenDate]
FROM [Funds] AS [f]
INNER JOIN [User] AS [u] ON [f].[OwnerId] = [u].[Id]
LEFT JOIN [FundMember] AS [f0] ON [f].[Id] = [f0].[FundId]
LEFT JOIN [FundSession] AS [f1] ON [f].[Id] = [f1].[FundId]
WHERE [u].[Id] = @__ownerId_0 AND [f].[IsArchived] = @__isArchived_1
ORDER BY [f].[Id], [u].[Id], [f0].[Id]
2023-07-16 18:26:04.242 +07:00 [INF] Executing OkObjectResult, writing value of type 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAllResponse'.
2023-07-16 18:26:04.247 +07:00 [INF] Executed action hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAll.HandleAsync (hui_management_backend.Web) in 27.5125ms
2023-07-16 18:26:04.248 +07:00 [INF] Executed endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAll.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:26:04.248 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:57678/funds application/json - - 200 - application/json;+charset=utf-8 31.3474ms
2023-07-16 18:27:09.632 +07:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:57678/funds/1 - -
2023-07-16 18:27:09.660 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:27:09.661 +07:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:57678/funds/1 - - - 204 - - 29.5674ms
2023-07-16 18:27:09.662 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:57678/funds/1 application/json -
2023-07-16 18:27:09.663 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:27:09.663 +07:00 [INF] Executing endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:27:09.663 +07:00 [INF] Route matched with {action = "Handle", controller = "FundGet"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[hui_management_backend.Web.Endpoints.FundEndpoints.FundGetResponse]] HandleAsync(hui_management_backend.Web.Endpoints.FundEndpoints.FundGetRequest, System.Threading.CancellationToken) on controller hui_management_backend.Web.Endpoints.FundEndpoints.FundGet (hui_management_backend.Web).
2023-07-16 18:27:09.669 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ownerId_0='?' (DbType = Int32), @__fundId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[FundPrice], [t].[IsArchived], [t].[Name], [t].[OpenDate], [t].[OpenDateText], [t].[OwnerId], [t].[ServiceCost], [t].[Id0], [t].[AdditionalInfo], [t].[Address], [t].[BankName], [t].[BankNumber], [t].[Email], [t].[Name0], [t].[Password], [t].[PhoneNumber], [t].[Role], [t0].[Id], [t0].[FundId], [t0].[NickName], [t0].[UserId], [t0].[Id0], [t0].[AdditionalInfo], [t0].[Address], [t0].[BankName], [t0].[BankNumber], [t0].[Email], [t0].[Name], [t0].[Password], [t0].[PhoneNumber], [t0].[Role], [t1].[Id], [t1].[FundId], [t1].[sessionNumber], [t1].[takenDate], [t1].[Id0], [t1].[fundAmount], [t1].[fundMemberId], [t1].[predictedPrice], [t1].[remainPrice], [t1].[serviceCost], [t1].[sessionId], [t1].[Id1], [t1].[FundId0], [t1].[NickName], [t1].[UserId], [t1].[Id2], [t1].[FundSessionId], [t1].[fundMemberId0], [t1].[payCost]
FROM (
    SELECT TOP(1) [f].[Id], [f].[FundPrice], [f].[IsArchived], [f].[Name], [f].[OpenDate], [f].[OpenDateText], [f].[OwnerId], [f].[ServiceCost], [u].[Id] AS [Id0], [u].[AdditionalInfo], [u].[Address], [u].[BankName], [u].[BankNumber], [u].[Email], [u].[Name] AS [Name0], [u].[Password], [u].[PhoneNumber], [u].[Role]
    FROM [Funds] AS [f]
    INNER JOIN [User] AS [u] ON [f].[OwnerId] = [u].[Id]
    WHERE [u].[Id] = @__ownerId_0 AND [f].[Id] = @__fundId_1
) AS [t]
LEFT JOIN (
    SELECT [f0].[Id], [f0].[FundId], [f0].[NickName], [f0].[UserId], [u0].[Id] AS [Id0], [u0].[AdditionalInfo], [u0].[Address], [u0].[BankName], [u0].[BankNumber], [u0].[Email], [u0].[Name], [u0].[Password], [u0].[PhoneNumber], [u0].[Role]
    FROM [FundMember] AS [f0]
    INNER JOIN [User] AS [u0] ON [f0].[UserId] = [u0].[Id]
) AS [t0] ON [t].[Id] = [t0].[FundId]
LEFT JOIN (
    SELECT [f1].[Id], [f1].[FundId], [f1].[sessionNumber], [f1].[takenDate], [t2].[Id] AS [Id0], [t2].[fundAmount], [t2].[fundMemberId], [t2].[predictedPrice], [t2].[remainPrice], [t2].[serviceCost], [t2].[sessionId], [f2].[Id] AS [Id1], [f2].[FundId] AS [FundId0], [f2].[NickName], [f2].[UserId], [n].[Id] AS [Id2], [n].[FundSessionId], [n].[fundMemberId] AS [fundMemberId0], [n].[payCost]
    FROM [FundSession] AS [f1]
    LEFT JOIN [TakenSessionDetail] AS [t2] ON [f1].[Id] = [t2].[sessionId]
    LEFT JOIN [FundMember] AS [f2] ON [t2].[fundMemberId] = [f2].[Id]
    LEFT JOIN [NormalSessionDetail] AS [n] ON [f1].[Id] = [n].[FundSessionId]
) AS [t1] ON [t].[Id] = [t1].[FundId]
ORDER BY [t].[Id], [t].[Id0], [t0].[Id], [t0].[Id0], [t1].[Id], [t1].[Id0], [t1].[Id1]
2023-07-16 18:27:09.672 +07:00 [INF] Executing OkObjectResult, writing value of type 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetResponse'.
2023-07-16 18:27:09.673 +07:00 [INF] Executed action hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web) in 9.6208ms
2023-07-16 18:27:09.673 +07:00 [INF] Executed endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:27:09.673 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:57678/funds/1 application/json - - 200 - application/json;+charset=utf-8 10.8443ms
2023-07-16 18:27:20.081 +07:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:57678/funds/2 - -
2023-07-16 18:27:20.082 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:27:20.082 +07:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:57678/funds/2 - - - 204 - - 0.9309ms
2023-07-16 18:27:20.086 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:57678/funds/2 application/json -
2023-07-16 18:27:20.087 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:27:20.087 +07:00 [INF] Executing endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:27:20.087 +07:00 [INF] Route matched with {action = "Handle", controller = "FundGet"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[hui_management_backend.Web.Endpoints.FundEndpoints.FundGetResponse]] HandleAsync(hui_management_backend.Web.Endpoints.FundEndpoints.FundGetRequest, System.Threading.CancellationToken) on controller hui_management_backend.Web.Endpoints.FundEndpoints.FundGet (hui_management_backend.Web).
2023-07-16 18:27:20.091 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ownerId_0='?' (DbType = Int32), @__fundId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[FundPrice], [t].[IsArchived], [t].[Name], [t].[OpenDate], [t].[OpenDateText], [t].[OwnerId], [t].[ServiceCost], [t].[Id0], [t].[AdditionalInfo], [t].[Address], [t].[BankName], [t].[BankNumber], [t].[Email], [t].[Name0], [t].[Password], [t].[PhoneNumber], [t].[Role], [t0].[Id], [t0].[FundId], [t0].[NickName], [t0].[UserId], [t0].[Id0], [t0].[AdditionalInfo], [t0].[Address], [t0].[BankName], [t0].[BankNumber], [t0].[Email], [t0].[Name], [t0].[Password], [t0].[PhoneNumber], [t0].[Role], [t1].[Id], [t1].[FundId], [t1].[sessionNumber], [t1].[takenDate], [t1].[Id0], [t1].[fundAmount], [t1].[fundMemberId], [t1].[predictedPrice], [t1].[remainPrice], [t1].[serviceCost], [t1].[sessionId], [t1].[Id1], [t1].[FundId0], [t1].[NickName], [t1].[UserId], [t1].[Id2], [t1].[FundSessionId], [t1].[fundMemberId0], [t1].[payCost]
FROM (
    SELECT TOP(1) [f].[Id], [f].[FundPrice], [f].[IsArchived], [f].[Name], [f].[OpenDate], [f].[OpenDateText], [f].[OwnerId], [f].[ServiceCost], [u].[Id] AS [Id0], [u].[AdditionalInfo], [u].[Address], [u].[BankName], [u].[BankNumber], [u].[Email], [u].[Name] AS [Name0], [u].[Password], [u].[PhoneNumber], [u].[Role]
    FROM [Funds] AS [f]
    INNER JOIN [User] AS [u] ON [f].[OwnerId] = [u].[Id]
    WHERE [u].[Id] = @__ownerId_0 AND [f].[Id] = @__fundId_1
) AS [t]
LEFT JOIN (
    SELECT [f0].[Id], [f0].[FundId], [f0].[NickName], [f0].[UserId], [u0].[Id] AS [Id0], [u0].[AdditionalInfo], [u0].[Address], [u0].[BankName], [u0].[BankNumber], [u0].[Email], [u0].[Name], [u0].[Password], [u0].[PhoneNumber], [u0].[Role]
    FROM [FundMember] AS [f0]
    INNER JOIN [User] AS [u0] ON [f0].[UserId] = [u0].[Id]
) AS [t0] ON [t].[Id] = [t0].[FundId]
LEFT JOIN (
    SELECT [f1].[Id], [f1].[FundId], [f1].[sessionNumber], [f1].[takenDate], [t2].[Id] AS [Id0], [t2].[fundAmount], [t2].[fundMemberId], [t2].[predictedPrice], [t2].[remainPrice], [t2].[serviceCost], [t2].[sessionId], [f2].[Id] AS [Id1], [f2].[FundId] AS [FundId0], [f2].[NickName], [f2].[UserId], [n].[Id] AS [Id2], [n].[FundSessionId], [n].[fundMemberId] AS [fundMemberId0], [n].[payCost]
    FROM [FundSession] AS [f1]
    LEFT JOIN [TakenSessionDetail] AS [t2] ON [f1].[Id] = [t2].[sessionId]
    LEFT JOIN [FundMember] AS [f2] ON [t2].[fundMemberId] = [f2].[Id]
    LEFT JOIN [NormalSessionDetail] AS [n] ON [f1].[Id] = [n].[FundSessionId]
) AS [t1] ON [t].[Id] = [t1].[FundId]
ORDER BY [t].[Id], [t].[Id0], [t0].[Id], [t0].[Id0], [t1].[Id], [t1].[Id0], [t1].[Id1]
2023-07-16 18:27:20.095 +07:00 [INF] Executing OkObjectResult, writing value of type 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetResponse'.
2023-07-16 18:27:20.096 +07:00 [INF] Executed action hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web) in 8.9502ms
2023-07-16 18:27:20.096 +07:00 [INF] Executed endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:27:20.096 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:57678/funds/2 application/json - - 200 - application/json;+charset=utf-8 10.3843ms
2023-07-16 18:27:48.033 +07:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:57678/funds/1 - -
2023-07-16 18:27:48.034 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:27:48.034 +07:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:57678/funds/1 - - - 204 - - 0.8919ms
2023-07-16 18:27:48.038 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:57678/funds/1 application/json -
2023-07-16 18:27:48.038 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:27:48.038 +07:00 [INF] Executing endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:27:48.038 +07:00 [INF] Route matched with {action = "Handle", controller = "FundGet"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[hui_management_backend.Web.Endpoints.FundEndpoints.FundGetResponse]] HandleAsync(hui_management_backend.Web.Endpoints.FundEndpoints.FundGetRequest, System.Threading.CancellationToken) on controller hui_management_backend.Web.Endpoints.FundEndpoints.FundGet (hui_management_backend.Web).
2023-07-16 18:27:48.042 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ownerId_0='?' (DbType = Int32), @__fundId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[FundPrice], [t].[IsArchived], [t].[Name], [t].[OpenDate], [t].[OpenDateText], [t].[OwnerId], [t].[ServiceCost], [t].[Id0], [t].[AdditionalInfo], [t].[Address], [t].[BankName], [t].[BankNumber], [t].[Email], [t].[Name0], [t].[Password], [t].[PhoneNumber], [t].[Role], [t0].[Id], [t0].[FundId], [t0].[NickName], [t0].[UserId], [t0].[Id0], [t0].[AdditionalInfo], [t0].[Address], [t0].[BankName], [t0].[BankNumber], [t0].[Email], [t0].[Name], [t0].[Password], [t0].[PhoneNumber], [t0].[Role], [t1].[Id], [t1].[FundId], [t1].[sessionNumber], [t1].[takenDate], [t1].[Id0], [t1].[fundAmount], [t1].[fundMemberId], [t1].[predictedPrice], [t1].[remainPrice], [t1].[serviceCost], [t1].[sessionId], [t1].[Id1], [t1].[FundId0], [t1].[NickName], [t1].[UserId], [t1].[Id2], [t1].[FundSessionId], [t1].[fundMemberId0], [t1].[payCost]
FROM (
    SELECT TOP(1) [f].[Id], [f].[FundPrice], [f].[IsArchived], [f].[Name], [f].[OpenDate], [f].[OpenDateText], [f].[OwnerId], [f].[ServiceCost], [u].[Id] AS [Id0], [u].[AdditionalInfo], [u].[Address], [u].[BankName], [u].[BankNumber], [u].[Email], [u].[Name] AS [Name0], [u].[Password], [u].[PhoneNumber], [u].[Role]
    FROM [Funds] AS [f]
    INNER JOIN [User] AS [u] ON [f].[OwnerId] = [u].[Id]
    WHERE [u].[Id] = @__ownerId_0 AND [f].[Id] = @__fundId_1
) AS [t]
LEFT JOIN (
    SELECT [f0].[Id], [f0].[FundId], [f0].[NickName], [f0].[UserId], [u0].[Id] AS [Id0], [u0].[AdditionalInfo], [u0].[Address], [u0].[BankName], [u0].[BankNumber], [u0].[Email], [u0].[Name], [u0].[Password], [u0].[PhoneNumber], [u0].[Role]
    FROM [FundMember] AS [f0]
    INNER JOIN [User] AS [u0] ON [f0].[UserId] = [u0].[Id]
) AS [t0] ON [t].[Id] = [t0].[FundId]
LEFT JOIN (
    SELECT [f1].[Id], [f1].[FundId], [f1].[sessionNumber], [f1].[takenDate], [t2].[Id] AS [Id0], [t2].[fundAmount], [t2].[fundMemberId], [t2].[predictedPrice], [t2].[remainPrice], [t2].[serviceCost], [t2].[sessionId], [f2].[Id] AS [Id1], [f2].[FundId] AS [FundId0], [f2].[NickName], [f2].[UserId], [n].[Id] AS [Id2], [n].[FundSessionId], [n].[fundMemberId] AS [fundMemberId0], [n].[payCost]
    FROM [FundSession] AS [f1]
    LEFT JOIN [TakenSessionDetail] AS [t2] ON [f1].[Id] = [t2].[sessionId]
    LEFT JOIN [FundMember] AS [f2] ON [t2].[fundMemberId] = [f2].[Id]
    LEFT JOIN [NormalSessionDetail] AS [n] ON [f1].[Id] = [n].[FundSessionId]
) AS [t1] ON [t].[Id] = [t1].[FundId]
ORDER BY [t].[Id], [t].[Id0], [t0].[Id], [t0].[Id0], [t1].[Id], [t1].[Id0], [t1].[Id1]
2023-07-16 18:27:48.047 +07:00 [INF] Executing OkObjectResult, writing value of type 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetResponse'.
2023-07-16 18:27:48.048 +07:00 [INF] Executed action hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web) in 9.1801ms
2023-07-16 18:27:48.048 +07:00 [INF] Executed endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:27:48.048 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:57678/funds/1 application/json - - 200 - application/json;+charset=utf-8 10.2068ms
2023-07-16 18:27:52.997 +07:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:57678/funds/2 - -
2023-07-16 18:27:52.997 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:27:52.997 +07:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:57678/funds/2 - - - 204 - - 0.4700ms
2023-07-16 18:27:52.998 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:57678/funds/2 application/json -
2023-07-16 18:27:52.999 +07:00 [INF] CORS policy execution successful.
2023-07-16 18:27:52.999 +07:00 [INF] Executing endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:27:52.999 +07:00 [INF] Route matched with {action = "Handle", controller = "FundGet"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[hui_management_backend.Web.Endpoints.FundEndpoints.FundGetResponse]] HandleAsync(hui_management_backend.Web.Endpoints.FundEndpoints.FundGetRequest, System.Threading.CancellationToken) on controller hui_management_backend.Web.Endpoints.FundEndpoints.FundGet (hui_management_backend.Web).
2023-07-16 18:27:53.003 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ownerId_0='?' (DbType = Int32), @__fundId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[FundPrice], [t].[IsArchived], [t].[Name], [t].[OpenDate], [t].[OpenDateText], [t].[OwnerId], [t].[ServiceCost], [t].[Id0], [t].[AdditionalInfo], [t].[Address], [t].[BankName], [t].[BankNumber], [t].[Email], [t].[Name0], [t].[Password], [t].[PhoneNumber], [t].[Role], [t0].[Id], [t0].[FundId], [t0].[NickName], [t0].[UserId], [t0].[Id0], [t0].[AdditionalInfo], [t0].[Address], [t0].[BankName], [t0].[BankNumber], [t0].[Email], [t0].[Name], [t0].[Password], [t0].[PhoneNumber], [t0].[Role], [t1].[Id], [t1].[FundId], [t1].[sessionNumber], [t1].[takenDate], [t1].[Id0], [t1].[fundAmount], [t1].[fundMemberId], [t1].[predictedPrice], [t1].[remainPrice], [t1].[serviceCost], [t1].[sessionId], [t1].[Id1], [t1].[FundId0], [t1].[NickName], [t1].[UserId], [t1].[Id2], [t1].[FundSessionId], [t1].[fundMemberId0], [t1].[payCost]
FROM (
    SELECT TOP(1) [f].[Id], [f].[FundPrice], [f].[IsArchived], [f].[Name], [f].[OpenDate], [f].[OpenDateText], [f].[OwnerId], [f].[ServiceCost], [u].[Id] AS [Id0], [u].[AdditionalInfo], [u].[Address], [u].[BankName], [u].[BankNumber], [u].[Email], [u].[Name] AS [Name0], [u].[Password], [u].[PhoneNumber], [u].[Role]
    FROM [Funds] AS [f]
    INNER JOIN [User] AS [u] ON [f].[OwnerId] = [u].[Id]
    WHERE [u].[Id] = @__ownerId_0 AND [f].[Id] = @__fundId_1
) AS [t]
LEFT JOIN (
    SELECT [f0].[Id], [f0].[FundId], [f0].[NickName], [f0].[UserId], [u0].[Id] AS [Id0], [u0].[AdditionalInfo], [u0].[Address], [u0].[BankName], [u0].[BankNumber], [u0].[Email], [u0].[Name], [u0].[Password], [u0].[PhoneNumber], [u0].[Role]
    FROM [FundMember] AS [f0]
    INNER JOIN [User] AS [u0] ON [f0].[UserId] = [u0].[Id]
) AS [t0] ON [t].[Id] = [t0].[FundId]
LEFT JOIN (
    SELECT [f1].[Id], [f1].[FundId], [f1].[sessionNumber], [f1].[takenDate], [t2].[Id] AS [Id0], [t2].[fundAmount], [t2].[fundMemberId], [t2].[predictedPrice], [t2].[remainPrice], [t2].[serviceCost], [t2].[sessionId], [f2].[Id] AS [Id1], [f2].[FundId] AS [FundId0], [f2].[NickName], [f2].[UserId], [n].[Id] AS [Id2], [n].[FundSessionId], [n].[fundMemberId] AS [fundMemberId0], [n].[payCost]
    FROM [FundSession] AS [f1]
    LEFT JOIN [TakenSessionDetail] AS [t2] ON [f1].[Id] = [t2].[sessionId]
    LEFT JOIN [FundMember] AS [f2] ON [t2].[fundMemberId] = [f2].[Id]
    LEFT JOIN [NormalSessionDetail] AS [n] ON [f1].[Id] = [n].[FundSessionId]
) AS [t1] ON [t].[Id] = [t1].[FundId]
ORDER BY [t].[Id], [t].[Id0], [t0].[Id], [t0].[Id0], [t1].[Id], [t1].[Id0], [t1].[Id1]
2023-07-16 18:27:53.043 +07:00 [INF] Executing OkObjectResult, writing value of type 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetResponse'.
2023-07-16 18:27:53.043 +07:00 [INF] Executed action hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web) in 44.2941ms
2023-07-16 18:27:53.043 +07:00 [INF] Executed endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web)'
2023-07-16 18:27:53.043 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:57678/funds/2 application/json - - 200 - application/json;+charset=utf-8 45.5153ms
2023-07-16 21:25:17.921 +07:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-16 21:25:17.971 +07:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-07-16 21:25:18.105 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Funds] AS [f]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-16 21:25:18.119 +07:00 [INF] User profile is available. Using 'C:\Users\khang\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-07-16 21:25:18.196 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2023-07-16 21:25:18.196 +07:00 [INF] Hosting environment: Development
2023-07-16 21:25:18.196 +07:00 [INF] Content root path: C:\Users\khang\Desktop\Hui_Management\hui_management_backend\src\hui_management_backend.Web
2023-07-16 21:25:18.206 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:57678/ - -
2023-07-16 21:25:18.289 +07:00 [WRN] Failed to determine the https port for redirect.
2023-07-16 21:25:18.318 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:57678/ - - - 404 - - 112.9901ms
2023-07-16 21:27:31.769 +07:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:57678/login - -
2023-07-16 21:27:31.791 +07:00 [INF] CORS policy execution successful.
2023-07-16 21:27:31.803 +07:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:57678/login - - - 204 - - 34.0757ms
2023-07-16 21:27:31.805 +07:00 [INF] Request starting HTTP/1.1 POST http://localhost:57678/login application/json;+charset=utf-8 51
2023-07-16 21:27:31.808 +07:00 [INF] CORS policy execution successful.
2023-07-16 21:27:31.814 +07:00 [INF] Executing endpoint 'hui_management_backend.Web.Endpoints.AuthenticationEndpoints.Login.HandleAsync (hui_management_backend.Web)'
2023-07-16 21:27:31.857 +07:00 [INF] Route matched with {action = "Handle", controller = "Login"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[hui_management_backend.Web.Endpoints.AuthenticationEndpoints.LoginResponse]] HandleAsync(hui_management_backend.Web.Endpoints.AuthenticationEndpoints.LoginRequest, System.Threading.CancellationToken) on controller hui_management_backend.Web.Endpoints.AuthenticationEndpoints.Login (hui_management_backend.Web).
2023-07-16 21:27:32.337 +07:00 [INF] Executed DbCommand (127ms) [Parameters=[@__phonenumber_0='?' (Size = 450), @__password_1='?' (Size = 4000)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [u].[Id], [u].[AdditionalInfo], [u].[Address], [u].[BankName], [u].[BankNumber], [u].[Email], [u].[Name], [u].[Password], [u].[PhoneNumber], [u].[Role]
FROM [User] AS [u]
WHERE [u].[PhoneNumber] = @__phonenumber_0 AND [u].[Password] = @__password_1
2023-07-16 21:27:32.790 +07:00 [INF] Executing OkObjectResult, writing value of type 'hui_management_backend.Web.Endpoints.AuthenticationEndpoints.LoginResponse'.
2023-07-16 21:27:32.818 +07:00 [INF] Executed action hui_management_backend.Web.Endpoints.AuthenticationEndpoints.Login.HandleAsync (hui_management_backend.Web) in 958.4418ms
2023-07-16 21:27:32.819 +07:00 [INF] Executed endpoint 'hui_management_backend.Web.Endpoints.AuthenticationEndpoints.Login.HandleAsync (hui_management_backend.Web)'
2023-07-16 21:27:32.828 +07:00 [INF] Request finished HTTP/1.1 POST http://localhost:57678/login application/json;+charset=utf-8 51 - 200 - application/json;+charset=utf-8 1023.1236ms
2023-07-16 21:27:34.390 +07:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:57678/funds - -
2023-07-16 21:27:34.392 +07:00 [INF] CORS policy execution successful.
2023-07-16 21:27:34.392 +07:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:57678/funds - - - 204 - - 2.0167ms
2023-07-16 21:27:34.397 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:57678/funds application/json -
2023-07-16 21:27:34.436 +07:00 [INF] CORS policy execution successful.
2023-07-16 21:27:34.437 +07:00 [INF] Executing endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAll.HandleAsync (hui_management_backend.Web)'
2023-07-16 21:27:34.440 +07:00 [INF] Route matched with {action = "Handle", controller = "FundGetAll"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAllResponse]] HandleAsync(System.Threading.CancellationToken) on controller hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAll (hui_management_backend.Web).
2023-07-16 21:27:34.596 +07:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2023-07-16 21:27:34.608 +07:00 [INF] Executed DbCommand (7ms) [Parameters=[@__ownerId_0='?' (DbType = Int32), @__isArchived_1='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [f].[Id], [f].[FundPrice], [f].[IsArchived], [f].[Name], [f].[OpenDate], [f].[OpenDateText], [f].[OwnerId], [f].[ServiceCost], [u].[Id], [u].[AdditionalInfo], [u].[Address], [u].[BankName], [u].[BankNumber], [u].[Email], [u].[Name], [u].[Password], [u].[PhoneNumber], [u].[Role], [f0].[Id], [f0].[FundId], [f0].[NickName], [f0].[UserId], [f1].[Id], [f1].[FundId], [f1].[sessionNumber], [f1].[takenDate]
FROM [Funds] AS [f]
INNER JOIN [User] AS [u] ON [f].[OwnerId] = [u].[Id]
LEFT JOIN [FundMember] AS [f0] ON [f].[Id] = [f0].[FundId]
LEFT JOIN [FundSession] AS [f1] ON [f].[Id] = [f1].[FundId]
WHERE [u].[Id] = @__ownerId_0 AND [f].[IsArchived] = @__isArchived_1
ORDER BY [f].[Id], [u].[Id], [f0].[Id]
2023-07-16 21:27:34.653 +07:00 [INF] Executing OkObjectResult, writing value of type 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAllResponse'.
2023-07-16 21:27:34.673 +07:00 [INF] Executed action hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAll.HandleAsync (hui_management_backend.Web) in 233.054ms
2023-07-16 21:27:34.673 +07:00 [INF] Executed endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAll.HandleAsync (hui_management_backend.Web)'
2023-07-16 21:27:34.674 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:57678/funds application/json - - 200 - application/json;+charset=utf-8 277.0606ms
2023-07-16 21:27:35.454 +07:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:57678/funds/1 - -
2023-07-16 21:27:35.455 +07:00 [INF] CORS policy execution successful.
2023-07-16 21:27:35.456 +07:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:57678/funds/1 - - - 204 - - 1.4626ms
2023-07-16 21:27:35.460 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:57678/funds/1 application/json -
2023-07-16 21:27:35.462 +07:00 [INF] CORS policy execution successful.
2023-07-16 21:27:35.463 +07:00 [INF] Executing endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web)'
2023-07-16 21:27:35.467 +07:00 [INF] Route matched with {action = "Handle", controller = "FundGet"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[hui_management_backend.Web.Endpoints.FundEndpoints.FundGetResponse]] HandleAsync(hui_management_backend.Web.Endpoints.FundEndpoints.FundGetRequest, System.Threading.CancellationToken) on controller hui_management_backend.Web.Endpoints.FundEndpoints.FundGet (hui_management_backend.Web).
2023-07-16 21:27:35.500 +07:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2023-07-16 21:27:35.515 +07:00 [INF] Executed DbCommand (10ms) [Parameters=[@__ownerId_0='?' (DbType = Int32), @__fundId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[FundPrice], [t].[IsArchived], [t].[Name], [t].[OpenDate], [t].[OpenDateText], [t].[OwnerId], [t].[ServiceCost], [t].[Id0], [t].[AdditionalInfo], [t].[Address], [t].[BankName], [t].[BankNumber], [t].[Email], [t].[Name0], [t].[Password], [t].[PhoneNumber], [t].[Role], [t0].[Id], [t0].[FundId], [t0].[NickName], [t0].[UserId], [t0].[Id0], [t0].[AdditionalInfo], [t0].[Address], [t0].[BankName], [t0].[BankNumber], [t0].[Email], [t0].[Name], [t0].[Password], [t0].[PhoneNumber], [t0].[Role], [t1].[Id], [t1].[FundId], [t1].[sessionNumber], [t1].[takenDate], [t1].[Id0], [t1].[fundAmount], [t1].[fundMemberId], [t1].[predictedPrice], [t1].[remainPrice], [t1].[serviceCost], [t1].[sessionId], [t1].[Id1], [t1].[FundId0], [t1].[NickName], [t1].[UserId], [t1].[Id2], [t1].[FundSessionId], [t1].[fundMemberId0], [t1].[payCost]
FROM (
    SELECT TOP(1) [f].[Id], [f].[FundPrice], [f].[IsArchived], [f].[Name], [f].[OpenDate], [f].[OpenDateText], [f].[OwnerId], [f].[ServiceCost], [u].[Id] AS [Id0], [u].[AdditionalInfo], [u].[Address], [u].[BankName], [u].[BankNumber], [u].[Email], [u].[Name] AS [Name0], [u].[Password], [u].[PhoneNumber], [u].[Role]
    FROM [Funds] AS [f]
    INNER JOIN [User] AS [u] ON [f].[OwnerId] = [u].[Id]
    WHERE [u].[Id] = @__ownerId_0 AND [f].[Id] = @__fundId_1
) AS [t]
LEFT JOIN (
    SELECT [f0].[Id], [f0].[FundId], [f0].[NickName], [f0].[UserId], [u0].[Id] AS [Id0], [u0].[AdditionalInfo], [u0].[Address], [u0].[BankName], [u0].[BankNumber], [u0].[Email], [u0].[Name], [u0].[Password], [u0].[PhoneNumber], [u0].[Role]
    FROM [FundMember] AS [f0]
    INNER JOIN [User] AS [u0] ON [f0].[UserId] = [u0].[Id]
) AS [t0] ON [t].[Id] = [t0].[FundId]
LEFT JOIN (
    SELECT [f1].[Id], [f1].[FundId], [f1].[sessionNumber], [f1].[takenDate], [t2].[Id] AS [Id0], [t2].[fundAmount], [t2].[fundMemberId], [t2].[predictedPrice], [t2].[remainPrice], [t2].[serviceCost], [t2].[sessionId], [f2].[Id] AS [Id1], [f2].[FundId] AS [FundId0], [f2].[NickName], [f2].[UserId], [n].[Id] AS [Id2], [n].[FundSessionId], [n].[fundMemberId] AS [fundMemberId0], [n].[payCost]
    FROM [FundSession] AS [f1]
    LEFT JOIN [TakenSessionDetail] AS [t2] ON [f1].[Id] = [t2].[sessionId]
    LEFT JOIN [FundMember] AS [f2] ON [t2].[fundMemberId] = [f2].[Id]
    LEFT JOIN [NormalSessionDetail] AS [n] ON [f1].[Id] = [n].[FundSessionId]
) AS [t1] ON [t].[Id] = [t1].[FundId]
ORDER BY [t].[Id], [t].[Id0], [t0].[Id], [t0].[Id0], [t1].[Id], [t1].[Id0], [t1].[Id1]
2023-07-16 21:27:35.536 +07:00 [INF] Executing OkObjectResult, writing value of type 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetResponse'.
2023-07-16 21:27:35.545 +07:00 [INF] Executed action hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web) in 77.2694ms
2023-07-16 21:27:35.545 +07:00 [INF] Executed endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web)'
2023-07-16 21:27:35.545 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:57678/funds/1 application/json - - 200 - application/json;+charset=utf-8 84.7307ms
2023-07-16 21:27:46.345 +07:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:57678/funds/1/sessions/add - -
2023-07-16 21:27:46.346 +07:00 [INF] CORS policy execution successful.
2023-07-16 21:27:46.347 +07:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:57678/funds/1/sessions/add - - - 204 - - 1.2565ms
2023-07-16 21:27:46.350 +07:00 [INF] Request starting HTTP/1.1 POST http://localhost:57678/funds/1/sessions/add application/json 34
2023-07-16 21:27:46.352 +07:00 [INF] CORS policy execution successful.
2023-07-16 21:27:46.352 +07:00 [INF] Executing endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSession.HandleAsync (hui_management_backend.Web)'
2023-07-16 21:27:46.355 +07:00 [INF] Route matched with {action = "Handle", controller = "FundAddSession"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] HandleAsync(hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSessionRequest, System.Threading.CancellationToken) on controller hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSession (hui_management_backend.Web).
2023-07-16 21:27:46.376 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__ownerId_0='?' (DbType = Int32), @__fundId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[FundPrice], [t].[IsArchived], [t].[Name], [t].[OpenDate], [t].[OpenDateText], [t].[OwnerId], [t].[ServiceCost], [t].[Id0], [t].[AdditionalInfo], [t].[Address], [t].[BankName], [t].[BankNumber], [t].[Email], [t].[Name0], [t].[Password], [t].[PhoneNumber], [t].[Role], [t0].[Id], [t0].[FundId], [t0].[NickName], [t0].[UserId], [t0].[Id0], [t0].[AdditionalInfo], [t0].[Address], [t0].[BankName], [t0].[BankNumber], [t0].[Email], [t0].[Name], [t0].[Password], [t0].[PhoneNumber], [t0].[Role], [t1].[Id], [t1].[FundId], [t1].[sessionNumber], [t1].[takenDate], [t1].[Id0], [t1].[fundAmount], [t1].[fundMemberId], [t1].[predictedPrice], [t1].[remainPrice], [t1].[serviceCost], [t1].[sessionId], [t1].[Id1], [t1].[FundId0], [t1].[NickName], [t1].[UserId], [t1].[Id2], [t1].[FundSessionId], [t1].[fundMemberId0], [t1].[payCost]
FROM (
    SELECT TOP(1) [f].[Id], [f].[FundPrice], [f].[IsArchived], [f].[Name], [f].[OpenDate], [f].[OpenDateText], [f].[OwnerId], [f].[ServiceCost], [u].[Id] AS [Id0], [u].[AdditionalInfo], [u].[Address], [u].[BankName], [u].[BankNumber], [u].[Email], [u].[Name] AS [Name0], [u].[Password], [u].[PhoneNumber], [u].[Role]
    FROM [Funds] AS [f]
    INNER JOIN [User] AS [u] ON [f].[OwnerId] = [u].[Id]
    WHERE [u].[Id] = @__ownerId_0 AND [f].[Id] = @__fundId_1
) AS [t]
LEFT JOIN (
    SELECT [f0].[Id], [f0].[FundId], [f0].[NickName], [f0].[UserId], [u0].[Id] AS [Id0], [u0].[AdditionalInfo], [u0].[Address], [u0].[BankName], [u0].[BankNumber], [u0].[Email], [u0].[Name], [u0].[Password], [u0].[PhoneNumber], [u0].[Role]
    FROM [FundMember] AS [f0]
    INNER JOIN [User] AS [u0] ON [f0].[UserId] = [u0].[Id]
) AS [t0] ON [t].[Id] = [t0].[FundId]
LEFT JOIN (
    SELECT [f1].[Id], [f1].[FundId], [f1].[sessionNumber], [f1].[takenDate], [t2].[Id] AS [Id0], [t2].[fundAmount], [t2].[fundMemberId], [t2].[predictedPrice], [t2].[remainPrice], [t2].[serviceCost], [t2].[sessionId], [f2].[Id] AS [Id1], [f2].[FundId] AS [FundId0], [f2].[NickName], [f2].[UserId], [n].[Id] AS [Id2], [n].[FundSessionId], [n].[fundMemberId] AS [fundMemberId0], [n].[payCost]
    FROM [FundSession] AS [f1]
    LEFT JOIN [TakenSessionDetail] AS [t2] ON [f1].[Id] = [t2].[sessionId]
    LEFT JOIN [FundMember] AS [f2] ON [t2].[fundMemberId] = [f2].[Id]
    LEFT JOIN [NormalSessionDetail] AS [n] ON [f1].[Id] = [n].[FundSessionId]
) AS [t1] ON [t].[Id] = [t1].[FundId]
ORDER BY [t].[Id], [t].[Id0], [t0].[Id], [t0].[Id0], [t1].[Id], [t1].[Id0], [t1].[Id1]
2023-07-16 21:27:46.515 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = DateTimeOffset), @p10='?' (DbType = Int32), @p3='?' (DbType = Double), @p4='?' (DbType = Boolean), @p5='?' (Size = 4000), @p6='?' (DbType = DateTimeOffset), @p7='?' (Size = 4000), @p8='?' (DbType = Int32), @p9='?' (DbType = Double)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [FundSession] ([FundId], [sessionNumber], [takenDate])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2);
UPDATE [Funds] SET [FundPrice] = @p3, [IsArchived] = @p4, [Name] = @p5, [OpenDate] = @p6, [OpenDateText] = @p7, [OwnerId] = @p8, [ServiceCost] = @p9
OUTPUT 1
WHERE [Id] = @p10;
2023-07-16 21:27:46.534 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@p11='?' (DbType = Int32), @p12='?' (DbType = Int32), @p13='?' (DbType = Double), @p14='?' (DbType = Double), @p15='?' (DbType = Int32), @p16='?' (DbType = Double), @p17='?' (DbType = Double), @p18='?' (DbType = Double), @p19='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [NormalSessionDetail] ([FundSessionId], [fundMemberId], [payCost])
OUTPUT INSERTED.[Id]
VALUES (@p11, @p12, @p13);
INSERT INTO [TakenSessionDetail] ([fundAmount], [fundMemberId], [predictedPrice], [remainPrice], [serviceCost], [sessionId])
OUTPUT INSERTED.[Id]
VALUES (@p14, @p15, @p16, @p17, @p18, @p19);
2023-07-16 21:27:46.573 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__dateTimeOffset_Date_0='?' (DbType = DateTime2), @__ownerId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[CreateAt], [p].[OwnerId], [p].[Status]
FROM [Payment] AS [p]
WHERE CONVERT(date, [p].[CreateAt]) = @__dateTimeOffset_Date_0 AND [p].[OwnerId] = @__ownerId_1
2023-07-16 21:27:46.593 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = DateTimeOffset), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
INSERT INTO [Payment] ([CreateAt], [OwnerId], [Status])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2);
2023-07-16 21:27:46.600 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__dateTimeOffset_Date_0='?' (DbType = DateTime2), @__ownerId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[CreateAt], [p].[OwnerId], [p].[Status]
FROM [Payment] AS [p]
WHERE CONVERT(date, [p].[CreateAt]) = @__dateTimeOffset_Date_0 AND [p].[OwnerId] = @__ownerId_1
2023-07-16 21:27:46.615 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Double), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTimeOffset), @p6='?' (DbType = Int32), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [FundBill] ([Amount], [PaymentId], [Status], [Type], [fromFundId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4);
INSERT INTO [Payment] ([CreateAt], [OwnerId], [Status])
OUTPUT INSERTED.[Id]
VALUES (@p5, @p6, @p7);
2023-07-16 21:27:46.627 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Double), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p8='?' (DbType = Int32), @p5='?' (DbType = DateTimeOffset), @p6='?' (DbType = Int32), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [FundBill] ([Amount], [PaymentId], [Status], [Type], [fromFundId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4);
UPDATE [Payment] SET [CreateAt] = @p5, [OwnerId] = @p6, [Status] = @p7
OUTPUT 1
WHERE [Id] = @p8;
2023-07-16 21:27:46.632 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@p3='?' (DbType = Int32), @p0='?' (DbType = DateTimeOffset), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Payment] SET [CreateAt] = @p0, [OwnerId] = @p1, [Status] = @p2
OUTPUT 1
WHERE [Id] = @p3;
2023-07-16 21:27:46.747 +07:00 [INF] Executed action hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSession.HandleAsync (hui_management_backend.Web) in 391.5673ms
2023-07-16 21:27:46.748 +07:00 [INF] Executed endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSession.HandleAsync (hui_management_backend.Web)'
2023-07-16 21:27:46.750 +07:00 [ERR] An unhandled exception has occurred while executing the request.
System.Exception: test unit of work
   at hui_management_backend.Core.PaymentAggregate.Handlers.NewFundSessionAddedHandler.Handle(NewFundSessionAddedEvent notification, CancellationToken cancellationToken) in C:\Users\khang\Desktop\Hui_Management\hui_management_backend\src\hui_management_backend.Core\PaymentAggregate\Handlers\NewFundSessionAddedHandler.cs:line 58
   at MediatR.NotificationPublishers.ForeachAwaitPublisher.Publish(IEnumerable`1 handlerExecutors, INotification notification, CancellationToken cancellationToken)
   at hui_management_backend.Core.Services.AddSessionFundService.AddSession(Int32 fundId, Int32 ownerId, Int32 memberId, Double predictedPrice) in C:\Users\khang\Desktop\Hui_Management\hui_management_backend\src\hui_management_backend.Core\Services\AddSessionFundService.cs:line 90
   at hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSession.HandleAsync(FundAddSessionRequest request, CancellationToken cancellationToken) in C:\Users\khang\Desktop\Hui_Management\hui_management_backend\src\hui_management_backend.Web\Endpoints\FundEndpoints\FundAddSession.cs:line 36
   at lambda_method665(Closure, Object)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Ardalis.ListStartupServices.ShowAllServicesMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-07-16 21:27:46.796 +07:00 [INF] Request finished HTTP/1.1 POST http://localhost:57678/funds/1/sessions/add application/json 34 - 500 - text/plain;+charset=utf-8 445.4440ms
2023-07-16 21:28:15.589 +07:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:57678/funds - -
2023-07-16 21:28:15.590 +07:00 [INF] CORS policy execution successful.
2023-07-16 21:28:15.590 +07:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:57678/funds - - - 204 - - 1.0062ms
2023-07-16 21:28:15.591 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:57678/funds application/json -
2023-07-16 21:28:15.591 +07:00 [INF] CORS policy execution successful.
2023-07-16 21:28:15.592 +07:00 [INF] Executing endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAll.HandleAsync (hui_management_backend.Web)'
2023-07-16 21:28:15.592 +07:00 [INF] Route matched with {action = "Handle", controller = "FundGetAll"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAllResponse]] HandleAsync(System.Threading.CancellationToken) on controller hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAll (hui_management_backend.Web).
2023-07-16 21:28:15.597 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__ownerId_0='?' (DbType = Int32), @__isArchived_1='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [f].[Id], [f].[FundPrice], [f].[IsArchived], [f].[Name], [f].[OpenDate], [f].[OpenDateText], [f].[OwnerId], [f].[ServiceCost], [u].[Id], [u].[AdditionalInfo], [u].[Address], [u].[BankName], [u].[BankNumber], [u].[Email], [u].[Name], [u].[Password], [u].[PhoneNumber], [u].[Role], [f0].[Id], [f0].[FundId], [f0].[NickName], [f0].[UserId], [f1].[Id], [f1].[FundId], [f1].[sessionNumber], [f1].[takenDate]
FROM [Funds] AS [f]
INNER JOIN [User] AS [u] ON [f].[OwnerId] = [u].[Id]
LEFT JOIN [FundMember] AS [f0] ON [f].[Id] = [f0].[FundId]
LEFT JOIN [FundSession] AS [f1] ON [f].[Id] = [f1].[FundId]
WHERE [u].[Id] = @__ownerId_0 AND [f].[IsArchived] = @__isArchived_1
ORDER BY [f].[Id], [u].[Id], [f0].[Id]
2023-07-16 21:28:15.599 +07:00 [INF] Executing OkObjectResult, writing value of type 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAllResponse'.
2023-07-16 21:28:15.599 +07:00 [INF] Executed action hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAll.HandleAsync (hui_management_backend.Web) in 7.327ms
2023-07-16 21:28:15.599 +07:00 [INF] Executed endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAll.HandleAsync (hui_management_backend.Web)'
2023-07-16 21:28:15.600 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:57678/funds application/json - - 200 - application/json;+charset=utf-8 8.5464ms
2023-07-16 21:28:16.462 +07:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:57678/funds/1 - -
2023-07-16 21:28:16.462 +07:00 [INF] CORS policy execution successful.
2023-07-16 21:28:16.462 +07:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:57678/funds/1 - - - 204 - - 0.7739ms
2023-07-16 21:28:16.467 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:57678/funds/1 application/json -
2023-07-16 21:28:16.468 +07:00 [INF] CORS policy execution successful.
2023-07-16 21:28:16.468 +07:00 [INF] Executing endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web)'
2023-07-16 21:28:16.469 +07:00 [INF] Route matched with {action = "Handle", controller = "FundGet"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[hui_management_backend.Web.Endpoints.FundEndpoints.FundGetResponse]] HandleAsync(hui_management_backend.Web.Endpoints.FundEndpoints.FundGetRequest, System.Threading.CancellationToken) on controller hui_management_backend.Web.Endpoints.FundEndpoints.FundGet (hui_management_backend.Web).
2023-07-16 21:28:16.479 +07:00 [INF] Executed DbCommand (9ms) [Parameters=[@__ownerId_0='?' (DbType = Int32), @__fundId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[FundPrice], [t].[IsArchived], [t].[Name], [t].[OpenDate], [t].[OpenDateText], [t].[OwnerId], [t].[ServiceCost], [t].[Id0], [t].[AdditionalInfo], [t].[Address], [t].[BankName], [t].[BankNumber], [t].[Email], [t].[Name0], [t].[Password], [t].[PhoneNumber], [t].[Role], [t0].[Id], [t0].[FundId], [t0].[NickName], [t0].[UserId], [t0].[Id0], [t0].[AdditionalInfo], [t0].[Address], [t0].[BankName], [t0].[BankNumber], [t0].[Email], [t0].[Name], [t0].[Password], [t0].[PhoneNumber], [t0].[Role], [t1].[Id], [t1].[FundId], [t1].[sessionNumber], [t1].[takenDate], [t1].[Id0], [t1].[fundAmount], [t1].[fundMemberId], [t1].[predictedPrice], [t1].[remainPrice], [t1].[serviceCost], [t1].[sessionId], [t1].[Id1], [t1].[FundId0], [t1].[NickName], [t1].[UserId], [t1].[Id2], [t1].[FundSessionId], [t1].[fundMemberId0], [t1].[payCost]
FROM (
    SELECT TOP(1) [f].[Id], [f].[FundPrice], [f].[IsArchived], [f].[Name], [f].[OpenDate], [f].[OpenDateText], [f].[OwnerId], [f].[ServiceCost], [u].[Id] AS [Id0], [u].[AdditionalInfo], [u].[Address], [u].[BankName], [u].[BankNumber], [u].[Email], [u].[Name] AS [Name0], [u].[Password], [u].[PhoneNumber], [u].[Role]
    FROM [Funds] AS [f]
    INNER JOIN [User] AS [u] ON [f].[OwnerId] = [u].[Id]
    WHERE [u].[Id] = @__ownerId_0 AND [f].[Id] = @__fundId_1
) AS [t]
LEFT JOIN (
    SELECT [f0].[Id], [f0].[FundId], [f0].[NickName], [f0].[UserId], [u0].[Id] AS [Id0], [u0].[AdditionalInfo], [u0].[Address], [u0].[BankName], [u0].[BankNumber], [u0].[Email], [u0].[Name], [u0].[Password], [u0].[PhoneNumber], [u0].[Role]
    FROM [FundMember] AS [f0]
    INNER JOIN [User] AS [u0] ON [f0].[UserId] = [u0].[Id]
) AS [t0] ON [t].[Id] = [t0].[FundId]
LEFT JOIN (
    SELECT [f1].[Id], [f1].[FundId], [f1].[sessionNumber], [f1].[takenDate], [t2].[Id] AS [Id0], [t2].[fundAmount], [t2].[fundMemberId], [t2].[predictedPrice], [t2].[remainPrice], [t2].[serviceCost], [t2].[sessionId], [f2].[Id] AS [Id1], [f2].[FundId] AS [FundId0], [f2].[NickName], [f2].[UserId], [n].[Id] AS [Id2], [n].[FundSessionId], [n].[fundMemberId] AS [fundMemberId0], [n].[payCost]
    FROM [FundSession] AS [f1]
    LEFT JOIN [TakenSessionDetail] AS [t2] ON [f1].[Id] = [t2].[sessionId]
    LEFT JOIN [FundMember] AS [f2] ON [t2].[fundMemberId] = [f2].[Id]
    LEFT JOIN [NormalSessionDetail] AS [n] ON [f1].[Id] = [n].[FundSessionId]
) AS [t1] ON [t].[Id] = [t1].[FundId]
ORDER BY [t].[Id], [t].[Id0], [t0].[Id], [t0].[Id0], [t1].[Id], [t1].[Id0], [t1].[Id1]
2023-07-16 21:28:16.497 +07:00 [INF] Executing OkObjectResult, writing value of type 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetResponse'.
2023-07-16 21:28:16.501 +07:00 [INF] Executed action hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web) in 31.9035ms
2023-07-16 21:28:16.501 +07:00 [INF] Executed endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web)'
2023-07-16 21:28:16.501 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:57678/funds/1 application/json - - 200 - application/json;+charset=utf-8 33.4328ms
2023-07-16 21:28:42.714 +07:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-16 21:28:42.754 +07:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-07-16 21:28:42.875 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Funds] AS [f]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-16 21:28:42.888 +07:00 [INF] User profile is available. Using 'C:\Users\khang\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-07-16 21:28:42.961 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2023-07-16 21:28:42.961 +07:00 [INF] Hosting environment: Development
2023-07-16 21:28:42.961 +07:00 [INF] Content root path: C:\Users\khang\Desktop\Hui_Management\hui_management_backend\src\hui_management_backend.Web
2023-07-16 21:28:42.970 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:57678/ - -
2023-07-16 21:28:43.040 +07:00 [WRN] Failed to determine the https port for redirect.
2023-07-16 21:28:43.064 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:57678/ - - - 404 - - 94.7983ms
2023-07-16 21:28:50.744 +07:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:57678/funds - -
2023-07-16 21:28:50.749 +07:00 [INF] CORS policy execution successful.
2023-07-16 21:28:50.752 +07:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:57678/funds - - - 204 - - 7.9435ms
2023-07-16 21:28:50.756 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:57678/funds application/json -
2023-07-16 21:28:50.861 +07:00 [INF] CORS policy execution successful.
2023-07-16 21:28:50.863 +07:00 [INF] Executing endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAll.HandleAsync (hui_management_backend.Web)'
2023-07-16 21:28:50.878 +07:00 [INF] Route matched with {action = "Handle", controller = "FundGetAll"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAllResponse]] HandleAsync(System.Threading.CancellationToken) on controller hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAll (hui_management_backend.Web).
2023-07-16 21:28:51.129 +07:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2023-07-16 21:28:51.177 +07:00 [INF] Executed DbCommand (24ms) [Parameters=[@__ownerId_0='?' (DbType = Int32), @__isArchived_1='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [f].[Id], [f].[FundPrice], [f].[IsArchived], [f].[Name], [f].[OpenDate], [f].[OpenDateText], [f].[OwnerId], [f].[ServiceCost], [u].[Id], [u].[AdditionalInfo], [u].[Address], [u].[BankName], [u].[BankNumber], [u].[Email], [u].[Name], [u].[Password], [u].[PhoneNumber], [u].[Role], [f0].[Id], [f0].[FundId], [f0].[NickName], [f0].[UserId], [f1].[Id], [f1].[FundId], [f1].[sessionNumber], [f1].[takenDate]
FROM [Funds] AS [f]
INNER JOIN [User] AS [u] ON [f].[OwnerId] = [u].[Id]
LEFT JOIN [FundMember] AS [f0] ON [f].[Id] = [f0].[FundId]
LEFT JOIN [FundSession] AS [f1] ON [f].[Id] = [f1].[FundId]
WHERE [u].[Id] = @__ownerId_0 AND [f].[IsArchived] = @__isArchived_1
ORDER BY [f].[Id], [u].[Id], [f0].[Id]
2023-07-16 21:28:51.296 +07:00 [INF] Executing OkObjectResult, writing value of type 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAllResponse'.
2023-07-16 21:28:51.331 +07:00 [INF] Executed action hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAll.HandleAsync (hui_management_backend.Web) in 451.293ms
2023-07-16 21:28:51.332 +07:00 [INF] Executed endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAll.HandleAsync (hui_management_backend.Web)'
2023-07-16 21:28:51.336 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:57678/funds application/json - - 200 - application/json;+charset=utf-8 580.6536ms
2023-07-16 21:28:52.260 +07:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:57678/funds/1 - -
2023-07-16 21:28:52.261 +07:00 [INF] CORS policy execution successful.
2023-07-16 21:28:52.261 +07:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:57678/funds/1 - - - 204 - - 1.7819ms
2023-07-16 21:28:52.265 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:57678/funds/1 application/json -
2023-07-16 21:28:52.267 +07:00 [INF] CORS policy execution successful.
2023-07-16 21:28:52.267 +07:00 [INF] Executing endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web)'
2023-07-16 21:28:52.272 +07:00 [INF] Route matched with {action = "Handle", controller = "FundGet"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[hui_management_backend.Web.Endpoints.FundEndpoints.FundGetResponse]] HandleAsync(hui_management_backend.Web.Endpoints.FundEndpoints.FundGetRequest, System.Threading.CancellationToken) on controller hui_management_backend.Web.Endpoints.FundEndpoints.FundGet (hui_management_backend.Web).
2023-07-16 21:28:52.313 +07:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2023-07-16 21:28:52.323 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ownerId_0='?' (DbType = Int32), @__fundId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[FundPrice], [t].[IsArchived], [t].[Name], [t].[OpenDate], [t].[OpenDateText], [t].[OwnerId], [t].[ServiceCost], [t].[Id0], [t].[AdditionalInfo], [t].[Address], [t].[BankName], [t].[BankNumber], [t].[Email], [t].[Name0], [t].[Password], [t].[PhoneNumber], [t].[Role], [t0].[Id], [t0].[FundId], [t0].[NickName], [t0].[UserId], [t0].[Id0], [t0].[AdditionalInfo], [t0].[Address], [t0].[BankName], [t0].[BankNumber], [t0].[Email], [t0].[Name], [t0].[Password], [t0].[PhoneNumber], [t0].[Role], [t1].[Id], [t1].[FundId], [t1].[sessionNumber], [t1].[takenDate], [t1].[Id0], [t1].[fundAmount], [t1].[fundMemberId], [t1].[predictedPrice], [t1].[remainPrice], [t1].[serviceCost], [t1].[sessionId], [t1].[Id1], [t1].[FundId0], [t1].[NickName], [t1].[UserId], [t1].[Id2], [t1].[FundSessionId], [t1].[fundMemberId0], [t1].[payCost]
FROM (
    SELECT TOP(1) [f].[Id], [f].[FundPrice], [f].[IsArchived], [f].[Name], [f].[OpenDate], [f].[OpenDateText], [f].[OwnerId], [f].[ServiceCost], [u].[Id] AS [Id0], [u].[AdditionalInfo], [u].[Address], [u].[BankName], [u].[BankNumber], [u].[Email], [u].[Name] AS [Name0], [u].[Password], [u].[PhoneNumber], [u].[Role]
    FROM [Funds] AS [f]
    INNER JOIN [User] AS [u] ON [f].[OwnerId] = [u].[Id]
    WHERE [u].[Id] = @__ownerId_0 AND [f].[Id] = @__fundId_1
) AS [t]
LEFT JOIN (
    SELECT [f0].[Id], [f0].[FundId], [f0].[NickName], [f0].[UserId], [u0].[Id] AS [Id0], [u0].[AdditionalInfo], [u0].[Address], [u0].[BankName], [u0].[BankNumber], [u0].[Email], [u0].[Name], [u0].[Password], [u0].[PhoneNumber], [u0].[Role]
    FROM [FundMember] AS [f0]
    INNER JOIN [User] AS [u0] ON [f0].[UserId] = [u0].[Id]
) AS [t0] ON [t].[Id] = [t0].[FundId]
LEFT JOIN (
    SELECT [f1].[Id], [f1].[FundId], [f1].[sessionNumber], [f1].[takenDate], [t2].[Id] AS [Id0], [t2].[fundAmount], [t2].[fundMemberId], [t2].[predictedPrice], [t2].[remainPrice], [t2].[serviceCost], [t2].[sessionId], [f2].[Id] AS [Id1], [f2].[FundId] AS [FundId0], [f2].[NickName], [f2].[UserId], [n].[Id] AS [Id2], [n].[FundSessionId], [n].[fundMemberId] AS [fundMemberId0], [n].[payCost]
    FROM [FundSession] AS [f1]
    LEFT JOIN [TakenSessionDetail] AS [t2] ON [f1].[Id] = [t2].[sessionId]
    LEFT JOIN [FundMember] AS [f2] ON [t2].[fundMemberId] = [f2].[Id]
    LEFT JOIN [NormalSessionDetail] AS [n] ON [f1].[Id] = [n].[FundSessionId]
) AS [t1] ON [t].[Id] = [t1].[FundId]
ORDER BY [t].[Id], [t].[Id0], [t0].[Id], [t0].[Id0], [t1].[Id], [t1].[Id0], [t1].[Id1]
2023-07-16 21:28:52.352 +07:00 [INF] Executing OkObjectResult, writing value of type 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetResponse'.
2023-07-16 21:28:52.361 +07:00 [INF] Executed action hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web) in 89.076ms
2023-07-16 21:28:52.362 +07:00 [INF] Executed endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web)'
2023-07-16 21:28:52.362 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:57678/funds/1 application/json - - 200 - application/json;+charset=utf-8 96.9164ms
2023-07-16 21:29:00.755 +07:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:57678/funds/1/sessions/add - -
2023-07-16 21:29:00.756 +07:00 [INF] CORS policy execution successful.
2023-07-16 21:29:00.756 +07:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:57678/funds/1/sessions/add - - - 204 - - 1.1085ms
2023-07-16 21:29:00.757 +07:00 [INF] Request starting HTTP/1.1 POST http://localhost:57678/funds/1/sessions/add application/json 36
2023-07-16 21:29:00.758 +07:00 [INF] CORS policy execution successful.
2023-07-16 21:29:00.758 +07:00 [INF] Executing endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSession.HandleAsync (hui_management_backend.Web)'
2023-07-16 21:29:00.762 +07:00 [INF] Route matched with {action = "Handle", controller = "FundAddSession"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] HandleAsync(hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSessionRequest, System.Threading.CancellationToken) on controller hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSession (hui_management_backend.Web).
2023-07-16 21:29:00.776 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__ownerId_0='?' (DbType = Int32), @__fundId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[FundPrice], [t].[IsArchived], [t].[Name], [t].[OpenDate], [t].[OpenDateText], [t].[OwnerId], [t].[ServiceCost], [t].[Id0], [t].[AdditionalInfo], [t].[Address], [t].[BankName], [t].[BankNumber], [t].[Email], [t].[Name0], [t].[Password], [t].[PhoneNumber], [t].[Role], [t0].[Id], [t0].[FundId], [t0].[NickName], [t0].[UserId], [t0].[Id0], [t0].[AdditionalInfo], [t0].[Address], [t0].[BankName], [t0].[BankNumber], [t0].[Email], [t0].[Name], [t0].[Password], [t0].[PhoneNumber], [t0].[Role], [t1].[Id], [t1].[FundId], [t1].[sessionNumber], [t1].[takenDate], [t1].[Id0], [t1].[fundAmount], [t1].[fundMemberId], [t1].[predictedPrice], [t1].[remainPrice], [t1].[serviceCost], [t1].[sessionId], [t1].[Id1], [t1].[FundId0], [t1].[NickName], [t1].[UserId], [t1].[Id2], [t1].[FundSessionId], [t1].[fundMemberId0], [t1].[payCost]
FROM (
    SELECT TOP(1) [f].[Id], [f].[FundPrice], [f].[IsArchived], [f].[Name], [f].[OpenDate], [f].[OpenDateText], [f].[OwnerId], [f].[ServiceCost], [u].[Id] AS [Id0], [u].[AdditionalInfo], [u].[Address], [u].[BankName], [u].[BankNumber], [u].[Email], [u].[Name] AS [Name0], [u].[Password], [u].[PhoneNumber], [u].[Role]
    FROM [Funds] AS [f]
    INNER JOIN [User] AS [u] ON [f].[OwnerId] = [u].[Id]
    WHERE [u].[Id] = @__ownerId_0 AND [f].[Id] = @__fundId_1
) AS [t]
LEFT JOIN (
    SELECT [f0].[Id], [f0].[FundId], [f0].[NickName], [f0].[UserId], [u0].[Id] AS [Id0], [u0].[AdditionalInfo], [u0].[Address], [u0].[BankName], [u0].[BankNumber], [u0].[Email], [u0].[Name], [u0].[Password], [u0].[PhoneNumber], [u0].[Role]
    FROM [FundMember] AS [f0]
    INNER JOIN [User] AS [u0] ON [f0].[UserId] = [u0].[Id]
) AS [t0] ON [t].[Id] = [t0].[FundId]
LEFT JOIN (
    SELECT [f1].[Id], [f1].[FundId], [f1].[sessionNumber], [f1].[takenDate], [t2].[Id] AS [Id0], [t2].[fundAmount], [t2].[fundMemberId], [t2].[predictedPrice], [t2].[remainPrice], [t2].[serviceCost], [t2].[sessionId], [f2].[Id] AS [Id1], [f2].[FundId] AS [FundId0], [f2].[NickName], [f2].[UserId], [n].[Id] AS [Id2], [n].[FundSessionId], [n].[fundMemberId] AS [fundMemberId0], [n].[payCost]
    FROM [FundSession] AS [f1]
    LEFT JOIN [TakenSessionDetail] AS [t2] ON [f1].[Id] = [t2].[sessionId]
    LEFT JOIN [FundMember] AS [f2] ON [t2].[fundMemberId] = [f2].[Id]
    LEFT JOIN [NormalSessionDetail] AS [n] ON [f1].[Id] = [n].[FundSessionId]
) AS [t1] ON [t].[Id] = [t1].[FundId]
ORDER BY [t].[Id], [t].[Id0], [t0].[Id], [t0].[Id0], [t1].[Id], [t1].[Id0], [t1].[Id1]
2023-07-16 21:29:00.799 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__dateTimeOffset_Date_0='?' (DbType = DateTime2), @__ownerId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[CreateAt], [p].[OwnerId], [p].[Status]
FROM [Payment] AS [p]
WHERE CONVERT(date, [p].[CreateAt]) = @__dateTimeOffset_Date_0 AND [p].[OwnerId] = @__ownerId_1
2023-07-16 21:29:00.947 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = DateTimeOffset), @p3='?' (DbType = DateTimeOffset), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [FundSession] ([FundId], [sessionNumber], [takenDate])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2);
INSERT INTO [Payment] ([CreateAt], [OwnerId], [Status])
OUTPUT INSERTED.[Id]
VALUES (@p3, @p4, @p5);
2023-07-16 21:29:00.972 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@p6='?' (DbType = Int32), @p7='?' (DbType = Int32), @p8='?' (DbType = Double), @p9='?' (DbType = Double), @p10='?' (DbType = Int32), @p11='?' (DbType = Double), @p12='?' (DbType = Double), @p13='?' (DbType = Double), @p14='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [NormalSessionDetail] ([FundSessionId], [fundMemberId], [payCost])
OUTPUT INSERTED.[Id]
VALUES (@p6, @p7, @p8);
INSERT INTO [TakenSessionDetail] ([fundAmount], [fundMemberId], [predictedPrice], [remainPrice], [serviceCost], [sessionId])
OUTPUT INSERTED.[Id]
VALUES (@p9, @p10, @p11, @p12, @p13, @p14);
2023-07-16 21:29:00.993 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__dateTimeOffset_Date_0='?' (DbType = DateTime2), @__ownerId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[CreateAt], [p].[OwnerId], [p].[Status]
FROM [Payment] AS [p]
WHERE CONVERT(date, [p].[CreateAt]) = @__dateTimeOffset_Date_0 AND [p].[OwnerId] = @__ownerId_1
2023-07-16 21:29:01.007 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Double), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTimeOffset), @p6='?' (DbType = Int32), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [FundBill] ([Amount], [PaymentId], [Status], [Type], [fromFundId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4);
INSERT INTO [Payment] ([CreateAt], [OwnerId], [Status])
OUTPUT INSERTED.[Id]
VALUES (@p5, @p6, @p7);
2023-07-16 21:29:01.021 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Double), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p8='?' (DbType = Int32), @p5='?' (DbType = DateTimeOffset), @p6='?' (DbType = Int32), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [FundBill] ([Amount], [PaymentId], [Status], [Type], [fromFundId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4);
UPDATE [Payment] SET [CreateAt] = @p5, [OwnerId] = @p6, [Status] = @p7
OUTPUT 1
WHERE [Id] = @p8;
2023-07-16 21:29:01.026 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@p3='?' (DbType = Int32), @p0='?' (DbType = DateTimeOffset), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Payment] SET [CreateAt] = @p0, [OwnerId] = @p1, [Status] = @p2
OUTPUT 1
WHERE [Id] = @p3;
2023-07-16 21:29:01.072 +07:00 [INF] Executed action hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSession.HandleAsync (hui_management_backend.Web) in 310.3573ms
2023-07-16 21:29:01.073 +07:00 [INF] Executed endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSession.HandleAsync (hui_management_backend.Web)'
2023-07-16 21:29:01.074 +07:00 [ERR] An unhandled exception has occurred while executing the request.
System.Exception: test unit of work
   at hui_management_backend.Core.PaymentAggregate.Handlers.NewFundSessionAddedHandler.Handle(NewFundSessionAddedEvent notification, CancellationToken cancellationToken) in C:\Users\khang\Desktop\Hui_Management\hui_management_backend\src\hui_management_backend.Core\PaymentAggregate\Handlers\NewFundSessionAddedHandler.cs:line 58
   at MediatR.NotificationPublishers.ForeachAwaitPublisher.Publish(IEnumerable`1 handlerExecutors, INotification notification, CancellationToken cancellationToken)
   at hui_management_backend.Core.Services.AddSessionFundService.AddSession(Int32 fundId, Int32 ownerId, Int32 memberId, Double predictedPrice) in C:\Users\khang\Desktop\Hui_Management\hui_management_backend\src\hui_management_backend.Core\Services\AddSessionFundService.cs:line 88
   at hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSession.HandleAsync(FundAddSessionRequest request, CancellationToken cancellationToken) in C:\Users\khang\Desktop\Hui_Management\hui_management_backend\src\hui_management_backend.Web\Endpoints\FundEndpoints\FundAddSession.cs:line 36
   at lambda_method654(Closure, Object)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Ardalis.ListStartupServices.ShowAllServicesMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-07-16 21:29:01.103 +07:00 [INF] Request finished HTTP/1.1 POST http://localhost:57678/funds/1/sessions/add application/json 36 - 500 - text/plain;+charset=utf-8 346.4469ms
2023-07-16 21:29:28.311 +07:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:57678/funds - -
2023-07-16 21:29:28.311 +07:00 [INF] CORS policy execution successful.
2023-07-16 21:29:28.312 +07:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:57678/funds - - - 204 - - 1.2752ms
2023-07-16 21:29:28.313 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:57678/funds application/json -
2023-07-16 21:29:28.314 +07:00 [INF] CORS policy execution successful.
2023-07-16 21:29:28.314 +07:00 [INF] Executing endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAll.HandleAsync (hui_management_backend.Web)'
2023-07-16 21:29:28.314 +07:00 [INF] Route matched with {action = "Handle", controller = "FundGetAll"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAllResponse]] HandleAsync(System.Threading.CancellationToken) on controller hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAll (hui_management_backend.Web).
2023-07-16 21:29:28.319 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ownerId_0='?' (DbType = Int32), @__isArchived_1='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [f].[Id], [f].[FundPrice], [f].[IsArchived], [f].[Name], [f].[OpenDate], [f].[OpenDateText], [f].[OwnerId], [f].[ServiceCost], [u].[Id], [u].[AdditionalInfo], [u].[Address], [u].[BankName], [u].[BankNumber], [u].[Email], [u].[Name], [u].[Password], [u].[PhoneNumber], [u].[Role], [f0].[Id], [f0].[FundId], [f0].[NickName], [f0].[UserId], [f1].[Id], [f1].[FundId], [f1].[sessionNumber], [f1].[takenDate]
FROM [Funds] AS [f]
INNER JOIN [User] AS [u] ON [f].[OwnerId] = [u].[Id]
LEFT JOIN [FundMember] AS [f0] ON [f].[Id] = [f0].[FundId]
LEFT JOIN [FundSession] AS [f1] ON [f].[Id] = [f1].[FundId]
WHERE [u].[Id] = @__ownerId_0 AND [f].[IsArchived] = @__isArchived_1
ORDER BY [f].[Id], [u].[Id], [f0].[Id]
2023-07-16 21:29:28.323 +07:00 [INF] Executing OkObjectResult, writing value of type 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAllResponse'.
2023-07-16 21:29:28.324 +07:00 [INF] Executed action hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAll.HandleAsync (hui_management_backend.Web) in 9.4789ms
2023-07-16 21:29:28.324 +07:00 [INF] Executed endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAll.HandleAsync (hui_management_backend.Web)'
2023-07-16 21:29:28.324 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:57678/funds application/json - - 200 - application/json;+charset=utf-8 10.9157ms
2023-07-16 21:30:55.059 +07:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-16 21:30:55.099 +07:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-07-16 21:30:55.231 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Funds] AS [f]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-16 21:30:55.246 +07:00 [INF] User profile is available. Using 'C:\Users\khang\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-07-16 21:30:55.314 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2023-07-16 21:30:55.314 +07:00 [INF] Hosting environment: Development
2023-07-16 21:30:55.314 +07:00 [INF] Content root path: C:\Users\khang\Desktop\Hui_Management\hui_management_backend\src\hui_management_backend.Web
2023-07-16 21:30:55.323 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:57678/ - -
2023-07-16 21:30:55.389 +07:00 [WRN] Failed to determine the https port for redirect.
2023-07-16 21:30:55.412 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:57678/ - - - 404 - - 90.1260ms
2023-07-16 21:31:06.819 +07:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:57678/funds - -
2023-07-16 21:31:06.823 +07:00 [INF] CORS policy execution successful.
2023-07-16 21:31:06.826 +07:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:57678/funds - - - 204 - - 6.1642ms
2023-07-16 21:31:06.826 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:57678/funds application/json -
2023-07-16 21:31:06.928 +07:00 [INF] CORS policy execution successful.
2023-07-16 21:31:06.930 +07:00 [INF] Executing endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAll.HandleAsync (hui_management_backend.Web)'
2023-07-16 21:31:06.942 +07:00 [INF] Route matched with {action = "Handle", controller = "FundGetAll"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAllResponse]] HandleAsync(System.Threading.CancellationToken) on controller hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAll (hui_management_backend.Web).
2023-07-16 21:31:07.173 +07:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2023-07-16 21:31:07.219 +07:00 [INF] Executed DbCommand (24ms) [Parameters=[@__ownerId_0='?' (DbType = Int32), @__isArchived_1='?' (DbType = Boolean)], CommandType='"Text"', CommandTimeout='30']
SELECT [f].[Id], [f].[FundPrice], [f].[IsArchived], [f].[Name], [f].[OpenDate], [f].[OpenDateText], [f].[OwnerId], [f].[ServiceCost], [u].[Id], [u].[AdditionalInfo], [u].[Address], [u].[BankName], [u].[BankNumber], [u].[Email], [u].[Name], [u].[Password], [u].[PhoneNumber], [u].[Role], [f0].[Id], [f0].[FundId], [f0].[NickName], [f0].[UserId], [f1].[Id], [f1].[FundId], [f1].[sessionNumber], [f1].[takenDate]
FROM [Funds] AS [f]
INNER JOIN [User] AS [u] ON [f].[OwnerId] = [u].[Id]
LEFT JOIN [FundMember] AS [f0] ON [f].[Id] = [f0].[FundId]
LEFT JOIN [FundSession] AS [f1] ON [f].[Id] = [f1].[FundId]
WHERE [u].[Id] = @__ownerId_0 AND [f].[IsArchived] = @__isArchived_1
ORDER BY [f].[Id], [u].[Id], [f0].[Id]
2023-07-16 21:31:07.330 +07:00 [INF] Executing OkObjectResult, writing value of type 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAllResponse'.
2023-07-16 21:31:07.363 +07:00 [INF] Executed action hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAll.HandleAsync (hui_management_backend.Web) in 418.6043ms
2023-07-16 21:31:07.364 +07:00 [INF] Executed endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetAll.HandleAsync (hui_management_backend.Web)'
2023-07-16 21:31:07.368 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:57678/funds application/json - - 200 - application/json;+charset=utf-8 541.2782ms
2023-07-16 21:31:08.027 +07:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:57678/funds/1 - -
2023-07-16 21:31:08.028 +07:00 [INF] CORS policy execution successful.
2023-07-16 21:31:08.028 +07:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:57678/funds/1 - - - 204 - - 1.7747ms
2023-07-16 21:31:08.033 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:57678/funds/1 application/json -
2023-07-16 21:31:08.035 +07:00 [INF] CORS policy execution successful.
2023-07-16 21:31:08.035 +07:00 [INF] Executing endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web)'
2023-07-16 21:31:08.040 +07:00 [INF] Route matched with {action = "Handle", controller = "FundGet"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[hui_management_backend.Web.Endpoints.FundEndpoints.FundGetResponse]] HandleAsync(hui_management_backend.Web.Endpoints.FundEndpoints.FundGetRequest, System.Threading.CancellationToken) on controller hui_management_backend.Web.Endpoints.FundEndpoints.FundGet (hui_management_backend.Web).
2023-07-16 21:31:08.083 +07:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2023-07-16 21:31:08.090 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ownerId_0='?' (DbType = Int32), @__fundId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[FundPrice], [t].[IsArchived], [t].[Name], [t].[OpenDate], [t].[OpenDateText], [t].[OwnerId], [t].[ServiceCost], [t].[Id0], [t].[AdditionalInfo], [t].[Address], [t].[BankName], [t].[BankNumber], [t].[Email], [t].[Name0], [t].[Password], [t].[PhoneNumber], [t].[Role], [t0].[Id], [t0].[FundId], [t0].[NickName], [t0].[UserId], [t0].[Id0], [t0].[AdditionalInfo], [t0].[Address], [t0].[BankName], [t0].[BankNumber], [t0].[Email], [t0].[Name], [t0].[Password], [t0].[PhoneNumber], [t0].[Role], [t1].[Id], [t1].[FundId], [t1].[sessionNumber], [t1].[takenDate], [t1].[Id0], [t1].[fundAmount], [t1].[fundMemberId], [t1].[predictedPrice], [t1].[remainPrice], [t1].[serviceCost], [t1].[sessionId], [t1].[Id1], [t1].[FundId0], [t1].[NickName], [t1].[UserId], [t1].[Id2], [t1].[FundSessionId], [t1].[fundMemberId0], [t1].[payCost]
FROM (
    SELECT TOP(1) [f].[Id], [f].[FundPrice], [f].[IsArchived], [f].[Name], [f].[OpenDate], [f].[OpenDateText], [f].[OwnerId], [f].[ServiceCost], [u].[Id] AS [Id0], [u].[AdditionalInfo], [u].[Address], [u].[BankName], [u].[BankNumber], [u].[Email], [u].[Name] AS [Name0], [u].[Password], [u].[PhoneNumber], [u].[Role]
    FROM [Funds] AS [f]
    INNER JOIN [User] AS [u] ON [f].[OwnerId] = [u].[Id]
    WHERE [u].[Id] = @__ownerId_0 AND [f].[Id] = @__fundId_1
) AS [t]
LEFT JOIN (
    SELECT [f0].[Id], [f0].[FundId], [f0].[NickName], [f0].[UserId], [u0].[Id] AS [Id0], [u0].[AdditionalInfo], [u0].[Address], [u0].[BankName], [u0].[BankNumber], [u0].[Email], [u0].[Name], [u0].[Password], [u0].[PhoneNumber], [u0].[Role]
    FROM [FundMember] AS [f0]
    INNER JOIN [User] AS [u0] ON [f0].[UserId] = [u0].[Id]
) AS [t0] ON [t].[Id] = [t0].[FundId]
LEFT JOIN (
    SELECT [f1].[Id], [f1].[FundId], [f1].[sessionNumber], [f1].[takenDate], [t2].[Id] AS [Id0], [t2].[fundAmount], [t2].[fundMemberId], [t2].[predictedPrice], [t2].[remainPrice], [t2].[serviceCost], [t2].[sessionId], [f2].[Id] AS [Id1], [f2].[FundId] AS [FundId0], [f2].[NickName], [f2].[UserId], [n].[Id] AS [Id2], [n].[FundSessionId], [n].[fundMemberId] AS [fundMemberId0], [n].[payCost]
    FROM [FundSession] AS [f1]
    LEFT JOIN [TakenSessionDetail] AS [t2] ON [f1].[Id] = [t2].[sessionId]
    LEFT JOIN [FundMember] AS [f2] ON [t2].[fundMemberId] = [f2].[Id]
    LEFT JOIN [NormalSessionDetail] AS [n] ON [f1].[Id] = [n].[FundSessionId]
) AS [t1] ON [t].[Id] = [t1].[FundId]
ORDER BY [t].[Id], [t].[Id0], [t0].[Id], [t0].[Id0], [t1].[Id], [t1].[Id0], [t1].[Id1]
2023-07-16 21:31:08.115 +07:00 [INF] Executing OkObjectResult, writing value of type 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetResponse'.
2023-07-16 21:31:08.123 +07:00 [INF] Executed action hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web) in 82.5738ms
2023-07-16 21:31:08.123 +07:00 [INF] Executed endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web)'
2023-07-16 21:31:08.124 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:57678/funds/1 application/json - - 200 - application/json;+charset=utf-8 90.7704ms
2023-07-16 21:31:13.807 +07:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:57678/funds/1/sessions/add - -
2023-07-16 21:31:13.808 +07:00 [INF] CORS policy execution successful.
2023-07-16 21:31:13.808 +07:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:57678/funds/1/sessions/add - - - 204 - - 1.0615ms
2023-07-16 21:31:13.809 +07:00 [INF] Request starting HTTP/1.1 POST http://localhost:57678/funds/1/sessions/add application/json 34
2023-07-16 21:31:13.811 +07:00 [INF] CORS policy execution successful.
2023-07-16 21:31:13.811 +07:00 [INF] Executing endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSession.HandleAsync (hui_management_backend.Web)'
2023-07-16 21:31:13.814 +07:00 [INF] Route matched with {action = "Handle", controller = "FundAddSession"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] HandleAsync(hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSessionRequest, System.Threading.CancellationToken) on controller hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSession (hui_management_backend.Web).
2023-07-16 21:31:13.829 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ownerId_0='?' (DbType = Int32), @__fundId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[FundPrice], [t].[IsArchived], [t].[Name], [t].[OpenDate], [t].[OpenDateText], [t].[OwnerId], [t].[ServiceCost], [t].[Id0], [t].[AdditionalInfo], [t].[Address], [t].[BankName], [t].[BankNumber], [t].[Email], [t].[Name0], [t].[Password], [t].[PhoneNumber], [t].[Role], [t0].[Id], [t0].[FundId], [t0].[NickName], [t0].[UserId], [t0].[Id0], [t0].[AdditionalInfo], [t0].[Address], [t0].[BankName], [t0].[BankNumber], [t0].[Email], [t0].[Name], [t0].[Password], [t0].[PhoneNumber], [t0].[Role], [t1].[Id], [t1].[FundId], [t1].[sessionNumber], [t1].[takenDate], [t1].[Id0], [t1].[fundAmount], [t1].[fundMemberId], [t1].[predictedPrice], [t1].[remainPrice], [t1].[serviceCost], [t1].[sessionId], [t1].[Id1], [t1].[FundId0], [t1].[NickName], [t1].[UserId], [t1].[Id2], [t1].[FundSessionId], [t1].[fundMemberId0], [t1].[payCost]
FROM (
    SELECT TOP(1) [f].[Id], [f].[FundPrice], [f].[IsArchived], [f].[Name], [f].[OpenDate], [f].[OpenDateText], [f].[OwnerId], [f].[ServiceCost], [u].[Id] AS [Id0], [u].[AdditionalInfo], [u].[Address], [u].[BankName], [u].[BankNumber], [u].[Email], [u].[Name] AS [Name0], [u].[Password], [u].[PhoneNumber], [u].[Role]
    FROM [Funds] AS [f]
    INNER JOIN [User] AS [u] ON [f].[OwnerId] = [u].[Id]
    WHERE [u].[Id] = @__ownerId_0 AND [f].[Id] = @__fundId_1
) AS [t]
LEFT JOIN (
    SELECT [f0].[Id], [f0].[FundId], [f0].[NickName], [f0].[UserId], [u0].[Id] AS [Id0], [u0].[AdditionalInfo], [u0].[Address], [u0].[BankName], [u0].[BankNumber], [u0].[Email], [u0].[Name], [u0].[Password], [u0].[PhoneNumber], [u0].[Role]
    FROM [FundMember] AS [f0]
    INNER JOIN [User] AS [u0] ON [f0].[UserId] = [u0].[Id]
) AS [t0] ON [t].[Id] = [t0].[FundId]
LEFT JOIN (
    SELECT [f1].[Id], [f1].[FundId], [f1].[sessionNumber], [f1].[takenDate], [t2].[Id] AS [Id0], [t2].[fundAmount], [t2].[fundMemberId], [t2].[predictedPrice], [t2].[remainPrice], [t2].[serviceCost], [t2].[sessionId], [f2].[Id] AS [Id1], [f2].[FundId] AS [FundId0], [f2].[NickName], [f2].[UserId], [n].[Id] AS [Id2], [n].[FundSessionId], [n].[fundMemberId] AS [fundMemberId0], [n].[payCost]
    FROM [FundSession] AS [f1]
    LEFT JOIN [TakenSessionDetail] AS [t2] ON [f1].[Id] = [t2].[sessionId]
    LEFT JOIN [FundMember] AS [f2] ON [t2].[fundMemberId] = [f2].[Id]
    LEFT JOIN [NormalSessionDetail] AS [n] ON [f1].[Id] = [n].[FundSessionId]
) AS [t1] ON [t].[Id] = [t1].[FundId]
ORDER BY [t].[Id], [t].[Id0], [t0].[Id], [t0].[Id0], [t1].[Id], [t1].[Id0], [t1].[Id1]
2023-07-16 21:31:24.637 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__dateTimeOffset_Date_0='?' (DbType = DateTime2), @__ownerId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[CreateAt], [p].[OwnerId], [p].[Status]
FROM [Payment] AS [p]
WHERE CONVERT(date, [p].[CreateAt]) = @__dateTimeOffset_Date_0 AND [p].[OwnerId] = @__ownerId_1
2023-07-16 21:31:24.768 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = DateTimeOffset), @p3='?' (DbType = DateTimeOffset), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [FundSession] ([FundId], [sessionNumber], [takenDate])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2);
INSERT INTO [Payment] ([CreateAt], [OwnerId], [Status])
OUTPUT INSERTED.[Id]
VALUES (@p3, @p4, @p5);
2023-07-16 21:31:24.785 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@p6='?' (DbType = Int32), @p7='?' (DbType = Int32), @p8='?' (DbType = Double), @p9='?' (DbType = Double), @p10='?' (DbType = Int32), @p11='?' (DbType = Double), @p12='?' (DbType = Double), @p13='?' (DbType = Double), @p14='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [NormalSessionDetail] ([FundSessionId], [fundMemberId], [payCost])
OUTPUT INSERTED.[Id]
VALUES (@p6, @p7, @p8);
INSERT INTO [TakenSessionDetail] ([fundAmount], [fundMemberId], [predictedPrice], [remainPrice], [serviceCost], [sessionId])
OUTPUT INSERTED.[Id]
VALUES (@p9, @p10, @p11, @p12, @p13, @p14);
2023-07-16 21:31:24.802 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__dateTimeOffset_Date_0='?' (DbType = DateTime2), @__ownerId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[CreateAt], [p].[OwnerId], [p].[Status]
FROM [Payment] AS [p]
WHERE CONVERT(date, [p].[CreateAt]) = @__dateTimeOffset_Date_0 AND [p].[OwnerId] = @__ownerId_1
2023-07-16 21:31:24.814 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Double), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTimeOffset), @p6='?' (DbType = Int32), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [FundBill] ([Amount], [PaymentId], [Status], [Type], [fromFundId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4);
INSERT INTO [Payment] ([CreateAt], [OwnerId], [Status])
OUTPUT INSERTED.[Id]
VALUES (@p5, @p6, @p7);
2023-07-16 21:31:24.826 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = Double), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p8='?' (DbType = Int32), @p5='?' (DbType = DateTimeOffset), @p6='?' (DbType = Int32), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [FundBill] ([Amount], [PaymentId], [Status], [Type], [fromFundId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4);
UPDATE [Payment] SET [CreateAt] = @p5, [OwnerId] = @p6, [Status] = @p7
OUTPUT 1
WHERE [Id] = @p8;
2023-07-16 21:31:24.831 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@p3='?' (DbType = Int32), @p0='?' (DbType = DateTimeOffset), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Payment] SET [CreateAt] = @p0, [OwnerId] = @p1, [Status] = @p2
OUTPUT 1
WHERE [Id] = @p3;
2023-07-16 21:31:24.887 +07:00 [INF] Executed action hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSession.HandleAsync (hui_management_backend.Web) in 11073.1297ms
2023-07-16 21:31:24.888 +07:00 [INF] Executed endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSession.HandleAsync (hui_management_backend.Web)'
2023-07-16 21:31:24.889 +07:00 [ERR] An unhandled exception has occurred while executing the request.
System.Exception: test unit of work
   at hui_management_backend.Core.PaymentAggregate.Handlers.NewFundSessionAddedHandler.Handle(NewFundSessionAddedEvent notification, CancellationToken cancellationToken) in C:\Users\khang\Desktop\Hui_Management\hui_management_backend\src\hui_management_backend.Core\PaymentAggregate\Handlers\NewFundSessionAddedHandler.cs:line 58
   at MediatR.NotificationPublishers.ForeachAwaitPublisher.Publish(IEnumerable`1 handlerExecutors, INotification notification, CancellationToken cancellationToken)
   at hui_management_backend.Core.Services.AddSessionFundService.AddSession(Int32 fundId, Int32 ownerId, Int32 memberId, Double predictedPrice) in C:\Users\khang\Desktop\Hui_Management\hui_management_backend\src\hui_management_backend.Core\Services\AddSessionFundService.cs:line 88
   at hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSession.HandleAsync(FundAddSessionRequest request, CancellationToken cancellationToken) in C:\Users\khang\Desktop\Hui_Management\hui_management_backend\src\hui_management_backend.Web\Endpoints\FundEndpoints\FundAddSession.cs:line 36
   at lambda_method654(Closure, Object)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Ardalis.ListStartupServices.ShowAllServicesMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-07-16 21:31:24.911 +07:00 [INF] Request finished HTTP/1.1 POST http://localhost:57678/funds/1/sessions/add application/json 34 - 500 - text/plain;+charset=utf-8 11101.0969ms
2023-07-16 21:45:22.898 +07:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-16 21:45:22.943 +07:00 [INF] Executed DbCommand (19ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-07-16 21:45:23.062 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Funds] AS [f]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-16 21:45:23.077 +07:00 [INF] User profile is available. Using 'C:\Users\khang\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-07-16 21:45:23.140 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2023-07-16 21:45:23.140 +07:00 [INF] Hosting environment: Development
2023-07-16 21:45:23.140 +07:00 [INF] Content root path: C:\Users\khang\Desktop\Hui_Management\hui_management_backend\src\hui_management_backend.Web
2023-07-16 21:45:23.149 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:57678/ - -
2023-07-16 21:45:23.211 +07:00 [WRN] Failed to determine the https port for redirect.
2023-07-16 21:45:23.233 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:57678/ - - - 404 - - 84.9725ms
2023-07-16 21:45:23.265 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:57678/favicon.ico - -
2023-07-16 21:45:23.285 +07:00 [INF] Sending file. Request path: '/favicon.ico'. Physical path: 'C:\Users\khang\Desktop\Hui_Management\hui_management_backend\src\hui_management_backend.Web\wwwroot\favicon.ico'
2023-07-16 21:45:23.286 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:57678/favicon.ico - - - 0 5430 image/x-icon 20.3184ms
2023-07-16 21:45:24.825 +07:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:57678/funds/1/sessions/add - -
2023-07-16 21:45:24.829 +07:00 [INF] CORS policy execution successful.
2023-07-16 21:45:24.830 +07:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:57678/funds/1/sessions/add - - - 204 - - 5.2989ms
2023-07-16 21:45:24.834 +07:00 [INF] Request starting HTTP/1.1 POST http://localhost:57678/funds/1/sessions/add application/json 34
2023-07-16 21:45:24.938 +07:00 [INF] CORS policy execution successful.
2023-07-16 21:45:24.940 +07:00 [INF] Executing endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSession.HandleAsync (hui_management_backend.Web)'
2023-07-16 21:45:24.957 +07:00 [INF] Route matched with {action = "Handle", controller = "FundAddSession"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] HandleAsync(hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSessionRequest, System.Threading.CancellationToken) on controller hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSession (hui_management_backend.Web).
2023-07-16 21:45:59.481 +07:00 [INF] Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-16 21:45:59.522 +07:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-07-16 21:45:59.672 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Funds] AS [f]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-16 21:45:59.683 +07:00 [INF] User profile is available. Using 'C:\Users\khang\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-07-16 21:45:59.745 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2023-07-16 21:45:59.746 +07:00 [INF] Hosting environment: Development
2023-07-16 21:45:59.746 +07:00 [INF] Content root path: C:\Users\khang\Desktop\Hui_Management\hui_management_backend\src\hui_management_backend.Web
2023-07-16 21:45:59.755 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:57678/ - -
2023-07-16 21:45:59.755 +07:00 [INF] Request starting HTTP/1.1 POST http://localhost:57678/funds/1/sessions/add application/json 34
2023-07-16 21:45:59.848 +07:00 [WRN] Failed to determine the https port for redirect.
2023-07-16 21:45:59.892 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:57678/ - - - 404 - - 137.4473ms
2023-07-16 21:45:59.956 +07:00 [INF] CORS policy execution successful.
2023-07-16 21:45:59.958 +07:00 [INF] Executing endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSession.HandleAsync (hui_management_backend.Web)'
2023-07-16 21:45:59.973 +07:00 [INF] Route matched with {action = "Handle", controller = "FundAddSession"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] HandleAsync(hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSessionRequest, System.Threading.CancellationToken) on controller hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSession (hui_management_backend.Web).
2023-07-16 21:46:12.940 +07:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2023-07-16 21:46:12.986 +07:00 [INF] Executed DbCommand (29ms) [Parameters=[@__ownerId_0='?' (DbType = Int32), @__fundId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[FundPrice], [t].[IsArchived], [t].[Name], [t].[OpenDate], [t].[OpenDateText], [t].[OwnerId], [t].[ServiceCost], [t].[Id0], [t].[AdditionalInfo], [t].[Address], [t].[BankName], [t].[BankNumber], [t].[Email], [t].[Name0], [t].[Password], [t].[PhoneNumber], [t].[Role], [t0].[Id], [t0].[FundId], [t0].[NickName], [t0].[UserId], [t0].[Id0], [t0].[AdditionalInfo], [t0].[Address], [t0].[BankName], [t0].[BankNumber], [t0].[Email], [t0].[Name], [t0].[Password], [t0].[PhoneNumber], [t0].[Role], [t1].[Id], [t1].[FundId], [t1].[sessionNumber], [t1].[takenDate], [t1].[Id0], [t1].[fundAmount], [t1].[fundMemberId], [t1].[predictedPrice], [t1].[remainPrice], [t1].[serviceCost], [t1].[sessionId], [t1].[Id1], [t1].[FundId0], [t1].[NickName], [t1].[UserId], [t1].[Id2], [t1].[FundSessionId], [t1].[fundMemberId0], [t1].[payCost]
FROM (
    SELECT TOP(1) [f].[Id], [f].[FundPrice], [f].[IsArchived], [f].[Name], [f].[OpenDate], [f].[OpenDateText], [f].[OwnerId], [f].[ServiceCost], [u].[Id] AS [Id0], [u].[AdditionalInfo], [u].[Address], [u].[BankName], [u].[BankNumber], [u].[Email], [u].[Name] AS [Name0], [u].[Password], [u].[PhoneNumber], [u].[Role]
    FROM [Funds] AS [f]
    INNER JOIN [User] AS [u] ON [f].[OwnerId] = [u].[Id]
    WHERE [u].[Id] = @__ownerId_0 AND [f].[Id] = @__fundId_1
) AS [t]
LEFT JOIN (
    SELECT [f0].[Id], [f0].[FundId], [f0].[NickName], [f0].[UserId], [u0].[Id] AS [Id0], [u0].[AdditionalInfo], [u0].[Address], [u0].[BankName], [u0].[BankNumber], [u0].[Email], [u0].[Name], [u0].[Password], [u0].[PhoneNumber], [u0].[Role]
    FROM [FundMember] AS [f0]
    INNER JOIN [User] AS [u0] ON [f0].[UserId] = [u0].[Id]
) AS [t0] ON [t].[Id] = [t0].[FundId]
LEFT JOIN (
    SELECT [f1].[Id], [f1].[FundId], [f1].[sessionNumber], [f1].[takenDate], [t2].[Id] AS [Id0], [t2].[fundAmount], [t2].[fundMemberId], [t2].[predictedPrice], [t2].[remainPrice], [t2].[serviceCost], [t2].[sessionId], [f2].[Id] AS [Id1], [f2].[FundId] AS [FundId0], [f2].[NickName], [f2].[UserId], [n].[Id] AS [Id2], [n].[FundSessionId], [n].[fundMemberId] AS [fundMemberId0], [n].[payCost]
    FROM [FundSession] AS [f1]
    LEFT JOIN [TakenSessionDetail] AS [t2] ON [f1].[Id] = [t2].[sessionId]
    LEFT JOIN [FundMember] AS [f2] ON [t2].[fundMemberId] = [f2].[Id]
    LEFT JOIN [NormalSessionDetail] AS [n] ON [f1].[Id] = [n].[FundSessionId]
) AS [t1] ON [t].[Id] = [t1].[FundId]
ORDER BY [t].[Id], [t].[Id0], [t0].[Id], [t0].[Id0], [t1].[Id], [t1].[Id0], [t1].[Id1]
2023-07-16 21:46:25.358 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__dateTimeOffset_Date_0='?' (DbType = DateTime2), @__ownerId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[CreateAt], [p].[OwnerId], [p].[Status]
FROM [Payment] AS [p]
WHERE CONVERT(date, [p].[CreateAt]) = @__dateTimeOffset_Date_0 AND [p].[OwnerId] = @__ownerId_1
2023-07-16 21:46:25.499 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = DateTimeOffset), @p3='?' (DbType = DateTimeOffset), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [FundSession] ([FundId], [sessionNumber], [takenDate])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2);
INSERT INTO [Payment] ([CreateAt], [OwnerId], [Status])
OUTPUT INSERTED.[Id]
VALUES (@p3, @p4, @p5);
2023-07-16 21:46:25.521 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@p6='?' (DbType = Int32), @p7='?' (DbType = Int32), @p8='?' (DbType = Double), @p9='?' (DbType = Double), @p10='?' (DbType = Int32), @p11='?' (DbType = Double), @p12='?' (DbType = Double), @p13='?' (DbType = Double), @p14='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [NormalSessionDetail] ([FundSessionId], [fundMemberId], [payCost])
OUTPUT INSERTED.[Id]
VALUES (@p6, @p7, @p8);
INSERT INTO [TakenSessionDetail] ([fundAmount], [fundMemberId], [predictedPrice], [remainPrice], [serviceCost], [sessionId])
OUTPUT INSERTED.[Id]
VALUES (@p9, @p10, @p11, @p12, @p13, @p14);
2023-07-16 21:46:25.536 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__dateTimeOffset_Date_0='?' (DbType = DateTime2), @__ownerId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[CreateAt], [p].[OwnerId], [p].[Status]
FROM [Payment] AS [p]
WHERE CONVERT(date, [p].[CreateAt]) = @__dateTimeOffset_Date_0 AND [p].[OwnerId] = @__ownerId_1
2023-07-16 21:46:25.551 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Double), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTimeOffset), @p6='?' (DbType = Int32), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [FundBill] ([Amount], [PaymentId], [Status], [Type], [fromFundId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4);
INSERT INTO [Payment] ([CreateAt], [OwnerId], [Status])
OUTPUT INSERTED.[Id]
VALUES (@p5, @p6, @p7);
2023-07-16 21:46:25.565 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Double), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p8='?' (DbType = Int32), @p5='?' (DbType = DateTimeOffset), @p6='?' (DbType = Int32), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [FundBill] ([Amount], [PaymentId], [Status], [Type], [fromFundId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4);
UPDATE [Payment] SET [CreateAt] = @p5, [OwnerId] = @p6, [Status] = @p7
OUTPUT 1
WHERE [Id] = @p8;
2023-07-16 21:46:25.571 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@p3='?' (DbType = Int32), @p0='?' (DbType = DateTimeOffset), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Payment] SET [CreateAt] = @p0, [OwnerId] = @p1, [Status] = @p2
OUTPUT 1
WHERE [Id] = @p3;
2023-07-16 21:46:25.692 +07:00 [INF] Executed action hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSession.HandleAsync (hui_management_backend.Web) in 25716.1511ms
2023-07-16 21:46:25.693 +07:00 [INF] Executed endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSession.HandleAsync (hui_management_backend.Web)'
2023-07-16 21:46:25.695 +07:00 [ERR] An unhandled exception has occurred while executing the request.
System.Exception: test unit of work
   at hui_management_backend.Core.PaymentAggregate.Handlers.NewFundSessionAddedHandler.Handle(NewFundSessionAddedEvent notification, CancellationToken cancellationToken) in C:\Users\khang\Desktop\Hui_Management\hui_management_backend\src\hui_management_backend.Core\PaymentAggregate\Handlers\NewFundSessionAddedHandler.cs:line 58
   at MediatR.NotificationPublishers.ForeachAwaitPublisher.Publish(IEnumerable`1 handlerExecutors, INotification notification, CancellationToken cancellationToken)
   at hui_management_backend.Core.Services.AddSessionFundService.AddSession(Int32 fundId, Int32 ownerId, Int32 memberId, Double predictedPrice) in C:\Users\khang\Desktop\Hui_Management\hui_management_backend\src\hui_management_backend.Core\Services\AddSessionFundService.cs:line 90
   at hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSession.HandleAsync(FundAddSessionRequest request, CancellationToken cancellationToken) in C:\Users\khang\Desktop\Hui_Management\hui_management_backend\src\hui_management_backend.Web\Endpoints\FundEndpoints\FundAddSession.cs:line 36
   at lambda_method416(Closure, Object)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Ardalis.ListStartupServices.ShowAllServicesMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-07-16 21:46:25.732 +07:00 [INF] Request finished HTTP/1.1 POST http://localhost:57678/funds/1/sessions/add application/json 34 - 500 - text/plain;+charset=utf-8 25978.4608ms
2023-07-16 21:47:20.125 +07:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2023-07-16 21:47:20.170 +07:00 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']

IF EXISTS
    (SELECT *
     FROM [sys].[objects] o
     WHERE [o].[type] = 'U'
     AND [o].[is_ms_shipped] = 0
     AND NOT EXISTS (SELECT *
         FROM [sys].[extended_properties] AS [ep]
         WHERE [ep].[major_id] = [o].[object_id]
             AND [ep].[minor_id] = 0
             AND [ep].[class] = 1
             AND [ep].[name] = N'microsoft_database_tools_support'
    )
)
SELECT 1 ELSE SELECT 0
2023-07-16 21:47:20.293 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Funds] AS [f]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2023-07-16 21:47:20.305 +07:00 [INF] User profile is available. Using 'C:\Users\khang\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-07-16 21:47:20.369 +07:00 [INF] Application started. Press Ctrl+C to shut down.
2023-07-16 21:47:20.369 +07:00 [INF] Hosting environment: Development
2023-07-16 21:47:20.369 +07:00 [INF] Content root path: C:\Users\khang\Desktop\Hui_Management\hui_management_backend\src\hui_management_backend.Web
2023-07-16 21:47:20.378 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:57678/ - -
2023-07-16 21:47:20.439 +07:00 [WRN] Failed to determine the https port for redirect.
2023-07-16 21:47:20.463 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:57678/ - - - 404 - - 85.6929ms
2023-07-16 21:47:27.037 +07:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:57678/funds/1/sessions/add - -
2023-07-16 21:47:27.041 +07:00 [INF] CORS policy execution successful.
2023-07-16 21:47:27.044 +07:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:57678/funds/1/sessions/add - - - 204 - - 6.5969ms
2023-07-16 21:47:27.048 +07:00 [INF] Request starting HTTP/1.1 POST http://localhost:57678/funds/1/sessions/add application/json 34
2023-07-16 21:47:27.151 +07:00 [INF] CORS policy execution successful.
2023-07-16 21:47:27.153 +07:00 [INF] Executing endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSession.HandleAsync (hui_management_backend.Web)'
2023-07-16 21:47:27.170 +07:00 [INF] Route matched with {action = "Handle", controller = "FundAddSession"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] HandleAsync(hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSessionRequest, System.Threading.CancellationToken) on controller hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSession (hui_management_backend.Web).
2023-07-16 21:47:29.061 +07:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2023-07-16 21:47:29.114 +07:00 [INF] Executed DbCommand (34ms) [Parameters=[@__ownerId_0='?' (DbType = Int32), @__fundId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[FundPrice], [t].[IsArchived], [t].[Name], [t].[OpenDate], [t].[OpenDateText], [t].[OwnerId], [t].[ServiceCost], [t].[Id0], [t].[AdditionalInfo], [t].[Address], [t].[BankName], [t].[BankNumber], [t].[Email], [t].[Name0], [t].[Password], [t].[PhoneNumber], [t].[Role], [t0].[Id], [t0].[FundId], [t0].[NickName], [t0].[UserId], [t0].[Id0], [t0].[AdditionalInfo], [t0].[Address], [t0].[BankName], [t0].[BankNumber], [t0].[Email], [t0].[Name], [t0].[Password], [t0].[PhoneNumber], [t0].[Role], [t1].[Id], [t1].[FundId], [t1].[sessionNumber], [t1].[takenDate], [t1].[Id0], [t1].[fundAmount], [t1].[fundMemberId], [t1].[predictedPrice], [t1].[remainPrice], [t1].[serviceCost], [t1].[sessionId], [t1].[Id1], [t1].[FundId0], [t1].[NickName], [t1].[UserId], [t1].[Id2], [t1].[FundSessionId], [t1].[fundMemberId0], [t1].[payCost]
FROM (
    SELECT TOP(1) [f].[Id], [f].[FundPrice], [f].[IsArchived], [f].[Name], [f].[OpenDate], [f].[OpenDateText], [f].[OwnerId], [f].[ServiceCost], [u].[Id] AS [Id0], [u].[AdditionalInfo], [u].[Address], [u].[BankName], [u].[BankNumber], [u].[Email], [u].[Name] AS [Name0], [u].[Password], [u].[PhoneNumber], [u].[Role]
    FROM [Funds] AS [f]
    INNER JOIN [User] AS [u] ON [f].[OwnerId] = [u].[Id]
    WHERE [u].[Id] = @__ownerId_0 AND [f].[Id] = @__fundId_1
) AS [t]
LEFT JOIN (
    SELECT [f0].[Id], [f0].[FundId], [f0].[NickName], [f0].[UserId], [u0].[Id] AS [Id0], [u0].[AdditionalInfo], [u0].[Address], [u0].[BankName], [u0].[BankNumber], [u0].[Email], [u0].[Name], [u0].[Password], [u0].[PhoneNumber], [u0].[Role]
    FROM [FundMember] AS [f0]
    INNER JOIN [User] AS [u0] ON [f0].[UserId] = [u0].[Id]
) AS [t0] ON [t].[Id] = [t0].[FundId]
LEFT JOIN (
    SELECT [f1].[Id], [f1].[FundId], [f1].[sessionNumber], [f1].[takenDate], [t2].[Id] AS [Id0], [t2].[fundAmount], [t2].[fundMemberId], [t2].[predictedPrice], [t2].[remainPrice], [t2].[serviceCost], [t2].[sessionId], [f2].[Id] AS [Id1], [f2].[FundId] AS [FundId0], [f2].[NickName], [f2].[UserId], [n].[Id] AS [Id2], [n].[FundSessionId], [n].[fundMemberId] AS [fundMemberId0], [n].[payCost]
    FROM [FundSession] AS [f1]
    LEFT JOIN [TakenSessionDetail] AS [t2] ON [f1].[Id] = [t2].[sessionId]
    LEFT JOIN [FundMember] AS [f2] ON [t2].[fundMemberId] = [f2].[Id]
    LEFT JOIN [NormalSessionDetail] AS [n] ON [f1].[Id] = [n].[FundSessionId]
) AS [t1] ON [t].[Id] = [t1].[FundId]
ORDER BY [t].[Id], [t].[Id0], [t0].[Id], [t0].[Id0], [t1].[Id], [t1].[Id0], [t1].[Id1]
2023-07-16 21:47:31.787 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__dateTimeOffset_Date_0='?' (DbType = DateTime2), @__ownerId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[CreateAt], [p].[OwnerId], [p].[Status]
FROM [Payment] AS [p]
WHERE CONVERT(date, [p].[CreateAt]) = @__dateTimeOffset_Date_0 AND [p].[OwnerId] = @__ownerId_1
2023-07-16 21:47:31.928 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Int32), @p1='?' (DbType = Int32), @p2='?' (DbType = DateTimeOffset), @p3='?' (DbType = DateTimeOffset), @p4='?' (DbType = Int32), @p5='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [FundSession] ([FundId], [sessionNumber], [takenDate])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2);
INSERT INTO [Payment] ([CreateAt], [OwnerId], [Status])
OUTPUT INSERTED.[Id]
VALUES (@p3, @p4, @p5);
2023-07-16 21:47:31.948 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@p6='?' (DbType = Int32), @p7='?' (DbType = Int32), @p8='?' (DbType = Double), @p9='?' (DbType = Double), @p10='?' (DbType = Int32), @p11='?' (DbType = Double), @p12='?' (DbType = Double), @p13='?' (DbType = Double), @p14='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [NormalSessionDetail] ([FundSessionId], [fundMemberId], [payCost])
OUTPUT INSERTED.[Id]
VALUES (@p6, @p7, @p8);
INSERT INTO [TakenSessionDetail] ([fundAmount], [fundMemberId], [predictedPrice], [remainPrice], [serviceCost], [sessionId])
OUTPUT INSERTED.[Id]
VALUES (@p9, @p10, @p11, @p12, @p13, @p14);
2023-07-16 21:47:31.965 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__dateTimeOffset_Date_0='?' (DbType = DateTime2), @__ownerId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[CreateAt], [p].[OwnerId], [p].[Status]
FROM [Payment] AS [p]
WHERE CONVERT(date, [p].[CreateAt]) = @__dateTimeOffset_Date_0 AND [p].[OwnerId] = @__ownerId_1
2023-07-16 21:47:31.981 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@p0='?' (DbType = Double), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = DateTimeOffset), @p6='?' (DbType = Int32), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [FundBill] ([Amount], [PaymentId], [Status], [Type], [fromFundId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4);
INSERT INTO [Payment] ([CreateAt], [OwnerId], [Status])
OUTPUT INSERTED.[Id]
VALUES (@p5, @p6, @p7);
2023-07-16 21:47:31.998 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@p0='?' (DbType = Double), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p8='?' (DbType = Int32), @p5='?' (DbType = DateTimeOffset), @p6='?' (DbType = Int32), @p7='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
INSERT INTO [FundBill] ([Amount], [PaymentId], [Status], [Type], [fromFundId])
OUTPUT INSERTED.[Id]
VALUES (@p0, @p1, @p2, @p3, @p4);
UPDATE [Payment] SET [CreateAt] = @p5, [OwnerId] = @p6, [Status] = @p7
OUTPUT 1
WHERE [Id] = @p8;
2023-07-16 21:47:32.006 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@p3='?' (DbType = Int32), @p0='?' (DbType = DateTimeOffset), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Payment] SET [CreateAt] = @p0, [OwnerId] = @p1, [Status] = @p2
OUTPUT 1
WHERE [Id] = @p3;
2023-07-16 21:47:34.722 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2023-07-16 21:47:34.733 +07:00 [INF] Executed action hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSession.HandleAsync (hui_management_backend.Web) in 7560.9741ms
2023-07-16 21:47:34.734 +07:00 [INF] Executed endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSession.HandleAsync (hui_management_backend.Web)'
2023-07-16 21:47:34.737 +07:00 [INF] Request finished HTTP/1.1 POST http://localhost:57678/funds/1/sessions/add application/json 34 - 200 - application/json;+charset=utf-8 7689.1636ms
2023-07-16 21:47:34.756 +07:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:57678/funds/1 - -
2023-07-16 21:47:34.758 +07:00 [INF] CORS policy execution successful.
2023-07-16 21:47:34.758 +07:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:57678/funds/1 - - - 204 - - 1.6271ms
2023-07-16 21:47:34.762 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:57678/funds/1 application/json -
2023-07-16 21:47:34.763 +07:00 [INF] CORS policy execution successful.
2023-07-16 21:47:34.764 +07:00 [INF] Executing endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web)'
2023-07-16 21:47:34.768 +07:00 [INF] Route matched with {action = "Handle", controller = "FundGet"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[hui_management_backend.Web.Endpoints.FundEndpoints.FundGetResponse]] HandleAsync(hui_management_backend.Web.Endpoints.FundEndpoints.FundGetRequest, System.Threading.CancellationToken) on controller hui_management_backend.Web.Endpoints.FundEndpoints.FundGet (hui_management_backend.Web).
2023-07-16 21:47:34.857 +07:00 [INF] Executed DbCommand (8ms) [Parameters=[@__ownerId_0='?' (DbType = Int32), @__fundId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[FundPrice], [t].[IsArchived], [t].[Name], [t].[OpenDate], [t].[OpenDateText], [t].[OwnerId], [t].[ServiceCost], [t].[Id0], [t].[AdditionalInfo], [t].[Address], [t].[BankName], [t].[BankNumber], [t].[Email], [t].[Name0], [t].[Password], [t].[PhoneNumber], [t].[Role], [t0].[Id], [t0].[FundId], [t0].[NickName], [t0].[UserId], [t0].[Id0], [t0].[AdditionalInfo], [t0].[Address], [t0].[BankName], [t0].[BankNumber], [t0].[Email], [t0].[Name], [t0].[Password], [t0].[PhoneNumber], [t0].[Role], [t1].[Id], [t1].[FundId], [t1].[sessionNumber], [t1].[takenDate], [t1].[Id0], [t1].[fundAmount], [t1].[fundMemberId], [t1].[predictedPrice], [t1].[remainPrice], [t1].[serviceCost], [t1].[sessionId], [t1].[Id1], [t1].[FundId0], [t1].[NickName], [t1].[UserId], [t1].[Id2], [t1].[FundSessionId], [t1].[fundMemberId0], [t1].[payCost]
FROM (
    SELECT TOP(1) [f].[Id], [f].[FundPrice], [f].[IsArchived], [f].[Name], [f].[OpenDate], [f].[OpenDateText], [f].[OwnerId], [f].[ServiceCost], [u].[Id] AS [Id0], [u].[AdditionalInfo], [u].[Address], [u].[BankName], [u].[BankNumber], [u].[Email], [u].[Name] AS [Name0], [u].[Password], [u].[PhoneNumber], [u].[Role]
    FROM [Funds] AS [f]
    INNER JOIN [User] AS [u] ON [f].[OwnerId] = [u].[Id]
    WHERE [u].[Id] = @__ownerId_0 AND [f].[Id] = @__fundId_1
) AS [t]
LEFT JOIN (
    SELECT [f0].[Id], [f0].[FundId], [f0].[NickName], [f0].[UserId], [u0].[Id] AS [Id0], [u0].[AdditionalInfo], [u0].[Address], [u0].[BankName], [u0].[BankNumber], [u0].[Email], [u0].[Name], [u0].[Password], [u0].[PhoneNumber], [u0].[Role]
    FROM [FundMember] AS [f0]
    INNER JOIN [User] AS [u0] ON [f0].[UserId] = [u0].[Id]
) AS [t0] ON [t].[Id] = [t0].[FundId]
LEFT JOIN (
    SELECT [f1].[Id], [f1].[FundId], [f1].[sessionNumber], [f1].[takenDate], [t2].[Id] AS [Id0], [t2].[fundAmount], [t2].[fundMemberId], [t2].[predictedPrice], [t2].[remainPrice], [t2].[serviceCost], [t2].[sessionId], [f2].[Id] AS [Id1], [f2].[FundId] AS [FundId0], [f2].[NickName], [f2].[UserId], [n].[Id] AS [Id2], [n].[FundSessionId], [n].[fundMemberId] AS [fundMemberId0], [n].[payCost]
    FROM [FundSession] AS [f1]
    LEFT JOIN [TakenSessionDetail] AS [t2] ON [f1].[Id] = [t2].[sessionId]
    LEFT JOIN [FundMember] AS [f2] ON [t2].[fundMemberId] = [f2].[Id]
    LEFT JOIN [NormalSessionDetail] AS [n] ON [f1].[Id] = [n].[FundSessionId]
) AS [t1] ON [t].[Id] = [t1].[FundId]
ORDER BY [t].[Id], [t].[Id0], [t0].[Id], [t0].[Id0], [t1].[Id], [t1].[Id0], [t1].[Id1]
2023-07-16 21:47:34.894 +07:00 [INF] Executing OkObjectResult, writing value of type 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetResponse'.
2023-07-16 21:47:34.912 +07:00 [INF] Executed action hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web) in 143.9247ms
2023-07-16 21:47:34.912 +07:00 [INF] Executed endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web)'
2023-07-16 21:47:34.912 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:57678/funds/1 application/json - - 200 - application/json;+charset=utf-8 150.2627ms
2023-07-16 21:47:59.611 +07:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:57678/funds/1 - -
2023-07-16 21:47:59.612 +07:00 [INF] CORS policy execution successful.
2023-07-16 21:47:59.612 +07:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:57678/funds/1 - - - 204 - - 1.2228ms
2023-07-16 21:47:59.613 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:57678/funds/1 application/json -
2023-07-16 21:47:59.614 +07:00 [INF] CORS policy execution successful.
2023-07-16 21:47:59.614 +07:00 [INF] Executing endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web)'
2023-07-16 21:47:59.614 +07:00 [INF] Route matched with {action = "Handle", controller = "FundGet"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[hui_management_backend.Web.Endpoints.FundEndpoints.FundGetResponse]] HandleAsync(hui_management_backend.Web.Endpoints.FundEndpoints.FundGetRequest, System.Threading.CancellationToken) on controller hui_management_backend.Web.Endpoints.FundEndpoints.FundGet (hui_management_backend.Web).
2023-07-16 21:47:59.646 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@__ownerId_0='?' (DbType = Int32), @__fundId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[FundPrice], [t].[IsArchived], [t].[Name], [t].[OpenDate], [t].[OpenDateText], [t].[OwnerId], [t].[ServiceCost], [t].[Id0], [t].[AdditionalInfo], [t].[Address], [t].[BankName], [t].[BankNumber], [t].[Email], [t].[Name0], [t].[Password], [t].[PhoneNumber], [t].[Role], [t0].[Id], [t0].[FundId], [t0].[NickName], [t0].[UserId], [t0].[Id0], [t0].[AdditionalInfo], [t0].[Address], [t0].[BankName], [t0].[BankNumber], [t0].[Email], [t0].[Name], [t0].[Password], [t0].[PhoneNumber], [t0].[Role], [t1].[Id], [t1].[FundId], [t1].[sessionNumber], [t1].[takenDate], [t1].[Id0], [t1].[fundAmount], [t1].[fundMemberId], [t1].[predictedPrice], [t1].[remainPrice], [t1].[serviceCost], [t1].[sessionId], [t1].[Id1], [t1].[FundId0], [t1].[NickName], [t1].[UserId], [t1].[Id2], [t1].[FundSessionId], [t1].[fundMemberId0], [t1].[payCost]
FROM (
    SELECT TOP(1) [f].[Id], [f].[FundPrice], [f].[IsArchived], [f].[Name], [f].[OpenDate], [f].[OpenDateText], [f].[OwnerId], [f].[ServiceCost], [u].[Id] AS [Id0], [u].[AdditionalInfo], [u].[Address], [u].[BankName], [u].[BankNumber], [u].[Email], [u].[Name] AS [Name0], [u].[Password], [u].[PhoneNumber], [u].[Role]
    FROM [Funds] AS [f]
    INNER JOIN [User] AS [u] ON [f].[OwnerId] = [u].[Id]
    WHERE [u].[Id] = @__ownerId_0 AND [f].[Id] = @__fundId_1
) AS [t]
LEFT JOIN (
    SELECT [f0].[Id], [f0].[FundId], [f0].[NickName], [f0].[UserId], [u0].[Id] AS [Id0], [u0].[AdditionalInfo], [u0].[Address], [u0].[BankName], [u0].[BankNumber], [u0].[Email], [u0].[Name], [u0].[Password], [u0].[PhoneNumber], [u0].[Role]
    FROM [FundMember] AS [f0]
    INNER JOIN [User] AS [u0] ON [f0].[UserId] = [u0].[Id]
) AS [t0] ON [t].[Id] = [t0].[FundId]
LEFT JOIN (
    SELECT [f1].[Id], [f1].[FundId], [f1].[sessionNumber], [f1].[takenDate], [t2].[Id] AS [Id0], [t2].[fundAmount], [t2].[fundMemberId], [t2].[predictedPrice], [t2].[remainPrice], [t2].[serviceCost], [t2].[sessionId], [f2].[Id] AS [Id1], [f2].[FundId] AS [FundId0], [f2].[NickName], [f2].[UserId], [n].[Id] AS [Id2], [n].[FundSessionId], [n].[fundMemberId] AS [fundMemberId0], [n].[payCost]
    FROM [FundSession] AS [f1]
    LEFT JOIN [TakenSessionDetail] AS [t2] ON [f1].[Id] = [t2].[sessionId]
    LEFT JOIN [FundMember] AS [f2] ON [t2].[fundMemberId] = [f2].[Id]
    LEFT JOIN [NormalSessionDetail] AS [n] ON [f1].[Id] = [n].[FundSessionId]
) AS [t1] ON [t].[Id] = [t1].[FundId]
ORDER BY [t].[Id], [t].[Id0], [t0].[Id], [t0].[Id0], [t1].[Id], [t1].[Id0], [t1].[Id1]
2023-07-16 21:47:59.649 +07:00 [INF] Executing OkObjectResult, writing value of type 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetResponse'.
2023-07-16 21:47:59.650 +07:00 [INF] Executed action hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web) in 35.5562ms
2023-07-16 21:47:59.650 +07:00 [INF] Executed endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web)'
2023-07-16 21:47:59.650 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:57678/funds/1 application/json - - 200 - application/json;+charset=utf-8 37.0324ms
2023-07-16 21:48:03.346 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:57678/funds/1 application/json -
2023-07-16 21:48:03.347 +07:00 [INF] CORS policy execution successful.
2023-07-16 21:48:03.347 +07:00 [INF] Executing endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web)'
2023-07-16 21:48:03.347 +07:00 [INF] Route matched with {action = "Handle", controller = "FundGet"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[hui_management_backend.Web.Endpoints.FundEndpoints.FundGetResponse]] HandleAsync(hui_management_backend.Web.Endpoints.FundEndpoints.FundGetRequest, System.Threading.CancellationToken) on controller hui_management_backend.Web.Endpoints.FundEndpoints.FundGet (hui_management_backend.Web).
2023-07-16 21:48:03.352 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ownerId_0='?' (DbType = Int32), @__fundId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[FundPrice], [t].[IsArchived], [t].[Name], [t].[OpenDate], [t].[OpenDateText], [t].[OwnerId], [t].[ServiceCost], [t].[Id0], [t].[AdditionalInfo], [t].[Address], [t].[BankName], [t].[BankNumber], [t].[Email], [t].[Name0], [t].[Password], [t].[PhoneNumber], [t].[Role], [t0].[Id], [t0].[FundId], [t0].[NickName], [t0].[UserId], [t0].[Id0], [t0].[AdditionalInfo], [t0].[Address], [t0].[BankName], [t0].[BankNumber], [t0].[Email], [t0].[Name], [t0].[Password], [t0].[PhoneNumber], [t0].[Role], [t1].[Id], [t1].[FundId], [t1].[sessionNumber], [t1].[takenDate], [t1].[Id0], [t1].[fundAmount], [t1].[fundMemberId], [t1].[predictedPrice], [t1].[remainPrice], [t1].[serviceCost], [t1].[sessionId], [t1].[Id1], [t1].[FundId0], [t1].[NickName], [t1].[UserId], [t1].[Id2], [t1].[FundSessionId], [t1].[fundMemberId0], [t1].[payCost]
FROM (
    SELECT TOP(1) [f].[Id], [f].[FundPrice], [f].[IsArchived], [f].[Name], [f].[OpenDate], [f].[OpenDateText], [f].[OwnerId], [f].[ServiceCost], [u].[Id] AS [Id0], [u].[AdditionalInfo], [u].[Address], [u].[BankName], [u].[BankNumber], [u].[Email], [u].[Name] AS [Name0], [u].[Password], [u].[PhoneNumber], [u].[Role]
    FROM [Funds] AS [f]
    INNER JOIN [User] AS [u] ON [f].[OwnerId] = [u].[Id]
    WHERE [u].[Id] = @__ownerId_0 AND [f].[Id] = @__fundId_1
) AS [t]
LEFT JOIN (
    SELECT [f0].[Id], [f0].[FundId], [f0].[NickName], [f0].[UserId], [u0].[Id] AS [Id0], [u0].[AdditionalInfo], [u0].[Address], [u0].[BankName], [u0].[BankNumber], [u0].[Email], [u0].[Name], [u0].[Password], [u0].[PhoneNumber], [u0].[Role]
    FROM [FundMember] AS [f0]
    INNER JOIN [User] AS [u0] ON [f0].[UserId] = [u0].[Id]
) AS [t0] ON [t].[Id] = [t0].[FundId]
LEFT JOIN (
    SELECT [f1].[Id], [f1].[FundId], [f1].[sessionNumber], [f1].[takenDate], [t2].[Id] AS [Id0], [t2].[fundAmount], [t2].[fundMemberId], [t2].[predictedPrice], [t2].[remainPrice], [t2].[serviceCost], [t2].[sessionId], [f2].[Id] AS [Id1], [f2].[FundId] AS [FundId0], [f2].[NickName], [f2].[UserId], [n].[Id] AS [Id2], [n].[FundSessionId], [n].[fundMemberId] AS [fundMemberId0], [n].[payCost]
    FROM [FundSession] AS [f1]
    LEFT JOIN [TakenSessionDetail] AS [t2] ON [f1].[Id] = [t2].[sessionId]
    LEFT JOIN [FundMember] AS [f2] ON [t2].[fundMemberId] = [f2].[Id]
    LEFT JOIN [NormalSessionDetail] AS [n] ON [f1].[Id] = [n].[FundSessionId]
) AS [t1] ON [t].[Id] = [t1].[FundId]
ORDER BY [t].[Id], [t].[Id0], [t0].[Id], [t0].[Id0], [t1].[Id], [t1].[Id0], [t1].[Id1]
2023-07-16 21:48:03.387 +07:00 [INF] Executing OkObjectResult, writing value of type 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetResponse'.
2023-07-16 21:48:03.388 +07:00 [INF] Executed action hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web) in 40.0887ms
2023-07-16 21:48:03.388 +07:00 [INF] Executed endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web)'
2023-07-16 21:48:03.388 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:57678/funds/1 application/json - - 200 - application/json;+charset=utf-8 41.6362ms
2023-07-16 21:48:07.448 +07:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:57678/funds/2 - -
2023-07-16 21:48:07.448 +07:00 [INF] CORS policy execution successful.
2023-07-16 21:48:07.449 +07:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:57678/funds/2 - - - 204 - - 0.7683ms
2023-07-16 21:48:07.450 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:57678/funds/2 application/json -
2023-07-16 21:48:07.450 +07:00 [INF] CORS policy execution successful.
2023-07-16 21:48:07.450 +07:00 [INF] Executing endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web)'
2023-07-16 21:48:07.450 +07:00 [INF] Route matched with {action = "Handle", controller = "FundGet"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[hui_management_backend.Web.Endpoints.FundEndpoints.FundGetResponse]] HandleAsync(hui_management_backend.Web.Endpoints.FundEndpoints.FundGetRequest, System.Threading.CancellationToken) on controller hui_management_backend.Web.Endpoints.FundEndpoints.FundGet (hui_management_backend.Web).
2023-07-16 21:48:07.455 +07:00 [INF] Executed DbCommand (3ms) [Parameters=[@__ownerId_0='?' (DbType = Int32), @__fundId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[FundPrice], [t].[IsArchived], [t].[Name], [t].[OpenDate], [t].[OpenDateText], [t].[OwnerId], [t].[ServiceCost], [t].[Id0], [t].[AdditionalInfo], [t].[Address], [t].[BankName], [t].[BankNumber], [t].[Email], [t].[Name0], [t].[Password], [t].[PhoneNumber], [t].[Role], [t0].[Id], [t0].[FundId], [t0].[NickName], [t0].[UserId], [t0].[Id0], [t0].[AdditionalInfo], [t0].[Address], [t0].[BankName], [t0].[BankNumber], [t0].[Email], [t0].[Name], [t0].[Password], [t0].[PhoneNumber], [t0].[Role], [t1].[Id], [t1].[FundId], [t1].[sessionNumber], [t1].[takenDate], [t1].[Id0], [t1].[fundAmount], [t1].[fundMemberId], [t1].[predictedPrice], [t1].[remainPrice], [t1].[serviceCost], [t1].[sessionId], [t1].[Id1], [t1].[FundId0], [t1].[NickName], [t1].[UserId], [t1].[Id2], [t1].[FundSessionId], [t1].[fundMemberId0], [t1].[payCost]
FROM (
    SELECT TOP(1) [f].[Id], [f].[FundPrice], [f].[IsArchived], [f].[Name], [f].[OpenDate], [f].[OpenDateText], [f].[OwnerId], [f].[ServiceCost], [u].[Id] AS [Id0], [u].[AdditionalInfo], [u].[Address], [u].[BankName], [u].[BankNumber], [u].[Email], [u].[Name] AS [Name0], [u].[Password], [u].[PhoneNumber], [u].[Role]
    FROM [Funds] AS [f]
    INNER JOIN [User] AS [u] ON [f].[OwnerId] = [u].[Id]
    WHERE [u].[Id] = @__ownerId_0 AND [f].[Id] = @__fundId_1
) AS [t]
LEFT JOIN (
    SELECT [f0].[Id], [f0].[FundId], [f0].[NickName], [f0].[UserId], [u0].[Id] AS [Id0], [u0].[AdditionalInfo], [u0].[Address], [u0].[BankName], [u0].[BankNumber], [u0].[Email], [u0].[Name], [u0].[Password], [u0].[PhoneNumber], [u0].[Role]
    FROM [FundMember] AS [f0]
    INNER JOIN [User] AS [u0] ON [f0].[UserId] = [u0].[Id]
) AS [t0] ON [t].[Id] = [t0].[FundId]
LEFT JOIN (
    SELECT [f1].[Id], [f1].[FundId], [f1].[sessionNumber], [f1].[takenDate], [t2].[Id] AS [Id0], [t2].[fundAmount], [t2].[fundMemberId], [t2].[predictedPrice], [t2].[remainPrice], [t2].[serviceCost], [t2].[sessionId], [f2].[Id] AS [Id1], [f2].[FundId] AS [FundId0], [f2].[NickName], [f2].[UserId], [n].[Id] AS [Id2], [n].[FundSessionId], [n].[fundMemberId] AS [fundMemberId0], [n].[payCost]
    FROM [FundSession] AS [f1]
    LEFT JOIN [TakenSessionDetail] AS [t2] ON [f1].[Id] = [t2].[sessionId]
    LEFT JOIN [FundMember] AS [f2] ON [t2].[fundMemberId] = [f2].[Id]
    LEFT JOIN [NormalSessionDetail] AS [n] ON [f1].[Id] = [n].[FundSessionId]
) AS [t1] ON [t].[Id] = [t1].[FundId]
ORDER BY [t].[Id], [t].[Id0], [t0].[Id], [t0].[Id0], [t1].[Id], [t1].[Id0], [t1].[Id1]
2023-07-16 21:48:07.455 +07:00 [INF] Executing OkObjectResult, writing value of type 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetResponse'.
2023-07-16 21:48:07.456 +07:00 [INF] Executed action hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web) in 5.5812ms
2023-07-16 21:48:07.456 +07:00 [INF] Executed endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web)'
2023-07-16 21:48:07.456 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:57678/funds/2 application/json - - 200 - application/json;+charset=utf-8 6.7726ms
2023-07-16 21:48:19.796 +07:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:57678/funds/2/sessions/add - -
2023-07-16 21:48:19.797 +07:00 [INF] CORS policy execution successful.
2023-07-16 21:48:19.797 +07:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:57678/funds/2/sessions/add - - - 204 - - 1.1828ms
2023-07-16 21:48:19.798 +07:00 [INF] Request starting HTTP/1.1 POST http://localhost:57678/funds/2/sessions/add application/json 35
2023-07-16 21:48:19.799 +07:00 [INF] CORS policy execution successful.
2023-07-16 21:48:19.799 +07:00 [INF] Executing endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSession.HandleAsync (hui_management_backend.Web)'
2023-07-16 21:48:19.799 +07:00 [INF] Route matched with {action = "Handle", controller = "FundAddSession"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] HandleAsync(hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSessionRequest, System.Threading.CancellationToken) on controller hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSession (hui_management_backend.Web).
2023-07-16 21:48:21.277 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__ownerId_0='?' (DbType = Int32), @__fundId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[FundPrice], [t].[IsArchived], [t].[Name], [t].[OpenDate], [t].[OpenDateText], [t].[OwnerId], [t].[ServiceCost], [t].[Id0], [t].[AdditionalInfo], [t].[Address], [t].[BankName], [t].[BankNumber], [t].[Email], [t].[Name0], [t].[Password], [t].[PhoneNumber], [t].[Role], [t0].[Id], [t0].[FundId], [t0].[NickName], [t0].[UserId], [t0].[Id0], [t0].[AdditionalInfo], [t0].[Address], [t0].[BankName], [t0].[BankNumber], [t0].[Email], [t0].[Name], [t0].[Password], [t0].[PhoneNumber], [t0].[Role], [t1].[Id], [t1].[FundId], [t1].[sessionNumber], [t1].[takenDate], [t1].[Id0], [t1].[fundAmount], [t1].[fundMemberId], [t1].[predictedPrice], [t1].[remainPrice], [t1].[serviceCost], [t1].[sessionId], [t1].[Id1], [t1].[FundId0], [t1].[NickName], [t1].[UserId], [t1].[Id2], [t1].[FundSessionId], [t1].[fundMemberId0], [t1].[payCost]
FROM (
    SELECT TOP(1) [f].[Id], [f].[FundPrice], [f].[IsArchived], [f].[Name], [f].[OpenDate], [f].[OpenDateText], [f].[OwnerId], [f].[ServiceCost], [u].[Id] AS [Id0], [u].[AdditionalInfo], [u].[Address], [u].[BankName], [u].[BankNumber], [u].[Email], [u].[Name] AS [Name0], [u].[Password], [u].[PhoneNumber], [u].[Role]
    FROM [Funds] AS [f]
    INNER JOIN [User] AS [u] ON [f].[OwnerId] = [u].[Id]
    WHERE [u].[Id] = @__ownerId_0 AND [f].[Id] = @__fundId_1
) AS [t]
LEFT JOIN (
    SELECT [f0].[Id], [f0].[FundId], [f0].[NickName], [f0].[UserId], [u0].[Id] AS [Id0], [u0].[AdditionalInfo], [u0].[Address], [u0].[BankName], [u0].[BankNumber], [u0].[Email], [u0].[Name], [u0].[Password], [u0].[PhoneNumber], [u0].[Role]
    FROM [FundMember] AS [f0]
    INNER JOIN [User] AS [u0] ON [f0].[UserId] = [u0].[Id]
) AS [t0] ON [t].[Id] = [t0].[FundId]
LEFT JOIN (
    SELECT [f1].[Id], [f1].[FundId], [f1].[sessionNumber], [f1].[takenDate], [t2].[Id] AS [Id0], [t2].[fundAmount], [t2].[fundMemberId], [t2].[predictedPrice], [t2].[remainPrice], [t2].[serviceCost], [t2].[sessionId], [f2].[Id] AS [Id1], [f2].[FundId] AS [FundId0], [f2].[NickName], [f2].[UserId], [n].[Id] AS [Id2], [n].[FundSessionId], [n].[fundMemberId] AS [fundMemberId0], [n].[payCost]
    FROM [FundSession] AS [f1]
    LEFT JOIN [TakenSessionDetail] AS [t2] ON [f1].[Id] = [t2].[sessionId]
    LEFT JOIN [FundMember] AS [f2] ON [t2].[fundMemberId] = [f2].[Id]
    LEFT JOIN [NormalSessionDetail] AS [n] ON [f1].[Id] = [n].[FundSessionId]
) AS [t1] ON [t].[Id] = [t1].[FundId]
ORDER BY [t].[Id], [t].[Id0], [t0].[Id], [t0].[Id0], [t1].[Id], [t1].[Id0], [t1].[Id1]
2023-07-16 21:48:21.870 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__dateTimeOffset_Date_0='?' (DbType = DateTime2), @__ownerId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[CreateAt], [p].[OwnerId], [p].[Status]
FROM [Payment] AS [p]
WHERE CONVERT(date, [p].[CreateAt]) = @__dateTimeOffset_Date_0 AND [p].[OwnerId] = @__ownerId_1
2023-07-16 21:48:21.899 +07:00 [INF] Executed DbCommand (2ms) [Parameters=[@__dateTimeOffset_Date_0='?' (DbType = DateTime2), @__ownerId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[CreateAt], [p].[OwnerId], [p].[Status]
FROM [Payment] AS [p]
WHERE CONVERT(date, [p].[CreateAt]) = @__dateTimeOffset_Date_0 AND [p].[OwnerId] = @__ownerId_1
2023-07-16 21:48:21.900 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__dateTimeOffset_Date_0='?' (DbType = DateTime2), @__ownerId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT TOP(1) [p].[Id], [p].[CreateAt], [p].[OwnerId], [p].[Status]
FROM [Payment] AS [p]
WHERE CONVERT(date, [p].[CreateAt]) = @__dateTimeOffset_Date_0 AND [p].[OwnerId] = @__ownerId_1
2023-07-16 21:48:21.916 +07:00 [INF] Executed DbCommand (9ms) [Parameters=[@p0='?' (DbType = Double), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32), @p3='?' (DbType = Int32), @p4='?' (DbType = Int32), @p5='?' (DbType = Double), @p6='?' (DbType = Int32), @p7='?' (DbType = Int32), @p8='?' (DbType = Int32), @p9='?' (DbType = Int32), @p10='?' (DbType = Double), @p11='?' (DbType = Int32), @p12='?' (DbType = Int32), @p13='?' (DbType = Int32), @p14='?' (DbType = Int32), @p15='?' (DbType = Int32), @p16='?' (DbType = Int32), @p17='?' (DbType = DateTimeOffset), @p21='?' (DbType = Int32), @p18='?' (DbType = DateTimeOffset), @p19='?' (DbType = Int32), @p20='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
MERGE [FundBill] USING (
VALUES (@p0, @p1, @p2, @p3, @p4, 0),
(@p5, @p6, @p7, @p8, @p9, 1),
(@p10, @p11, @p12, @p13, @p14, 2)) AS i ([Amount], [PaymentId], [Status], [Type], [fromFundId], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([Amount], [PaymentId], [Status], [Type], [fromFundId])
VALUES (i.[Amount], i.[PaymentId], i.[Status], i.[Type], i.[fromFundId])
OUTPUT INSERTED.[Id], i._Position;
INSERT INTO [FundSession] ([FundId], [sessionNumber], [takenDate])
OUTPUT INSERTED.[Id]
VALUES (@p15, @p16, @p17);
UPDATE [Payment] SET [CreateAt] = @p18, [OwnerId] = @p19, [Status] = @p20
OUTPUT 1
WHERE [Id] = @p21;
2023-07-16 21:48:21.921 +07:00 [INF] Executed DbCommand (4ms) [Parameters=[@p22='?' (DbType = Int32), @p23='?' (DbType = Int32), @p24='?' (DbType = Double), @p25='?' (DbType = Int32), @p26='?' (DbType = Int32), @p27='?' (DbType = Double), @p28='?' (DbType = Double), @p29='?' (DbType = Int32), @p30='?' (DbType = Double), @p31='?' (DbType = Double), @p32='?' (DbType = Double), @p33='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET NOCOUNT ON;
MERGE [NormalSessionDetail] USING (
VALUES (@p22, @p23, @p24, 0),
(@p25, @p26, @p27, 1)) AS i ([FundSessionId], [fundMemberId], [payCost], _Position) ON 1=0
WHEN NOT MATCHED THEN
INSERT ([FundSessionId], [fundMemberId], [payCost])
VALUES (i.[FundSessionId], i.[fundMemberId], i.[payCost])
OUTPUT INSERTED.[Id], i._Position;
INSERT INTO [TakenSessionDetail] ([fundAmount], [fundMemberId], [predictedPrice], [remainPrice], [serviceCost], [sessionId])
OUTPUT INSERTED.[Id]
VALUES (@p28, @p29, @p30, @p31, @p32, @p33);
2023-07-16 21:48:21.924 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@p3='?' (DbType = Int32), @p0='?' (DbType = DateTimeOffset), @p1='?' (DbType = Int32), @p2='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SET IMPLICIT_TRANSACTIONS OFF;
SET NOCOUNT ON;
UPDATE [Payment] SET [CreateAt] = @p0, [OwnerId] = @p1, [Status] = @p2
OUTPUT 1
WHERE [Id] = @p3;
2023-07-16 21:48:21.924 +07:00 [INF] Executing OkObjectResult, writing value of type 'System.Boolean'.
2023-07-16 21:48:21.925 +07:00 [INF] Executed action hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSession.HandleAsync (hui_management_backend.Web) in 2126.1416ms
2023-07-16 21:48:21.925 +07:00 [INF] Executed endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundAddSession.HandleAsync (hui_management_backend.Web)'
2023-07-16 21:48:21.925 +07:00 [INF] Request finished HTTP/1.1 POST http://localhost:57678/funds/2/sessions/add application/json 35 - 200 - application/json;+charset=utf-8 2127.0097ms
2023-07-16 21:48:21.932 +07:00 [INF] Request starting HTTP/1.1 OPTIONS http://localhost:57678/funds/2 - -
2023-07-16 21:48:21.932 +07:00 [INF] CORS policy execution successful.
2023-07-16 21:48:21.932 +07:00 [INF] Request finished HTTP/1.1 OPTIONS http://localhost:57678/funds/2 - - - 204 - - 0.5524ms
2023-07-16 21:48:21.933 +07:00 [INF] Request starting HTTP/1.1 GET http://localhost:57678/funds/2 application/json -
2023-07-16 21:48:21.933 +07:00 [INF] CORS policy execution successful.
2023-07-16 21:48:21.933 +07:00 [INF] Executing endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web)'
2023-07-16 21:48:21.934 +07:00 [INF] Route matched with {action = "Handle", controller = "FundGet"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[hui_management_backend.Web.Endpoints.FundEndpoints.FundGetResponse]] HandleAsync(hui_management_backend.Web.Endpoints.FundEndpoints.FundGetRequest, System.Threading.CancellationToken) on controller hui_management_backend.Web.Endpoints.FundEndpoints.FundGet (hui_management_backend.Web).
2023-07-16 21:48:21.936 +07:00 [INF] Executed DbCommand (1ms) [Parameters=[@__ownerId_0='?' (DbType = Int32), @__fundId_1='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT [t].[Id], [t].[FundPrice], [t].[IsArchived], [t].[Name], [t].[OpenDate], [t].[OpenDateText], [t].[OwnerId], [t].[ServiceCost], [t].[Id0], [t].[AdditionalInfo], [t].[Address], [t].[BankName], [t].[BankNumber], [t].[Email], [t].[Name0], [t].[Password], [t].[PhoneNumber], [t].[Role], [t0].[Id], [t0].[FundId], [t0].[NickName], [t0].[UserId], [t0].[Id0], [t0].[AdditionalInfo], [t0].[Address], [t0].[BankName], [t0].[BankNumber], [t0].[Email], [t0].[Name], [t0].[Password], [t0].[PhoneNumber], [t0].[Role], [t1].[Id], [t1].[FundId], [t1].[sessionNumber], [t1].[takenDate], [t1].[Id0], [t1].[fundAmount], [t1].[fundMemberId], [t1].[predictedPrice], [t1].[remainPrice], [t1].[serviceCost], [t1].[sessionId], [t1].[Id1], [t1].[FundId0], [t1].[NickName], [t1].[UserId], [t1].[Id2], [t1].[FundSessionId], [t1].[fundMemberId0], [t1].[payCost]
FROM (
    SELECT TOP(1) [f].[Id], [f].[FundPrice], [f].[IsArchived], [f].[Name], [f].[OpenDate], [f].[OpenDateText], [f].[OwnerId], [f].[ServiceCost], [u].[Id] AS [Id0], [u].[AdditionalInfo], [u].[Address], [u].[BankName], [u].[BankNumber], [u].[Email], [u].[Name] AS [Name0], [u].[Password], [u].[PhoneNumber], [u].[Role]
    FROM [Funds] AS [f]
    INNER JOIN [User] AS [u] ON [f].[OwnerId] = [u].[Id]
    WHERE [u].[Id] = @__ownerId_0 AND [f].[Id] = @__fundId_1
) AS [t]
LEFT JOIN (
    SELECT [f0].[Id], [f0].[FundId], [f0].[NickName], [f0].[UserId], [u0].[Id] AS [Id0], [u0].[AdditionalInfo], [u0].[Address], [u0].[BankName], [u0].[BankNumber], [u0].[Email], [u0].[Name], [u0].[Password], [u0].[PhoneNumber], [u0].[Role]
    FROM [FundMember] AS [f0]
    INNER JOIN [User] AS [u0] ON [f0].[UserId] = [u0].[Id]
) AS [t0] ON [t].[Id] = [t0].[FundId]
LEFT JOIN (
    SELECT [f1].[Id], [f1].[FundId], [f1].[sessionNumber], [f1].[takenDate], [t2].[Id] AS [Id0], [t2].[fundAmount], [t2].[fundMemberId], [t2].[predictedPrice], [t2].[remainPrice], [t2].[serviceCost], [t2].[sessionId], [f2].[Id] AS [Id1], [f2].[FundId] AS [FundId0], [f2].[NickName], [f2].[UserId], [n].[Id] AS [Id2], [n].[FundSessionId], [n].[fundMemberId] AS [fundMemberId0], [n].[payCost]
    FROM [FundSession] AS [f1]
    LEFT JOIN [TakenSessionDetail] AS [t2] ON [f1].[Id] = [t2].[sessionId]
    LEFT JOIN [FundMember] AS [f2] ON [t2].[fundMemberId] = [f2].[Id]
    LEFT JOIN [NormalSessionDetail] AS [n] ON [f1].[Id] = [n].[FundSessionId]
) AS [t1] ON [t].[Id] = [t1].[FundId]
ORDER BY [t].[Id], [t].[Id0], [t0].[Id], [t0].[Id0], [t1].[Id], [t1].[Id0], [t1].[Id1]
2023-07-16 21:48:21.938 +07:00 [INF] Executing OkObjectResult, writing value of type 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGetResponse'.
2023-07-16 21:48:21.938 +07:00 [INF] Executed action hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web) in 4.5488ms
2023-07-16 21:48:21.938 +07:00 [INF] Executed endpoint 'hui_management_backend.Web.Endpoints.FundEndpoints.FundGet.HandleAsync (hui_management_backend.Web)'
2023-07-16 21:48:21.938 +07:00 [INF] Request finished HTTP/1.1 GET http://localhost:57678/funds/2 application/json - - 200 - application/json;+charset=utf-8 5.3324ms
